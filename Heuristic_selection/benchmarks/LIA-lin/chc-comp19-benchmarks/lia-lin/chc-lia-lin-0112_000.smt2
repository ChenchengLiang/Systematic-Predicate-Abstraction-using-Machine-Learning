(set-logic HORN)

(declare-fun |main@.lr.ph| ( Bool Bool Int ) Bool)
(declare-fun |main@.preheader.i.i| ( Bool Int Int Int Int ) Bool)
(declare-fun |main@entry| ( ) Bool)
(declare-fun |main@.lr.ph.split.us.split.us| ( Bool Int ) Bool)
(declare-fun |main@.lr.ph.split.split.us| ( Bool Int ) Bool)
(declare-fun |main@verifier.error.split| ( ) Bool)
(declare-fun |main@.backedge.i.backedge.us| ( Bool ) Bool)

(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        true
      )
      main@entry
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Bool) (F Bool) (G Int) (H Int) (I Bool) (J Bool) (K Bool) (L Bool) (M Int) (N Bool) (O Bool) (P Int) ) 
    (=>
      (and
        main@entry
        (and (= M 0)
     (= G H)
     (= B (+ 8 C))
     (= A C)
     (not (<= C 0))
     (or (not K) (not L) (= O J))
     (or (not K) (not L) (= N I))
     (or (not K) (not L) (= P M))
     (or (not E) (not F) (not L))
     (or (not (<= B 0)) (<= C 0))
     (or (not (<= A 0)) (<= C 0))
     (or (not L) (and E L))
     (or (not K) (and K L))
     (= K true)
     (= J true)
     (not I)
     (= F (= D 0)))
      )
      (main@.lr.ph N O P)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Bool) (F Bool) (G Bool) (H Bool) (I Bool) (J Bool) (K Bool) ) 
    (=>
      (and
        main@entry
        (and (= A C)
     (= B (+ 8 C))
     (not (<= C 0))
     (or (not F) (not I) (= H G))
     (or E (not F) (not I))
     (or (<= C 0) (not (<= A 0)))
     (or (not (<= B 0)) (<= C 0))
     (or (not K) (and J K))
     (or (not J) (and I J))
     (or (not I) (and F I))
     (or (not I) H)
     (= K true)
     (not G)
     (= E (= D 0)))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Bool) (E Bool) (F Int) (G Bool) (H Bool) (I Int) (J Bool) (K Bool) (L Bool) (M Bool) (N Bool) (O Bool) (P Int) (Q Bool) (R Bool) (S Bool) (T Int) (U Int) (V Bool) (W Bool) (X Bool) (Y Bool) (Z Int) (A1 Bool) (B1 Bool) (C1 Bool) (D1 Bool) (E1 Int) (F1 Bool) (G1 Bool) (H1 Int) ) 
    (=>
      (and
        (main@.lr.ph M E A)
        (and (= V (= U 0))
     (= Q M)
     (= L (= I 0))
     (= H (= F 1))
     (= C (= A 1))
     (= B1 Y)
     (= A1 X)
     (= W (and V Y))
     (= P 0)
     (= E1 Z)
     (= T 0)
     (or (not R) (not S) (= X Q))
     (or (not R) (not S) (= Z T))
     (or L (not R) (not S))
     (or (not J) (not L) (not R))
     (or (not J) (not K) (not M))
     (or (not G) H (not R))
     (or (not D) (not E) (not G))
     (or (not B) C (not D))
     (or (not D1) (and D1 O) (and R S))
     (or (not D1) (not O) (= X N))
     (or (not D1) (not O) (= Z P))
     (or (not C1) (not D1) (= G1 B1))
     (or (not C1) (not D1) (= F1 A1))
     (or (not C1) (not D1) (= H1 E1))
     (or (not W) (not C1) (not D1))
     (or (not R) (and G R))
     (or R (not S))
     (or (not O) (and K O))
     (or (not K) (and J K))
     (or (not J) (and J R))
     (or (not G) (and D G))
     (or (not D) (and B D))
     (or (not C1) (and C1 D1))
     (not N)
     (= C1 true)
     (= Y (= Z 0)))
      )
      (main@.lr.ph F1 G1 H1)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Bool) (D Bool) (E Bool) (F Bool) (G Bool) (H Int) ) 
    (=>
      (and
        (main@.lr.ph G D H)
        (and (or (not C) D (not E))
     (or (not A) (not B) (not C))
     (or (not E) (and C E))
     (or (not F) (and F E))
     (or (not C) (and A C))
     (= F true)
     (= B (= H 1)))
      )
      (main@.lr.ph.split.split.us G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Bool) (E Bool) (F Int) (G Bool) (H Bool) (I Bool) (J Bool) (K Bool) ) 
    (=>
      (and
        (main@.lr.ph K E A)
        (and (= H (= F 1))
     (or (not G) (not I) (not H))
     (or (not D) (not B) C)
     (or (not D) (not E) (not G))
     (or (not J) (and I J))
     (or (not I) (and G I))
     (or (not G) (and D G))
     (or (not D) (and D B))
     (= J true)
     (= C (= A 1)))
      )
      (main@.backedge.i.backedge.us K)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Bool) (D Bool) (E Bool) (F Bool) (G Bool) (H Int) ) 
    (=>
      (and
        (main@.lr.ph G D H)
        (and (or (not C) D (not E))
     (or (not A) B (not C))
     (or (not E) (and C E))
     (or (not F) (and F E))
     (or (not C) (and A C))
     (= F true)
     (= B (= H 1)))
      )
      (main@.lr.ph.split.us.split.us G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Bool) (E Bool) (F Int) (G Bool) (H Bool) (I Int) (J Bool) (K Bool) (L Bool) (M Bool) (N Bool) (O Bool) (P Int) (Q Bool) (R Bool) (S Bool) (T Int) (U Int) (V Int) (W Bool) (X Bool) (Y Bool) (Z Bool) (A1 Bool) (B1 Bool) (C1 Bool) (D1 Bool) (E1 Bool) (F1 Bool) (G1 Bool) (H1 Bool) (I1 Bool) (J1 Bool) ) 
    (=>
      (and
        (main@.lr.ph M E A)
        (and (= H (= F 1))
     (= C (= A 1))
     (= B1 Z)
     (= X (= U 0))
     (= Q M)
     (= L (= I 0))
     (= E1 C1)
     (= Y (and X W))
     (= T 0)
     (= P 0)
     (or (not A1) (and O A1) (and S R))
     (or (not S) (not R) (= Z Q))
     (or (not S) (not R) (= V T))
     (or (not O) (not A1) (= Z N))
     (or (not O) (not A1) (= V P))
     (or (not L) (not K) (not R))
     (or L (not S) (not R))
     (or (not J) (not M) (not K))
     (or (not G) H (not R))
     (or (not D) (not B) C)
     (or (not D) (not E) (not G))
     (or (not I1) (and H1 I1) (and I1 G1))
     (or (not H1) M (not K))
     (or (not D1) (not A1) (= C1 B1))
     (or (not D1) (not G1) (= F1 E1))
     (or Y (not D1) (not A1))
     (or (not R) (and G R))
     (or (not K) (and K R))
     (or (not S) R)
     (or (not O) (and J O))
     (or (not J) (and J K))
     (or (not G) (and D G))
     (or (not D) (and D B))
     (or (not J1) (and I1 J1))
     (or (not G1) (and D1 G1))
     (or (not H1) (and H1 K))
     (or F1 (not G1))
     (or (not D1) (and D1 A1))
     (not N)
     (= J1 true)
     (= W (= V 0)))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Int) (E Bool) (F Bool) (G Bool) (H Bool) (I Int) ) 
    (=>
      (and
        (main@.lr.ph.split.split.us H I)
        (and (= C (= A 0))
     (or (not E) (not G) (not F))
     (or (not B) (not C) (not F))
     (or (not F) (and B F))
     (or (not E) (and E F))
     (= E true)
     (= G (= D 0)))
      )
      (main@.lr.ph.split.split.us H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Bool) (E Bool) (F Bool) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Bool) (P Bool) (Q Int) (R Int) (S Bool) (T Bool) (U Int) (V Bool) (W Bool) (X Int) (Y Int) (Z Int) (A1 Bool) (B1 Bool) (C1 Int) (D1 Int) (E1 Int) (F1 Bool) (G1 Bool) (H1 Int) (I1 Bool) (J1 Int) (K1 Int) (L1 Int) (M1 Int) ) 
    (=>
      (and
        (main@.lr.ph.split.split.us I1 J1)
        (and (= F (= G 0))
     (= W (= U 0))
     (= T (= R 0))
     (= P (= N 0))
     (= B1 (= Z 3))
     (= K1 G)
     (= Q M1)
     (= M (+ 16 K1))
     (= J K)
     (= H I)
     (= L M)
     (= I (+ 48 K1))
     (= H1 0)
     (= K (+ 52 K1))
     (= M1 (+ 32 K1))
     (= E1 (+ 16 C1))
     (= D1 E1)
     (= Y (+ 4 C1))
     (= X Y)
     (or (not B) C (not D))
     (or (not V) W (not A1))
     (or (not S) T (not V))
     (or (not O) (not E) (not F))
     (or (not O) (not P) (not S))
     (or (not F1) (not G1) (= L1 H1))
     (or B1 (not G1) (not A1))
     (or (not D) (and B D))
     (or (not E) (and E D))
     (or (not A1) (and V A1))
     (or (not V) (and S V))
     (or (not S) (and O S))
     (or (not O) (and O E))
     (or (not G1) (and G1 A1))
     (or (not F1) (and F1 G1))
     (= F1 true)
     (= C (= A 0)))
      )
      (main@.preheader.i.i I1 J1 K1 L1 M1)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) (E Bool) (F Bool) (G Bool) (H Bool) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Bool) (A1 Bool) (B1 Bool) (C1 Bool) (D1 Bool) (E1 Bool) (F1 Bool) (G1 Bool) (H1 Bool) (I1 Bool) (J1 Bool) (K1 Bool) (L1 Bool) (M1 Bool) (N1 Bool) (O1 Bool) (P1 Bool) (Q1 Bool) (R1 Bool) (S1 Bool) (T1 Bool) (U1 Bool) (V1 Bool) (W1 Bool) (X1 Bool) (Y1 Bool) (Z1 Bool) (A2 Bool) (B2 Bool) ) 
    (=>
      (and
        (main@.lr.ph.split.split.us R1 A)
        (and (= E (= C 0))
     (= J1 (= I 0))
     (= T1 Q1)
     (= P1 R1)
     (= M1 R1)
     (= I1 (= P 0))
     (= H1 (= T 0))
     (= E1 (= U 0))
     (= B1 (= Y 3))
     (= X1 R1)
     (= V1 R1)
     (= R S)
     (= Q I)
     (= O (+ 16 Q))
     (= N O)
     (= M (+ 52 Q))
     (= L M)
     (= K (+ 48 Q))
     (= J K)
     (= W X)
     (= X (+ 4 V))
     (= S (+ 32 Q))
     (or (not Z1) (and U1 Z1) (and W1 Z1) (and Z1 S1))
     (or (not W1) (and A1 Z) (and D1 C1) (and F1 G1))
     (or (not F) G (not H))
     (or (not D) (not F) (not G))
     (or (not O1) (not N1) (= Q1 P1))
     (or J1 (not O1) (not N1))
     (or (not S1) (and K1 L1) (and O1 N1))
     (or (not K1) (not J1) (not N1))
     (or (not K1) (not L1) (= Q1 M1))
     (or I1 (not K1) (not L1))
     (or (not F1) (not I1) (not K1))
     (or (not F1) H1 (not C1))
     (or (not F1) (not G1) (not H1))
     (or E1 (not Z) (not C1))
     (or (not D1) (not E1) (not C1))
     (or (not A1) (not B1) (not Z))
     (or (not Z1) (not S1) (= Y1 T1))
     (or (not W1) (not Z1) (= Y1 X1))
     (or (not U1) (not D) E)
     (or (not U1) (not Z1) (= Y1 V1))
     (or (not N1) (and H N1))
     (or (not H) (and F H))
     (or (not D) (and D F))
     (or (not O1) N1)
     (or (not C1) (and F1 C1))
     (or (not Z) (and Z C1))
     (or (not K1) (and K1 N1))
     (or K1 (not L1))
     (or (not F1) (and F1 K1))
     (or F1 (not G1))
     (or (not D1) C1)
     (or (not A1) Z)
     (or (not B2) (and A2 B2))
     (or (not A2) (and Z1 A2))
     (or (not Z1) Y1)
     (or (not U1) (and U1 D))
     (= B2 true)
     (= G (= B 0)))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Bool) (E Int) (F Bool) (G Bool) (H Bool) (I Bool) (J Bool) (K Bool) (L Int) (M Bool) (N Bool) (O Bool) (P Int) (Q Int) (R Bool) (S Bool) (T Bool) (U Bool) (V Int) (W Bool) (X Bool) (Y Bool) (Z Bool) (A1 Int) (B1 Bool) (C1 Bool) (D1 Int) ) 
    (=>
      (and
        (main@.backedge.i.backedge.us I)
        (and (= R (= Q 0))
     (= M I)
     (= H (= E 0))
     (= C (= A 1))
     (= X U)
     (= W T)
     (= S (and R U))
     (= L 0)
     (= A1 V)
     (= P 0)
     (or (not N) (not O) (= T M))
     (or (not N) (not O) (= V P))
     (or H (not N) (not O))
     (or (not F) (not H) (not N))
     (or (not F) (not G) (not I))
     (or C (not D) (not B))
     (or (not Z) (and Z K) (and N O))
     (or (not Z) (not K) (= T J))
     (or (not Z) (not K) (= V L))
     (or (not Y) (not Z) (= C1 X))
     (or (not Y) (not Z) (= B1 W))
     (or (not Y) (not Z) (= D1 A1))
     (or (not S) (not Y) (not Z))
     (or (not N) (and D N))
     (or N (not O))
     (or (not K) (and G K))
     (or (not G) (and F G))
     (or (not F) (and F N))
     (or (not D) (and D B))
     (or (not Y) (and Y Z))
     (not J)
     (= Y true)
     (= U (= V 0)))
      )
      (main@.lr.ph B1 C1 D1)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Bool) (E Bool) ) 
    (=>
      (and
        (main@.backedge.i.backedge.us E)
        (and (or (not C) (not D) (not B))
     (or (not B) (and C B))
     (= B true)
     (= D (= A 1)))
      )
      (main@.backedge.i.backedge.us E)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Bool) (E Int) (F Bool) (G Bool) (H Bool) (I Bool) (J Bool) (K Bool) (L Int) (M Bool) (N Bool) (O Bool) (P Int) (Q Int) (R Int) (S Bool) (T Bool) (U Bool) (V Bool) (W Bool) (X Bool) (Y Bool) (Z Bool) (A1 Bool) (B1 Bool) (C1 Bool) (D1 Bool) (E1 Bool) (F1 Bool) ) 
    (=>
      (and
        (main@.backedge.i.backedge.us I)
        (and (= X V)
     (= T (= Q 0))
     (= M I)
     (= H (= E 0))
     (= C (= A 1))
     (= A1 Y)
     (= U (and T S))
     (= P 0)
     (= L 0)
     (or (not W) (and K W) (and O N))
     (or (not O) (not N) (= V M))
     (or (not O) (not N) (= R P))
     (or (not K) (not W) (= V J))
     (or (not K) (not W) (= R L))
     (or (not H) (not G) (not N))
     (or H (not O) (not N))
     (or (not F) (not I) (not G))
     (or (not B) C (not D))
     (or (not E1) (and D1 E1) (and E1 C1))
     (or (not D1) I (not G))
     (or (not Z) (not W) (= Y X))
     (or (not Z) (not C1) (= B1 A1))
     (or U (not Z) (not W))
     (or (not N) (and D N))
     (or (not G) (and G N))
     (or (not D) (and B D))
     (or (not O) N)
     (or (not K) (and F K))
     (or (not F) (and F G))
     (or (not F1) (and E1 F1))
     (or (not C1) (and Z C1))
     (or (not D1) (and D1 G))
     (or B1 (not C1))
     (or (not Z) (and Z W))
     (not J)
     (= F1 true)
     (= S (= R 0)))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Bool) (E Int) (F Bool) (G Bool) (H Bool) (I Int) (J Bool) (K Bool) (L Bool) (M Bool) (N Bool) (O Bool) (P Int) (Q Bool) (R Bool) (S Bool) (T Int) (U Int) (V Bool) (W Bool) (X Bool) (Y Bool) (Z Int) (A1 Bool) (B1 Bool) (C1 Bool) (D1 Bool) (E1 Int) (F1 Bool) (G1 Bool) (H1 Int) ) 
    (=>
      (and
        (main@.lr.ph.split.us.split.us M A)
        (and (= V (= U 0))
     (= Q M)
     (= L (= I 0))
     (= G (= E 1))
     (= D (not (<= 1 E)))
     (= B1 Y)
     (= A1 X)
     (= W (and V Y))
     (= P 0)
     (= E1 Z)
     (= T 0)
     (or (not R) (not S) (= X Q))
     (or (not R) (not S) (= Z T))
     (or L (not R) (not S))
     (or (not J) (not L) (not R))
     (or (not J) (not K) (not M))
     (or G (not H) (not F))
     (or (not C) (not D) (not F))
     (or (not D1) (and D1 O) (and R S))
     (or (not D1) (not O) (= X N))
     (or (not D1) (not O) (= Z P))
     (or (not C1) (not D1) (= G1 B1))
     (or (not C1) (not D1) (= F1 A1))
     (or (not C1) (not D1) (= H1 E1))
     (or (not W) (not C1) (not D1))
     (or (not F) (and C F))
     (or (not R) (and H R))
     (or R (not S))
     (or (not O) (and K O))
     (or (not K) (and J K))
     (or (not J) (and J R))
     (or (not H) (and H F))
     (or (not C) (and B C))
     (or (not C1) (and C1 D1))
     (not N)
     (= C1 true)
     (= Y (= Z 0)))
      )
      (main@.lr.ph F1 G1 H1)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Bool) (D Int) (E Bool) (F Bool) (G Bool) (H Bool) (I Bool) (J Bool) (K Bool) (L Int) (M Bool) (N Bool) (O Bool) (P Bool) (Q Int) ) 
    (=>
      (and
        (main@.lr.ph.split.us.split.us P Q)
        (and (= O (= L 0))
     (= J (= D 0))
     (= G (= D 1))
     (or (not B) (not H) C)
     (or (not B) (not E) (not C))
     (or (not M) (not O) (not N))
     (or (not K) (and F E) (and H I))
     (or (not J) (not H) (not I))
     (or (not F) (not G) (not E))
     (or (not H) (and B H))
     (or H (not I))
     (or (not E) (and B E))
     (or (not B) (and A B))
     (or (not N) (and K N))
     (or (not M) (and M N))
     (or (not F) E)
     (= M true)
     (= C (not (<= 1 D))))
      )
      (main@.lr.ph.split.us.split.us P Q)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Bool) (D Int) (E Bool) (F Bool) (G Bool) (H Bool) (I Bool) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Bool) (S Bool) (T Int) (U Int) (V Bool) (W Bool) (X Int) (Y Bool) (Z Bool) (A1 Int) (B1 Int) (C1 Int) (D1 Bool) (E1 Bool) (F1 Int) (G1 Int) (H1 Int) (I1 Bool) (J1 Bool) (K1 Int) (L1 Bool) (M1 Int) (N1 Int) (O1 Int) (P1 Int) ) 
    (=>
      (and
        (main@.lr.ph.split.us.split.us L1 M1)
        (and (= F (= D 0))
     (= I (= J 0))
     (= Z (= X 0))
     (= W (= U 0))
     (= S (= Q 0))
     (= E1 (= C1 3))
     (= N1 J)
     (= T P1)
     (= P (+ 16 N1))
     (= M N)
     (= K L)
     (= O P)
     (= L (+ 48 N1))
     (= K1 0)
     (= N (+ 52 N1))
     (= P1 (+ 32 N1))
     (= H1 (+ 16 F1))
     (= G1 H1)
     (= B1 (+ 4 F1))
     (= A1 B1)
     (or (not E) (not B) C)
     (or (not E) F (not G))
     (or (not Y) Z (not D1))
     (or (not V) W (not Y))
     (or (not R) (not H) (not I))
     (or (not R) (not S) (not V))
     (or (not I1) (not J1) (= O1 K1))
     (or E1 (not J1) (not D1))
     (or (not B) (and A B))
     (or (not G) (and E G))
     (or (not E) (and E B))
     (or (not H) (and H G))
     (or (not D1) (and Y D1))
     (or (not Y) (and V Y))
     (or (not V) (and R V))
     (or (not R) (and R H))
     (or (not J1) (and J1 D1))
     (or (not I1) (and I1 J1))
     (= I1 true)
     (= C (not (<= 1 D))))
      )
      (main@.preheader.i.i L1 M1 N1 O1 P1)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Int) (E Bool) (F Bool) (G Bool) (H Bool) (I Int) (J Bool) (K Bool) (L Bool) (M Bool) (N Bool) (O Int) (P Bool) (Q Bool) (R Bool) (S Bool) (T Bool) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Bool) (M1 Bool) (N1 Bool) (O1 Bool) (P1 Bool) (Q1 Bool) (R1 Bool) (S1 Bool) (T1 Bool) (U1 Bool) (V1 Bool) (W1 Bool) (X1 Int) (Y1 Bool) (Z1 Bool) (A2 Bool) (B2 Int) (C2 Int) (D2 Int) (E2 Bool) (F2 Bool) (G2 Bool) (H2 Bool) (I2 Bool) (J2 Bool) (K2 Bool) (L2 Bool) (M2 Bool) (N2 Bool) (O2 Bool) (P2 Bool) (Q2 Bool) (R2 Bool) (S2 Bool) (T2 Bool) (U2 Bool) (V2 Bool) (W2 Bool) (X2 Bool) (Y2 Bool) (Z2 Bool) (A3 Bool) (B3 Bool) (C3 Bool) (D3 Bool) (E3 Bool) (F3 Bool) ) 
    (=>
      (and
        (main@.lr.ph.split.us.split.us U2 A)
        (and (= N1 (= K1 3))
     (= S (= I 0))
     (= Q (= O 0))
     (= L (= I 1))
     (= H (not (<= 1 I)))
     (= Q1 (= G1 0))
     (= U1 (= D 0))
     (= S2 U2)
     (= G2 (and E2 F2))
     (= Y1 U2)
     (= W2 T2)
     (= P2 U2)
     (= M2 H2)
     (= J2 (= U 0))
     (= I2 (= B1 0))
     (= F2 (= C2 0))
     (= E2 (= D2 0))
     (= A3 U2)
     (= Y2 U2)
     (= J1 (+ 4 H1))
     (= I1 J1)
     (= D1 E1)
     (= C1 U)
     (= A1 (+ 16 C1))
     (= Z A1)
     (= Y (+ 52 C1))
     (= X Y)
     (= W (+ 48 C1))
     (= V W)
     (= X1 0)
     (= E1 (+ 32 C1))
     (= B2 0)
     (or (not C3) (and V2 C3) (and Z2 C3) (and C3 X2))
     (or (not Z2) (and L1 M1) (and R1 S1) (and O1 P1))
     (or (not V2) (and K2 L2) (and O2 N2) (and Q2 R2))
     (or (not R) S (not T))
     (or (not N) (and J K) (and M R))
     (or (not M) (not R) (not S))
     (or (not J) (not K) (not L))
     (or (not G) H (not R))
     (or (not G) (not H) (not J))
     (or (not C) (not J) L)
     (or (not R1) (not O1) T1)
     (or (not R1) (not S1) (not T1))
     (or (not Q1) (not O1) (not P1))
     (or (not L1) (not M1) (not N1))
     (or (not L1) Q1 (not O1))
     (or (not X2) (not P) Q)
     (or (not Q2) (not R2) (= T2 S2))
     (or (not O2) (not N2) (= T2 P2))
     (or (not K2) (and Z1 A2) (and K2 W1))
     (or (not K2) (not W1) (= H2 V1))
     (or (not K2) (not W1) (= D2 X1))
     (or (not K2) (not L2) (= T2 M2))
     (or (not K2) (not L2) G2)
     (or J2 (not Q2) (not R2))
     (or (not J2) (not Q2) (not N2))
     (or (not I2) (not N2) (not R1))
     (or I2 (not O2) (not N2))
     (or (not Z1) (not U1) (not F))
     (or (not Z1) (not A2) (= H2 Y1))
     (or (not Z1) (not A2) (= D2 B2))
     (or (not Z1) (not A2) U1)
     (or (not C3) (not X2) (= B3 Y2))
     (or (not E3) (and D3 E3) (and E3 C3))
     (or (not Z2) (not C3) (= B3 A3))
     (or (not V2) (not C3) (= B3 W2))
     (or (not U2) (not E) (not F))
     (or U2 (not D3) (not F))
     (or (not O1) (and R1 O1))
     (or O1 (not P1))
     (or (not T) (and R T))
     (or (not R) (and G R))
     (or (not P) (and N P))
     (or (not M) R)
     (or (not J) (and G J))
     (or J (not K))
     (or (not G) (and B G))
     (or (not F) (and Z1 F))
     (or (not E) (and E F))
     (or (not C) (and C J))
     (or (not R1) (and N2 R1))
     (or R1 (not S1))
     (or (not L1) (and L1 O1))
     (or L1 (not M1))
     (or (not W1) (and W1 E))
     (or (not N2) (and Q2 N2))
     (or (not X2) (and X2 P))
     (or (not Q2) (and Q2 T))
     (or Q2 (not R2))
     (or (not O2) N2)
     (or K2 (not L2))
     (or (not Z1) (and Z1 C))
     (or Z1 (not A2))
     (or (not F3) (and E3 F3))
     (or (not D3) (and D3 F))
     (or B3 (not C3))
     (not V1)
     (= F3 true)
     (= T1 (= F1 0)))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Bool) (R Int) (S Int) (T Bool) (U Bool) (V Bool) (W Bool) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Bool) (Q1 Bool) (R1 Bool) (S1 Bool) (T1 Bool) (U1 Int) (V1 Int) (W1 Bool) (X1 Bool) (Y1 Int) (Z1 Int) (A2 Bool) (B2 Bool) (C2 Bool) (D2 Bool) (E2 Int) (F2 Bool) (G2 Bool) (H2 Bool) (I2 Bool) (J2 Int) (K2 Bool) (L2 Bool) (M2 Int) ) 
    (=>
      (and
        (main@.preheader.i.i S1 U1 L1 B C)
        (and (= Q (not (<= O N)))
     (= D2 (= E2 0))
     (= A2 (= Z1 0))
     (= Q1 (= O1 0))
     (= G2 D2)
     (= F2 C2)
     (= B2 (and A2 D2))
     (= V1 (+ 1 U1))
     (= R Y)
     (= O M)
     (= K L)
     (= I J)
     (= H (+ 2 F))
     (= G H)
     (= F E)
     (= E (+ A (* 64 B)))
     (= D (* 4 N))
     (= E1 (+ 96 L1))
     (= C1 (+ 88 L1))
     (= B1 C1)
     (= Z A1)
     (= Y (+ 56 L1))
     (= X Y)
     (= N (+ 1 B))
     (= L (+ C D))
     (= M1 N1)
     (= J1 K1)
     (= H1 I1)
     (= G1 (+ 104 L1))
     (= A1 (+ 80 L1))
     (= I1 (+ 112 L1))
     (= D1 E1)
     (= N1 (+ 136 L1))
     (= K1 (+ 128 L1))
     (= F1 G1)
     (= J2 E2)
     (= Y1 V1)
     (or (not U) (not V) W)
     (or (not T) (not U) (not W))
     (or (not P) (not Q) (not U))
     (or (not R1) (not S1) (not T1))
     (or (not P1) (and P1 T) (and U V))
     (or (not P1) Q1 (not R1))
     (or (not I2) (not X1) (= C2 W1))
     (or (not I2) (not X1) (= E2 Y1))
     (or (not H2) (not I2) (= L2 G2))
     (or (not H2) (not I2) (= K2 F2))
     (or (not H2) (not I2) (= M2 J2))
     (or (not B2) (not H2) (not I2))
     (or (not (<= E 0)) (<= A 0))
     (or (not U) (and P U))
     (or U (not V))
     (or (not T) (and T U))
     (or (not X1) (and T1 X1))
     (or (not T1) (and R1 T1))
     (or (not R1) (and P1 R1))
     (or (not I2) (and I2 X1))
     (or (not H2) (and H2 I2))
     (not W1)
     (= H2 true)
     (= W (= S 0)))
      )
      (main@.lr.ph K2 L2 M2)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Bool) (Q Bool) (R Int) (S Bool) (T Int) (U Int) (V Int) (W Int) ) 
    (=>
      (and
        (main@.preheader.i.i S T U B W)
        (and (= D (+ A (* 64 B)))
     (= F G)
     (= G (+ 2 E))
     (= C (* 4 O))
     (= R O)
     (= E D)
     (= M L)
     (= O (+ 1 B))
     (= K (+ W C))
     (= J K)
     (= H I)
     (or (not P) (not Q) (= V R))
     (or (not P) (not Q) N)
     (or (<= A 0) (not (<= D 0)))
     (or (not P) (and P Q))
     (= P true)
     (= N (not (<= M O))))
      )
      (main@.preheader.i.i S T U V W)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Bool) (R Int) (S Int) (T Bool) (U Bool) (V Bool) (W Bool) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Bool) (Q1 Bool) (R1 Bool) (S1 Int) (T1 Int) (U1 Bool) (V1 Bool) (W1 Int) (X1 Int) (Y1 Int) (Z1 Bool) (A2 Bool) (B2 Bool) (C2 Bool) (D2 Bool) (E2 Bool) (F2 Bool) (G2 Bool) (H2 Bool) (I2 Bool) (J2 Bool) (K2 Bool) (L2 Bool) (M2 Bool) (N2 Bool) (O2 Bool) (P2 Bool) (Q2 Bool) ) 
    (=>
      (and
        (main@.preheader.i.i H2 S1 L1 B C)
        (and (= C2 (and Z1 A2))
     (= W (= S 0))
     (= A2 (= X1 0))
     (= Z1 (= Y1 0))
     (= Q1 (= O1 0))
     (= L2 H2)
     (= J2 G2)
     (= F2 D2)
     (= T1 (+ 1 S1))
     (= D (* 4 N))
     (= E (+ A (* 64 B)))
     (= O M)
     (= N (+ 1 B))
     (= L (+ C D))
     (= K L)
     (= I J)
     (= H (+ 2 F))
     (= G H)
     (= F E)
     (= I1 (+ 112 L1))
     (= G1 (+ 104 L1))
     (= F1 G1)
     (= D1 E1)
     (= C1 (+ 88 L1))
     (= B1 C1)
     (= A1 (+ 80 L1))
     (= Z A1)
     (= Y (+ 56 L1))
     (= X Y)
     (= R Y)
     (= N1 (+ 136 L1))
     (= K1 (+ 128 L1))
     (= E1 (+ 96 L1))
     (= W1 T1)
     (= M1 N1)
     (= H1 I1)
     (= J1 K1)
     (or (not U) (not P) (not Q))
     (or (not U) (not V) W)
     (or (not T) (not U) (not W))
     (or (not E2) (not I2) (= G2 F2))
     (or (not E2) (not I2) C2)
     (or (not B2) (not H2) (not R1))
     (or (not V1) (not E2) (= D2 U1))
     (or (not V1) (not E2) (= Y1 W1))
     (or (not P1) (and P1 T) (and U V))
     (or (not P1) Q1 (not B2))
     (or (not N2) (and K2 N2) (and N2 I2))
     (or (not N2) (not I2) (= M2 J2))
     (or (not P2) (and O2 P2) (and P2 N2))
     (or (not O2) (not B2) H2)
     (or (not K2) (not P1) (not Q1))
     (or (not K2) (not N2) (= M2 L2))
     (or (not (<= E 0)) (<= A 0))
     (or (not U) (and U P))
     (or U (not V))
     (or (not T) (and T U))
     (or (not R1) (and B2 R1))
     (or (not I2) (and E2 I2))
     (or (not E2) (and V1 E2))
     (or (not B2) (and P1 B2))
     (or (not V1) (and V1 R1))
     (or (not Q2) (and P2 Q2))
     (or (not O2) (and O2 B2))
     (or M2 (not N2))
     (or (not K2) (and K2 P1))
     (not U1)
     (= Q2 true)
     (= Q (not (<= O N))))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@verifier.error.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)

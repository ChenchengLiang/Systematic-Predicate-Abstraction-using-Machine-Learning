(set-logic HORN)

(declare-fun |invariant| ( Int Int Int Int Int Int Int Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (and (= J (+ 1 C))
     (= I C)
     (= H 1)
     (= G (+ 1 A))
     (= F A)
     (= E 0)
     (= C 0)
     (= A 0)
     (not (<= 5 D))
     (not (<= 5 B))
     (<= 0 D)
     (<= 0 B)
     (= K 1))
      )
      (invariant H F G A K I J C E B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) ) 
    (=>
      (and
        (invariant A B C D E F G H I J K)
        (let ((a!1 (or (and (<= M (+ 5 I))
                    (<= I (+ (- 5) M))
                    (= L C)
                    (= N H)
                    (= O K)
                    (= I J))
               (and (<= O (+ 5 I))
                    (<= I (+ (- 5) O))
                    (= L D)
                    (= M J)
                    (= N G)
                    (= I K)))))
(let ((a!2 (or (and a!1 (= P I))
               (and (or (= P J) (= P K))
                    (<= P J)
                    (<= P K)
                    (not (<= J I))
                    (not (<= K I))
                    (= L D)
                    (= M J)
                    (= N H)
                    (= O K)))))
  (and (= F H)
       (= E 1)
       (= C (+ 1 D))
       (= B D)
       (= A 1)
       (= V 1)
       (= U (+ 1 N))
       (= T N)
       (= S 1)
       (= R (+ 1 L))
       (= Q L)
       a!2
       (= G (+ 1 H)))))
      )
      (invariant S Q R L V T U N P M O)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (invariant A B C D E F G H I J K)
        (let ((a!1 (not (<= (+ H (* (- 1) D)) 1)))
      (a!2 (not (<= (- 1) (+ H (* (- 1) D))))))
  (or a!1 a!2))
      )
      false
    )
  )
)

(check-sat)
(exit)

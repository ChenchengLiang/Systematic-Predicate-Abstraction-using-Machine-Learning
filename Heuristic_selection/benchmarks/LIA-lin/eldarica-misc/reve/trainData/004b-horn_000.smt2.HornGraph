-------------
INV1(P0, P1, P2, P4, P5) :- INV1(P0, P1, P2, P4 + -1, P9), P9 + P4 + -1 = P5 & !(P0 >= P1) & P0 + -1*(P4 + -1) >= 0 & P6 = P0 & P3 = P0 & P7 = P0.
Head arguments: ListBuffer((P0,P0), (P1,P1), (P2,P2), (P4,P4), (P5,P5))
Body arguments: ListBuffer((P0,P0), (P1,P1), (P2,P2), ((P4 + -1),(P4 + -1)), (P9,P9))
Common Arguments:ListBuffer((P0,P0), (P1,P1), (P2,P2))
relativeComplimentOfHeadArg:ListBuffer((P4,P4), (P5,P5))
variables in guard: ListBuffer(P0, P1, P4, P6, P3, P7)
Data flow:
P4 <- _P4
P5 <- _P5
P0<-P0
P1<-P1
P2<-P2
Guard:
!((P0 + -1 * P1) >= 0)
((1 + (P0 + -1 * _P4)) >= 0)
((P6 + -1 * P0) = 0)
((P3 + -1 * P0) = 0)
((P7 + -1 * P0) = 0)
((-1 + (P9 + (_P4 + -1 * _P5))) = 0)
dataflow number:2
guard number:6
-------------
INV1(P0, P1, P2, P4, P5) :- INV1(P0, P1 + -1, P9, P4 + -1, P11), P11 + P4 + -1 = P5 & P0 + -1*(P4 + -1) >= 0 & P0 + -1*(P1 + -1) >= 0 & P9 + P1 + -1 = P2 & P6 = P0 & P3 = P0 & P7 = P0.
Head arguments: ListBuffer((P0,P0), (P1,P1), (P2,P2), (P4,P4), (P5,P5))
Body arguments: ListBuffer((P0,P0), ((P1 + -1),(P1 + -1)), (P9,P9), ((P4 + -1),(P4 + -1)), (P11,P11))
Common Arguments:ListBuffer((P0,P0))
relativeComplimentOfHeadArg:ListBuffer((P1,P1), (P2,P2), (P4,P4), (P5,P5))
variables in guard: ListBuffer(P0, P4, P1, P6, P3, P7)
Data flow:
P1 <- _P1
P2 <- _P2
P4 <- _P4
P5 <- _P5
P0<-P0
Guard:
((1 + (P0 + -1 * _P4)) >= 0)
((1 + (P0 + -1 * _P1)) >= 0)
((P6 + -1 * P0) = 0)
((P3 + -1 * P0) = 0)
((P7 + -1 * P0) = 0)
((-1 + (P11 + (_P4 + -1 * _P5))) = 0)
((-1 + (P9 + (_P1 + -1 * _P2))) = 0)
dataflow number:4
guard number:7
-------------
INV1(P0, P1, P2, P4, P5) :- INV1(P0, P1 + -1, P9, P4, P5), P9 + P1 + -1 = P2 & P0 + -1*(P1 + -1) >= 0 & !(P0 >= P4) & P6 = P0 & P3 = P0 & P7 = P0.
Head arguments: ListBuffer((P0,P0), (P1,P1), (P2,P2), (P4,P4), (P5,P5))
Body arguments: ListBuffer((P0,P0), ((P1 + -1),(P1 + -1)), (P9,P9), (P4,P4), (P5,P5))
Common Arguments:ListBuffer((P0,P0), (P4,P4), (P5,P5))
relativeComplimentOfHeadArg:ListBuffer((P1,P1), (P2,P2))
variables in guard: ListBuffer(P0, P1, P4, P6, P3, P7)
Data flow:
P1 <- _P1
P2 <- _P2
P0<-P0
P4<-P4
P5<-P5
Guard:
((1 + (P0 + -1 * _P1)) >= 0)
!((P0 + -1 * P4) >= 0)
((P6 + -1 * P0) = 0)
((P3 + -1 * P0) = 0)
((P7 + -1 * P0) = 0)
((-1 + (P9 + (_P1 + -1 * _P2))) = 0)
dataflow number:2
guard number:6
-------------
INV1(P0, P1, P2, P4, P5) :- P7 = P3 & P5 = 0 & P1 = 0 & P2 = 0 & P4 = 1 & P6 = P3 & P0 = P3.
Head arguments: ListBuffer((P0,P0), (P1,P1), (P2,P2), (P4,P4), (P5,P5))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P0,P0), (P1,P1), (P2,P2), (P4,P4), (P5,P5))
variables in guard: ListBuffer(P7, P3, P6)
Data flow:
P0 <- P3
P1 <- 0
P2 <- 0
P4 <- 1
P5 <- 0
Guard:
((P7 + -1 * P3) = 0)
((P6 + -1 * P3) = 0)
dataflow number:5
guard number:2
-------------
false :- INV1(P2, P3, P0, P5, P1), !(P2 >= P3) & !(P2 >= P5) & P0 != P1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P2,P2), (P3,P3), (P0,P0), (P5,P5), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(P2, P3, P5, P0, P1)
Data flow:
Guard:
!((P2 + -1 * P3) >= 0)
!((P2 + -1 * P5) >= 0)
!((P0 + -1 * P1) = 0)
dataflow number:0
guard number:3
Hints:
-----------

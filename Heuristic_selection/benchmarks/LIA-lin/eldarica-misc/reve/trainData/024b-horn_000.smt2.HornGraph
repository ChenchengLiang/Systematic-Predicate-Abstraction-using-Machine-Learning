-------------
REC_g_g(P0, P1, P2, P3, P4) :- REC__g(P2 + -1, P6, P4), P2 + P3 = P6 & !(0 >= P2) & 0 >= P0 & P1 = 0.
Head arguments: ListBuffer((P0,P0), (P1,P1), (P2,P2), (P3,P3), (P4,P4))
Body arguments: ListBuffer(((P2 + -1),(P2 + -1)), (P6,P6), (P4,P4))
Common Arguments:ListBuffer((P4,P4))
relativeComplimentOfHeadArg:ListBuffer((P0,P0), (P1,P1), (P2,P2), (P3,P3))
variables in guard: ListBuffer(P2, P0)
Data flow:
P0 <- _P0
P1 <- 0
P2 <- _P2
P3 <- _P3
P4<-P4
Guard:
((-1 + _P2) >= 0)
(-1 * _P0 >= 0)
((_P2 + (_P3 + -1 * P6)) = 0)
dataflow number:4
guard number:3
-------------
REC_g_g(P0, P1, P2, P3, P4) :- 0 >= P0 & 0 >= P2 & P4 = P3 & P1 = 0.
Head arguments: ListBuffer((P0,P0), (P1,P1), (P2,P2), (P3,P3), (P4,P4))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P0,P0), (P1,P1), (P2,P2), (P3,P3), (P4,P4))
variables in guard: ListBuffer(P0, P2)
Data flow:
P0 <- _P0
P1 <- 0
P2 <- _P2
P3 <- _P3
P4 <- _P4
Guard:
(-1 * _P0 >= 0)
(-1 * _P2 >= 0)
((_P4 + -1 * _P3) = 0)
dataflow number:5
guard number:3
-------------
REC_g_g(P0, P1, P2, P3, P4) :- REC_g_g(P0 + -1, P5, P2 + -1, P8, P4), P0 + P5 = P1 & !(0 >= P2) & !(0 >= P0) & P2 + P3 = P8.
Head arguments: ListBuffer((P0,P0), (P1,P1), (P2,P2), (P3,P3), (P4,P4))
Body arguments: ListBuffer(((P0 + -1),(P0 + -1)), (P5,P5), ((P2 + -1),(P2 + -1)), (P8,P8), (P4,P4))
Common Arguments:ListBuffer((P4,P4))
relativeComplimentOfHeadArg:ListBuffer((P0,P0), (P1,P1), (P2,P2), (P3,P3))
variables in guard: ListBuffer(P2, P0)
Data flow:
P0 <- _P0
P1 <- _P1
P2 <- _P2
P3 <- _P3
P4<-P4
Guard:
((-1 + _P2) >= 0)
((-1 + _P0) >= 0)
((_P0 + (P5 + -1 * _P1)) = 0)
((_P2 + (_P3 + -1 * P8)) = 0)
dataflow number:4
guard number:4
-------------
REC_g_g(P0, P1, P2, P3, P6) :- REC_g_(P0 + -1, P4), P0 + P4 = P1 & 0 >= P2 & !(0 >= P0) & P6 = P3.
Head arguments: ListBuffer((P0,P0), (P1,P1), (P2,P2), (P3,P3), (P6,P6))
Body arguments: ListBuffer(((P0 + -1),(P0 + -1)), (P4,P4))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P0,P0), (P1,P1), (P2,P2), (P3,P3), (P6,P6))
variables in guard: ListBuffer(P2, P0)
Data flow:
P0 <- _P0
P1 <- _P1
P2 <- _P2
P3 <- _P3
P6 <- _P6
Guard:
(-1 * _P2 >= 0)
((-1 + _P0) >= 0)
((_P0 + (P4 + -1 * _P1)) = 0)
((_P6 + -1 * _P3) = 0)
dataflow number:5
guard number:4
-------------
REC_g_(P0, P1) :- 0 >= P0 & P1 = 0.
Head arguments: ListBuffer((P0,P0), (P1,P1))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P0,P0), (P1,P1))
variables in guard: ListBuffer(P0)
Data flow:
P0 <- _P0
P1 <- 0
Guard:
(-1 * _P0 >= 0)
dataflow number:2
guard number:1
-------------
REC_g_(P0, P1) :- REC_g_(P0 + -1, P2), P0 + P2 = P1 & !(0 >= P0).
Head arguments: ListBuffer((P0,P0), (P1,P1))
Body arguments: ListBuffer(((P0 + -1),(P0 + -1)), (P2,P2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P0,P0), (P1,P1))
variables in guard: ListBuffer(P0)
Data flow:
P0 <- _P0
P1 <- _P1
Guard:
((-1 + _P0) >= 0)
((_P0 + (P2 + -1 * _P1)) = 0)
dataflow number:2
guard number:2
-------------
REC__g(P0, P1, P2) :- 0 >= P0 & P2 = P1.
Head arguments: ListBuffer((P0,P0), (P1,P1), (P2,P2))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P0,P0), (P1,P1), (P2,P2))
variables in guard: ListBuffer(P0)
Data flow:
P0 <- _P0
P1 <- _P1
P2 <- _P2
Guard:
(-1 * _P0 >= 0)
((_P2 + -1 * _P1) = 0)
dataflow number:3
guard number:2
-------------
REC__g(P0, P1, P2) :- REC__g(P0 + -1, P4, P2), P0 + P1 = P4 & !(0 >= P0).
Head arguments: ListBuffer((P0,P0), (P1,P1), (P2,P2))
Body arguments: ListBuffer(((P0 + -1),(P0 + -1)), (P4,P4), (P2,P2))
Common Arguments:ListBuffer((P2,P2))
relativeComplimentOfHeadArg:ListBuffer((P0,P0), (P1,P1))
variables in guard: ListBuffer(P0)
Data flow:
P0 <- _P0
P1 <- _P1
P2<-P2
Guard:
((-1 + _P0) >= 0)
((_P0 + (_P1 + -1 * P4)) = 0)
dataflow number:2
guard number:2
-------------
false :- REC_g_g(P4, P0, P4, 0, P1), P0 != P1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P4,P4), (P0,P0), (P4,P4), (0,0), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(P0, P1)
Data flow:
REC_g_g_argument_3<-0
Guard:
!((P0 + -1 * P1) = 0)
dataflow number:0
guard number:1
Hints:
-----------

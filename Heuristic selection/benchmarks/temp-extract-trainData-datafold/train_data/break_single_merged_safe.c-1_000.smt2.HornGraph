-------------
inv_main4(P1, P0) :- 0 = P0.
Head arguments: ListBuffer((P1,P1), (P0,P0))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P1,P1), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
List(P1, P0)
List()
(0 = P0)
variables in guard: ListBuffer()
Data flow:
P0 <- 0
Guard:
dataflow number:1
guard number:0
-------------
inv_main10(P1, P0, P3) :- inv_main10(P1, P0, P3 - 1), 10 >= P3 - 1 & P3 - 1 != P1.
Head arguments: ListBuffer((P1,P1), (P0,P0), (P3,P3))
Body arguments: ListBuffer((P1,P1), (P0,P0), ((P3 + -1),(P3 + -1)))
Common Arguments:ListBuffer((P1,P1), (P0,P0))
relativeComplimentOfHeadArg:ListBuffer((P3,P3))
relativeComplimentOfBodyArg:ListBuffer(((P3 + -1),(P3 + -1)))
List(P1, P0, P3)
List(inv_main10(P1, P0, (P3 + -1)))
(((10 + -1 * (P3 + -1)) >= 0) & !((P3 + -1) = P1))
variables in guard: ListBuffer(-1, P3)
Data flow:
P3 <- _P3
P3<-(P3 + -1)
P1<-P1
P0<-P0
Guard:
((11 + -1 * _P3) >= 0)
!((-1 + _P3) = P1)
dataflow number:1
guard number:2
-------------
inv_main4(P1, P2) :- inv_main4(P1, P2 - 1), 10 >= P2 - 1 & P2 - 1 != P1.
Head arguments: ListBuffer((P1,P1), (P2,P2))
Body arguments: ListBuffer((P1,P1), ((P2 + -1),(P2 + -1)))
Common Arguments:ListBuffer((P1,P1))
relativeComplimentOfHeadArg:ListBuffer((P2,P2))
relativeComplimentOfBodyArg:ListBuffer(((P2 + -1),(P2 + -1)))
List(P1, P2)
List(inv_main4(P1, (P2 + -1)))
(((10 + -1 * (P2 + -1)) >= 0) & !((P2 + -1) = P1))
variables in guard: ListBuffer(-1, P2)
Data flow:
P2 <- _P2
P2<-(P2 + -1)
P1<-P1
Guard:
((11 + -1 * _P2) >= 0)
!((-1 + _P2) = P1)
dataflow number:1
guard number:2
-------------
inv_main10(P2, P1, P0) :- inv_main4(P2, P1), 10 < P1 & 0 = P0.
Head arguments: ListBuffer((P2,P2), (P1,P1), (P0,P0))
Body arguments: ListBuffer((P2,P2), (P1,P1))
Common Arguments:ListBuffer((P2,P2), (P1,P1))
relativeComplimentOfHeadArg:ListBuffer((P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
List(P2, P1, P0)
List(inv_main4(P2, P1))
(!((10 + -1 * P1) >= 0) & (0 = P0))
variables in guard: ListBuffer(-1, P1)
Data flow:
P0 <- 0
P2<-P2
P1<-P1
Guard:
!((10 + -1 * P1) >= 0)
dataflow number:1
guard number:1
-------------
inv_main10(P2, P1, P0) :- inv_main4(P2, P2), 10 >= P2 & 0 = P0 & P1 = P2.
Head arguments: ListBuffer((P2,P2), (P1,P1), (P0,P0))
Body arguments: ListBuffer((P2,P2), (P2,P2))
Common Arguments:ListBuffer((P2,P2))
relativeComplimentOfHeadArg:ListBuffer((P1,P1), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
List(P2, P1, P0)
List(inv_main4(P2, P2))
((((10 + -1 * P2) >= 0) & (0 = P0)) & (P1 = P2))
variables in guard: ListBuffer(-1, P2)
Data flow:
P1 <- P2
P0 <- 0
Guard:
((10 + -1 * P2) >= 0)
dataflow number:2
guard number:1
-------------
false :- inv_main10(P2, P0, P2), P2 != P0.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P2,P2), (P0,P0), (P2,P2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P2,P2), (P0,P0), (P2,P2))
List()
List(inv_main10(P2, P0, P2))
!(P2 = P0)
variables in guard: ListBuffer()
Data flow:
Guard:
!(P2 = P0)
dataflow number:0
guard number:1
-------------
false :- inv_main10(P1, P0, P2), P2 != P0 & P2 >= 11.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P1,P1), (P0,P0), (P2,P2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P1,P1), (P0,P0), (P2,P2))
List()
List(inv_main10(P1, P0, P2))
(!(P2 = P0) & ((P2 + -11) >= 0))
variables in guard: ListBuffer(P2, -11)
Data flow:
Guard:
!(P2 = P0)
((P2 + -11) >= 0)
dataflow number:0
guard number:2
Hints:
-----------

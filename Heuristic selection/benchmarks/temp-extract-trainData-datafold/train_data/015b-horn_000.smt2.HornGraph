-------------
REC_f_f(P4, P0, P3, P2) :- REC__f(P3 - 1, P2), 1 >= P4 & 1 < P3 & P2 < 0 & P0 = P4.
Head arguments: ListBuffer((P4,P4), (P0,P0), (P3,P3), (P2,P2))
Body arguments: ListBuffer(((P3 + -1),(P3 + -1)), (P2,P2))
Common Arguments:ListBuffer((P2,P2))
relativeComplimentOfHeadArg:ListBuffer((P4,P4), (P0,P0), (P3,P3))
relativeComplimentOfBodyArg:ListBuffer(((P3 + -1),(P3 + -1)))
List(P4, P0, P3, P2)
List(REC__f((P3 + -1), P2))
(((((1 + -1 * P4) >= 0) & !((1 + -1 * P3) >= 0)) & !(P2 >= 0)) & (P0 = P4))
variables in guard: ListBuffer(-1, P4, P3, P2)
Data flow:
P4 <- _P4
P0 <- _P0
P3 <- _P3
P2<-P2
Guard:
((1 + -1 * _P4) >= 0)
((-2 + _P3) >= 0)
!(P2 >= 0)
(_P0 = _P4)
dataflow number:3
guard number:4
-------------
REC_f_f(P5, P0, P4, P3) :- REC__f(P4 - 1, P2), P4 + P2 = P3 & 1 < P4 & 1 >= P5 & P2 >= 0 & P0 = P5.
Head arguments: ListBuffer((P5,P5), (P0,P0), (P4,P4), (P3,P3))
Body arguments: ListBuffer(((P4 + -1),(P4 + -1)), (P2,P2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P5,P5), (P0,P0), (P4,P4), (P3,P3))
relativeComplimentOfBodyArg:ListBuffer(((P4 + -1),(P4 + -1)), (P2,P2))
List(P5, P0, P4, P3)
List(REC__f((P4 + -1), P2))
((((((P4 + P2) = P3) & !((1 + -1 * P4) >= 0)) & ((1 + -1 * P5) >= 0)) & (P2 >= 0)) & (P0 = P5))
variables in guard: ListBuffer(-1, P4, P5, P2)
Data flow:
P5 <- _P5
P0 <- _P0
P4 <- _P4
P3 <- _P3
Guard:
((-2 + _P4) >= 0)
((1 + -1 * _P5) >= 0)
(P2 >= 0)
((_P4 + P2) = _P3)
(_P0 = _P5)
dataflow number:4
guard number:5
-------------
REC_f_f(P3, P1, P2, P0) :- 1 >= P2 & 1 >= P3 & P0 = P2 & P1 = P3.
Head arguments: ListBuffer((P3,P3), (P1,P1), (P2,P2), (P0,P0))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P3,P3), (P1,P1), (P2,P2), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
List(P3, P1, P2, P0)
List()
(((((1 + -1 * P2) >= 0) & ((1 + -1 * P3) >= 0)) & (P0 = P2)) & (P1 = P3))
variables in guard: ListBuffer(-1, P2, P3)
Data flow:
P3 <- _P3
P1 <- _P1
P2 <- _P2
P0 <- _P0
Guard:
((1 + -1 * _P2) >= 0)
((1 + -1 * _P3) >= 0)
(_P0 = _P2)
(_P1 = _P3)
dataflow number:4
guard number:4
-------------
REC_f_f(P6, P5, P4, P3) :- REC_f_f(P6 - 1, P2, P4 - 1, P3), P6 + P2 = P5 & 1 < P4 & 1 < P6 & P3 < 0.
Head arguments: ListBuffer((P6,P6), (P5,P5), (P4,P4), (P3,P3))
Body arguments: ListBuffer(((P6 + -1),(P6 + -1)), (P2,P2), ((P4 + -1),(P4 + -1)), (P3,P3))
Common Arguments:ListBuffer((P3,P3))
relativeComplimentOfHeadArg:ListBuffer((P6,P6), (P5,P5), (P4,P4))
relativeComplimentOfBodyArg:ListBuffer(((P6 + -1),(P6 + -1)), (P2,P2), ((P4 + -1),(P4 + -1)))
List(P6, P5, P4, P3)
List(REC_f_f((P6 + -1), P2, (P4 + -1), P3))
(((((P6 + P2) = P5) & !((1 + -1 * P4) >= 0)) & !((1 + -1 * P6) >= 0)) & !(P3 >= 0))
variables in guard: ListBuffer(-1, P4, P6, P3)
Data flow:
P6 <- _P6
P5 <- _P5
P4 <- _P4
P6<-(P6 + -1)
P5<-P2
P4<-(P4 + -1)
P3<-P3
Guard:
((-2 + _P4) >= 0)
((-2 + _P6) >= 0)
!(P3 >= 0)
((_P6 + P2) = _P5)
dataflow number:3
guard number:4
-------------
REC_f_f(P7, P6, P5, P4) :- REC_f_f(P7 - 1, P3, P5 - 1, P2), P7 + P3 = P6 & 1 < P5 & 1 < P7 & P2 >= 0 & P5 + P2 = P4.
Head arguments: ListBuffer((P7,P7), (P6,P6), (P5,P5), (P4,P4))
Body arguments: ListBuffer(((P7 + -1),(P7 + -1)), (P3,P3), ((P5 + -1),(P5 + -1)), (P2,P2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P7,P7), (P6,P6), (P5,P5), (P4,P4))
relativeComplimentOfBodyArg:ListBuffer(((P7 + -1),(P7 + -1)), (P3,P3), ((P5 + -1),(P5 + -1)), (P2,P2))
List(P7, P6, P5, P4)
List(REC_f_f((P7 + -1), P3, (P5 + -1), P2))
((((((P7 + P3) = P6) & !((1 + -1 * P5) >= 0)) & !((1 + -1 * P7) >= 0)) & (P2 >= 0)) & ((P5 + P2) = P4))
variables in guard: ListBuffer(-1, P5, P7, P2)
Data flow:
P7 <- _P7
P6 <- _P6
P5 <- _P5
P4 <- _P4
P7<-(P7 + -1)
P6<-P3
P5<-(P5 + -1)
P4<-P2
Guard:
((-2 + _P5) >= 0)
((-2 + _P7) >= 0)
(P2 >= 0)
((_P7 + P3) = _P6)
((_P5 + P2) = _P4)
dataflow number:4
guard number:5
-------------
REC_f_f(P5, P4, P3, P0) :- REC_f_(P5 - 1, P2), P5 + P2 = P4 & 1 >= P3 & 1 < P5 & P0 = P3.
Head arguments: ListBuffer((P5,P5), (P4,P4), (P3,P3), (P0,P0))
Body arguments: ListBuffer(((P5 + -1),(P5 + -1)), (P2,P2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P5,P5), (P4,P4), (P3,P3), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer(((P5 + -1),(P5 + -1)), (P2,P2))
List(P5, P4, P3, P0)
List(REC_f_((P5 + -1), P2))
(((((P5 + P2) = P4) & ((1 + -1 * P3) >= 0)) & !((1 + -1 * P5) >= 0)) & (P0 = P3))
variables in guard: ListBuffer(-1, P3, P5)
Data flow:
P5 <- _P5
P4 <- _P4
P3 <- _P3
P0 <- _P0
Guard:
((1 + -1 * _P3) >= 0)
((-2 + _P5) >= 0)
((_P5 + P2) = _P4)
(_P0 = _P3)
dataflow number:4
guard number:4
-------------
REC_f_(P1, P0) :- 1 >= P1 & P0 = P1.
Head arguments: ListBuffer((P1,P1), (P0,P0))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P1,P1), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
List(P1, P0)
List()
(((1 + -1 * P1) >= 0) & (P0 = P1))
variables in guard: ListBuffer(-1, P1)
Data flow:
P1 <- _P1
P0 <- _P0
Guard:
((1 + -1 * _P1) >= 0)
(_P0 = _P1)
dataflow number:2
guard number:2
-------------
REC_f_(P3, P2) :- REC_f_(P3 - 1, P1), P3 + P1 = P2 & 1 < P3.
Head arguments: ListBuffer((P3,P3), (P2,P2))
Body arguments: ListBuffer(((P3 + -1),(P3 + -1)), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P3,P3), (P2,P2))
relativeComplimentOfBodyArg:ListBuffer(((P3 + -1),(P3 + -1)), (P1,P1))
List(P3, P2)
List(REC_f_((P3 + -1), P1))
(((P3 + P1) = P2) & !((1 + -1 * P3) >= 0))
variables in guard: ListBuffer(-1, P3)
Data flow:
P3 <- _P3
P2 <- _P2
P3<-(P3 + -1)
P2<-P1
Guard:
((-2 + _P3) >= 0)
((_P3 + P1) = _P2)
dataflow number:2
guard number:2
-------------
REC__f(P1, P0) :- 1 >= P1 & P0 = P1.
Head arguments: ListBuffer((P1,P1), (P0,P0))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P1,P1), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
List(P1, P0)
List()
(((1 + -1 * P1) >= 0) & (P0 = P1))
variables in guard: ListBuffer(-1, P1)
Data flow:
P1 <- _P1
P0 <- _P0
Guard:
((1 + -1 * _P1) >= 0)
(_P0 = _P1)
dataflow number:2
guard number:2
-------------
REC__f(P3, P2) :- REC__f(P3 - 1, P1), P3 + P1 = P2 & 1 < P3 & P1 >= 0.
Head arguments: ListBuffer((P3,P3), (P2,P2))
Body arguments: ListBuffer(((P3 + -1),(P3 + -1)), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P3,P3), (P2,P2))
relativeComplimentOfBodyArg:ListBuffer(((P3 + -1),(P3 + -1)), (P1,P1))
List(P3, P2)
List(REC__f((P3 + -1), P1))
((((P3 + P1) = P2) & !((1 + -1 * P3) >= 0)) & (P1 >= 0))
variables in guard: ListBuffer(-1, P3, P1)
Data flow:
P3 <- _P3
P2 <- _P2
P3<-(P3 + -1)
P2<-P1
Guard:
((-2 + _P3) >= 0)
(P1 >= 0)
((_P3 + P1) = _P2)
dataflow number:2
guard number:3
-------------
REC__f(P2, P1) :- REC__f(P2 - 1, P1), 1 < P2 & P1 < 0.
Head arguments: ListBuffer((P2,P2), (P1,P1))
Body arguments: ListBuffer(((P2 + -1),(P2 + -1)), (P1,P1))
Common Arguments:ListBuffer((P1,P1))
relativeComplimentOfHeadArg:ListBuffer((P2,P2))
relativeComplimentOfBodyArg:ListBuffer(((P2 + -1),(P2 + -1)))
List(P2, P1)
List(REC__f((P2 + -1), P1))
(!((1 + -1 * P2) >= 0) & !(P1 >= 0))
variables in guard: ListBuffer(-1, P2, P1)
Data flow:
P2 <- _P2
P2<-(P2 + -1)
P1<-P1
Guard:
((-2 + _P2) >= 0)
!(P1 >= 0)
dataflow number:1
guard number:2
-------------
CHC_COMP_FALSE :- REC_f_(P0, P2), P0 + 1 + P2 != P0 + 1 & 1 < P0 + 1 & 1 >= P0 + 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P0,P0), (P2,P2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P0,P0), (P2,P2))
List()
List(REC_f_(P0, P2))
((!(((P0 + 1) + P2) = (P0 + 1)) & !((1 + -1 * (P0 + 1)) >= 0)) & ((1 + -1 * (P0 + 1)) >= 0))
variables in guard: ListBuffer(-1, P0)
Data flow:
Guard:
!(((P0 + 1) + P2) = (P0 + 1))
!((1 + -1 * (P0 + 1)) >= 0)
((1 + -1 * (P0 + 1)) >= 0)
dataflow number:0
guard number:3
-------------
CHC_COMP_FALSE :- REC_f_f(P0, P4, P0, P2), P0 + 1 + P4 != P0 + 1 + P2 & 1 < P0 + 1 & 1 < P0 + 1 & P2 >= 0.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P0,P0), (P4,P4), (P0,P0), (P2,P2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P0,P0), (P4,P4), (P0,P0), (P2,P2))
List()
List(REC_f_f(P0, P4, P0, P2))
(((!(((P0 + 1) + P4) = ((P0 + 1) + P2)) & !((1 + -1 * (P0 + 1)) >= 0)) & !((1 + -1 * (P0 + 1)) >= 0)) & (P2 >= 0))
variables in guard: ListBuffer(-1, P0, P2)
Data flow:
Guard:
!(((P0 + 1) + P4) = ((P0 + 1) + P2))
!((1 + -1 * (P0 + 1)) >= 0)
!((1 + -1 * (P0 + 1)) >= 0)
(P2 >= 0)
dataflow number:0
guard number:4
-------------
CHC_COMP_FALSE :- REC_f_f(P0, P4, P0, P3), P0 + 1 + P4 != P3 & 1 < P0 + 1 & 1 < P0 + 1 & P3 < 0.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P0,P0), (P4,P4), (P0,P0), (P3,P3))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P0,P0), (P4,P4), (P0,P0), (P3,P3))
List()
List(REC_f_f(P0, P4, P0, P3))
(((!(((P0 + 1) + P4) = P3) & !((1 + -1 * (P0 + 1)) >= 0)) & !((1 + -1 * (P0 + 1)) >= 0)) & !(P3 >= 0))
variables in guard: ListBuffer(-1, P0, P3)
Data flow:
Guard:
!(((P0 + 1) + P4) = P3)
!((1 + -1 * (P0 + 1)) >= 0)
!((1 + -1 * (P0 + 1)) >= 0)
!(P3 >= 0)
dataflow number:0
guard number:4
-------------
CHC_COMP_FALSE :- REC__f(P0, P1), 1 >= P0 + 1 & 1 < P0 + 1 & P1 >= 0 & P0 + 1 != P0 + 1 + P1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P0,P0), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P0,P0), (P1,P1))
List()
List(REC__f(P0, P1))
(((((1 + -1 * (P0 + 1)) >= 0) & !((1 + -1 * (P0 + 1)) >= 0)) & (P1 >= 0)) & !((P0 + 1) = ((P0 + 1) + P1)))
variables in guard: ListBuffer(-1, P0, P1)
Data flow:
Guard:
((1 + -1 * (P0 + 1)) >= 0)
!((1 + -1 * (P0 + 1)) >= 0)
(P1 >= 0)
!((P0 + 1) = ((P0 + 1) + P1))
dataflow number:0
guard number:4
-------------
CHC_COMP_FALSE :- REC__f(P0, P2), 1 >= P0 + 1 & 1 < P0 + 1 & P2 < 0 & P0 + 1 != P2.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P0,P0), (P2,P2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P0,P0), (P2,P2))
List()
List(REC__f(P0, P2))
(((((1 + -1 * (P0 + 1)) >= 0) & !((1 + -1 * (P0 + 1)) >= 0)) & !(P2 >= 0)) & !((P0 + 1) = P2))
variables in guard: ListBuffer(-1, P0, P2)
Data flow:
Guard:
((1 + -1 * (P0 + 1)) >= 0)
!((1 + -1 * (P0 + 1)) >= 0)
!(P2 >= 0)
!((P0 + 1) = P2)
dataflow number:0
guard number:4
-------------
false :- CHC_COMP_FALSE.
Head arguments: ListBuffer()
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer()
List()
List(CHC_COMP_FALSE)
true
variables in guard: ListBuffer(true)
Data flow:
Guard:
true
dataflow number:0
guard number:1
Hints:
-----------

-------------
REC_g_g(P6, P5, P4, P3, P2) :- REC__g(P4 - 1, P0, P2), P4 + P3 = P0 & 0 < P4 & 0 >= P6 & P5 = 0.
Head arguments: ListBuffer((P6,P6), (P5,P5), (P4,P4), (P3,P3), (P2,P2))
Body arguments: ListBuffer(((P4 + -1),(P4 + -1)), (P0,P0), (P2,P2))
Common Arguments:ListBuffer((P2,P2))
relativeComplimentOfHeadArg:ListBuffer((P6,P6), (P5,P5), (P4,P4), (P3,P3))
relativeComplimentOfBodyArg:ListBuffer(((P4 + -1),(P4 + -1)), (P0,P0))
List(P6, P5, P4, P3, P2)
List(REC__g((P4 + -1), P0, P2))
(((((P4 + P3) = P0) & !(-1 * P4 >= 0)) & (-1 * P6 >= 0)) & (P5 = 0))
variables in guard: ListBuffer(-1, P4, P6)
Data flow:
P6 <- _P6
P5 <- 0
P4 <- _P4
P3 <- _P3
P2<-P2
Guard:
((-1 + _P4) >= 0)
(-1 * _P6 >= 0)
((_P4 + _P3) = P0)
dataflow number:4
guard number:3
-------------
REC_g_g(P4, P3, P2, P1, P0) :- 0 >= P4 & 0 >= P2 & P0 = P1 & P3 = 0.
Head arguments: ListBuffer((P4,P4), (P3,P3), (P2,P2), (P1,P1), (P0,P0))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P4,P4), (P3,P3), (P2,P2), (P1,P1), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
List(P4, P3, P2, P1, P0)
List()
((((-1 * P4 >= 0) & (-1 * P2 >= 0)) & (P0 = P1)) & (P3 = 0))
variables in guard: ListBuffer(-1, P4, P2)
Data flow:
P4 <- _P4
P3 <- 0
P2 <- _P2
P1 <- _P1
P0 <- _P0
Guard:
(-1 * _P4 >= 0)
(-1 * _P2 >= 0)
(_P0 = _P1)
dataflow number:5
guard number:3
-------------
REC_g_g(P8, P7, P6, P5, P4) :- REC_g_g(P8 - 1, P3, P6 - 1, P0, P4), P8 + P3 = P7 & 0 < P6 & 0 < P8 & P6 + P5 = P0.
Head arguments: ListBuffer((P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
Body arguments: ListBuffer(((P8 + -1),(P8 + -1)), (P3,P3), ((P6 + -1),(P6 + -1)), (P0,P0), (P4,P4))
Common Arguments:ListBuffer((P4,P4))
relativeComplimentOfHeadArg:ListBuffer((P8,P8), (P7,P7), (P6,P6), (P5,P5))
relativeComplimentOfBodyArg:ListBuffer(((P8 + -1),(P8 + -1)), (P3,P3), ((P6 + -1),(P6 + -1)), (P0,P0))
List(P8, P7, P6, P5, P4)
List(REC_g_g((P8 + -1), P3, (P6 + -1), P0, P4))
(((((P8 + P3) = P7) & !(-1 * P6 >= 0)) & !(-1 * P8 >= 0)) & ((P6 + P5) = P0))
variables in guard: ListBuffer(-1, P6, P8)
Data flow:
P8 <- _P8
P7 <- _P7
P6 <- _P6
P5 <- _P5
P8<-(P8 + -1)
P7<-P3
P6<-(P6 + -1)
P5<-P0
P4<-P4
Guard:
((-1 + _P6) >= 0)
((-1 + _P8) >= 0)
((_P8 + P3) = _P7)
((_P6 + _P5) = P0)
dataflow number:4
guard number:4
-------------
REC_g_g(P6, P5, P4, P3, P0) :- REC_g_(P6 - 1, P2), P6 + P2 = P5 & 0 >= P4 & 0 < P6 & P0 = P3.
Head arguments: ListBuffer((P6,P6), (P5,P5), (P4,P4), (P3,P3), (P0,P0))
Body arguments: ListBuffer(((P6 + -1),(P6 + -1)), (P2,P2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P6,P6), (P5,P5), (P4,P4), (P3,P3), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer(((P6 + -1),(P6 + -1)), (P2,P2))
List(P6, P5, P4, P3, P0)
List(REC_g_((P6 + -1), P2))
(((((P6 + P2) = P5) & (-1 * P4 >= 0)) & !(-1 * P6 >= 0)) & (P0 = P3))
variables in guard: ListBuffer(-1, P4, P6)
Data flow:
P6 <- _P6
P5 <- _P5
P4 <- _P4
P3 <- _P3
P0 <- _P0
Guard:
(-1 * _P4 >= 0)
((-1 + _P6) >= 0)
((_P6 + P2) = _P5)
(_P0 = _P3)
dataflow number:5
guard number:4
-------------
REC_g_(P1, P0) :- 0 >= P1 & P0 = 0.
Head arguments: ListBuffer((P1,P1), (P0,P0))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P1,P1), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
List(P1, P0)
List()
((-1 * P1 >= 0) & (P0 = 0))
variables in guard: ListBuffer(-1, P1)
Data flow:
P1 <- _P1
P0 <- 0
Guard:
(-1 * _P1 >= 0)
dataflow number:2
guard number:1
-------------
REC_g_(P3, P2) :- REC_g_(P3 - 1, P1), P3 + P1 = P2 & 0 < P3.
Head arguments: ListBuffer((P3,P3), (P2,P2))
Body arguments: ListBuffer(((P3 + -1),(P3 + -1)), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P3,P3), (P2,P2))
relativeComplimentOfBodyArg:ListBuffer(((P3 + -1),(P3 + -1)), (P1,P1))
List(P3, P2)
List(REC_g_((P3 + -1), P1))
(((P3 + P1) = P2) & !(-1 * P3 >= 0))
variables in guard: ListBuffer(-1, P3)
Data flow:
P3 <- _P3
P2 <- _P2
P3<-(P3 + -1)
P2<-P1
Guard:
((-1 + _P3) >= 0)
((_P3 + P1) = _P2)
dataflow number:2
guard number:2
-------------
REC__g(P2, P1, P0) :- 0 >= P2 & P0 = P1.
Head arguments: ListBuffer((P2,P2), (P1,P1), (P0,P0))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P2,P2), (P1,P1), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
List(P2, P1, P0)
List()
((-1 * P2 >= 0) & (P0 = P1))
variables in guard: ListBuffer(-1, P2)
Data flow:
P2 <- _P2
P1 <- _P1
P0 <- _P0
Guard:
(-1 * _P2 >= 0)
(_P0 = _P1)
dataflow number:3
guard number:2
-------------
REC__g(P4, P3, P2) :- REC__g(P4 - 1, P0, P2), P4 + P3 = P0 & 0 < P4.
Head arguments: ListBuffer((P4,P4), (P3,P3), (P2,P2))
Body arguments: ListBuffer(((P4 + -1),(P4 + -1)), (P0,P0), (P2,P2))
Common Arguments:ListBuffer((P2,P2))
relativeComplimentOfHeadArg:ListBuffer((P4,P4), (P3,P3))
relativeComplimentOfBodyArg:ListBuffer(((P4 + -1),(P4 + -1)), (P0,P0))
List(P4, P3, P2)
List(REC__g((P4 + -1), P0, P2))
(((P4 + P3) = P0) & !(-1 * P4 >= 0))
variables in guard: ListBuffer(-1, P4)
Data flow:
P4 <- _P4
P3 <- _P3
P4<-(P4 + -1)
P3<-P0
P2<-P2
Guard:
((-1 + _P4) >= 0)
((_P4 + _P3) = P0)
dataflow number:2
guard number:2
-------------
false :- REC_g_g(P0, P4, P0, 0, P3), P4 != P3.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P0,P0), (P4,P4), (P0,P0), (0,0), (P3,P3))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P0,P0), (P4,P4), (P0,P0), (0,0), (P3,P3))
List()
List(REC_g_g(P0, P4, P0, 0, P3))
!(P4 = P3)
variables in guard: ListBuffer()
Data flow:
REC_g_g_argument_3<-0
Guard:
!(P4 = P3)
dataflow number:0
guard number:1
Hints:
-----------

-------------
INV1(P4, P3, P2) :- INV1(P4, P3 - 1, P1), 10 < P4 & 10 >= P1 & 9 >= P3 - 1 & P2 = P1.
Head arguments: ListBuffer((P4,P4), (P3,P3), (P2,P2))
Body arguments: ListBuffer((P4,P4), ((P3 + -1),(P3 + -1)), (P1,P1))
Common Arguments:ListBuffer((P4,P4))
relativeComplimentOfHeadArg:ListBuffer((P3,P3), (P2,P2))
relativeComplimentOfBodyArg:ListBuffer(((P3 + -1),(P3 + -1)), (P1,P1))
Vector(P4, P3, P2)
List(INV1(P4, (P3 + -1), P1))
(((!((10 + -1 * P4) >= 0) & ((10 + -1 * P1) >= 0)) & ((9 + -1 * (P3 + -1)) >= 0)) & (P2 = P1))
variables in guard: ListBuffer(-1, P4, P1, P3)
Data flow:
P3 <- _P3
P2 <- P1
P3<-(P3 + -1)
P2<-P1
P4<-P4
Guard:
!((10 + -1 * P4) >= 0)
((10 + -1 * P1) >= 0)
((10 + -1 * _P3) >= 0)
dataflow number:2
guard number:3
-------------
INV1(P5, P4, P3) :- INV1(P5 - 1, P4 - 1, P2), 10 >= P2 & 10 >= P5 - 1 & 9 >= P4 - 1 & P3 = P2.
Head arguments: ListBuffer((P5,P5), (P4,P4), (P3,P3))
Body arguments: ListBuffer(((P5 + -1),(P5 + -1)), ((P4 + -1),(P4 + -1)), (P2,P2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P5,P5), (P4,P4), (P3,P3))
relativeComplimentOfBodyArg:ListBuffer(((P5 + -1),(P5 + -1)), ((P4 + -1),(P4 + -1)), (P2,P2))
Vector(P5, P4, P3)
List(INV1((P5 + -1), (P4 + -1), P2))
(((((10 + -1 * P2) >= 0) & ((10 + -1 * (P5 + -1)) >= 0)) & ((9 + -1 * (P4 + -1)) >= 0)) & (P3 = P2))
variables in guard: ListBuffer(-1, P2, P5, P4)
Data flow:
P5 <- _P5
P4 <- _P4
P3 <- P2
P5<-(P5 + -1)
P4<-(P4 + -1)
P3<-P2
Guard:
((10 + -1 * P2) >= 0)
((11 + -1 * _P5) >= 0)
((10 + -1 * _P4) >= 0)
dataflow number:3
guard number:3
-------------
INV1(P4, P3, P2) :- INV1(P4 - 1, P3, P1), 9 < P3 & 10 >= P1 & 10 >= P4 - 1 & P2 = P1.
Head arguments: ListBuffer((P4,P4), (P3,P3), (P2,P2))
Body arguments: ListBuffer(((P4 + -1),(P4 + -1)), (P3,P3), (P1,P1))
Common Arguments:ListBuffer((P3,P3))
relativeComplimentOfHeadArg:ListBuffer((P4,P4), (P2,P2))
relativeComplimentOfBodyArg:ListBuffer(((P4 + -1),(P4 + -1)), (P1,P1))
Vector(P4, P3, P2)
List(INV1((P4 + -1), P3, P1))
(((!((9 + -1 * P3) >= 0) & ((10 + -1 * P1) >= 0)) & ((10 + -1 * (P4 + -1)) >= 0)) & (P2 = P1))
variables in guard: ListBuffer(-1, P3, P1, P4)
Data flow:
P4 <- _P4
P2 <- P1
P4<-(P4 + -1)
P2<-P1
P3<-P3
Guard:
!((9 + -1 * P3) >= 0)
((10 + -1 * P1) >= 0)
((11 + -1 * _P4) >= 0)
dataflow number:2
guard number:3
-------------
INV1(P3, P2, P1) :- 10 >= P2 & P0 = P2 & P1 = P2 & P3 = P2.
Head arguments: ListBuffer((P3,P3), (P2,P2), (P1,P1))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P3,P3), (P2,P2), (P1,P1))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P3, P2, P1)
List()
(((((10 + -1 * P2) >= 0) & (P0 = P2)) & (P1 = P2)) & (P3 = P2))
variables in guard: ListBuffer(-1, P2)
Data flow:
P3 <- _P3
P2 <- P0
P2 <- _P2
P1 <- _P1
Guard:
((10 + -1 * _P2) >= 0)
(_P1 = _P2)
(_P3 = _P2)
dataflow number:3
guard number:3
-------------
false :- INV1(P3, P2, P0), 10 < P3 & 9 < P2 & 10 >= P0 & P3 != 1 + P2.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P3,P3), (P2,P2), (P0,P0))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P3,P3), (P2,P2), (P0,P0))
List()
List(INV1(P3, P2, P0))
(((!((10 + -1 * P3) >= 0) & !((9 + -1 * P2) >= 0)) & ((10 + -1 * P0) >= 0)) & !(P3 = (1 + P2)))
variables in guard: ListBuffer(-1, P3, P2, P0)
Data flow:
Guard:
!((10 + -1 * P3) >= 0)
!((9 + -1 * P2) >= 0)
((10 + -1 * P0) >= 0)
!(P3 = (1 + P2))
dataflow number:0
guard number:4
Hints:
-----------

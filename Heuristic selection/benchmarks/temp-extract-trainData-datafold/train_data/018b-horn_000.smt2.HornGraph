-------------
INV3(P9, P8, P7, P6, P5, P4) :- INV3(P9, P8, P7, P6, P5 - 1, P4 - 2), 0 < P9 & 0 >= P9 & P9 < P8 & P6 - (P5 - 1) >= 1 & P3 = P9 & P2 = P9.
Head arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
Body arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6), ((P5 + -1),(P5 + -1)), ((P4 + -2),(P4 + -2)))
Common Arguments:ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6))
relativeComplimentOfHeadArg:ListBuffer((P5,P5), (P4,P4))
relativeComplimentOfBodyArg:ListBuffer(((P5 + -1),(P5 + -1)), ((P4 + -2),(P4 + -2)))
Vector(P9, P8, P7, P6, P5, P4)
List(INV3(P9, P8, P7, P6, (P5 + -1), (P4 + -2)))
(((((!(-1 * P9 >= 0) & (-1 * P9 >= 0)) & !((P9 + -1 * P8) >= 0)) & (((P6 + -1 * (P5 + -1)) + -1) >= 0)) & (P3 = P9)) & (P2 = P9))
variables in guard: ListBuffer(-1, P9, P8, P6, P5)
Data flow:
P5 <- _P5
P5<-(P5 + -1)
P4<-(P4 + -2)
P9<-P9
P8<-P8
P7<-P7
P6<-P6
Guard:
!(-1 * P9 >= 0)
(-1 * P9 >= 0)
!((P9 + -1 * P8) >= 0)
((P6 + -1 * _P5) >= 0)
(P3 = P9)
(P2 = P9)
dataflow number:2
guard number:6
-------------
INV3(P11, P10, P9, P8, P7, P6) :- INV3(P11, P10 - 1, P9 - 2, P8, P7 - 1, P6 - 2), 0 < P11 & 0 >= P11 & P11 >= P10 - 1 & P8 - (P7 - 1) >= 1 & P5 = P11 & P4 = P11.
Head arguments: ListBuffer((P11,P11), (P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6))
Body arguments: ListBuffer((P11,P11), ((P10 + -1),(P10 + -1)), ((P9 + -2),(P9 + -2)), (P8,P8), ((P7 + -1),(P7 + -1)), ((P6 + -2),(P6 + -2)))
Common Arguments:ListBuffer((P11,P11), (P8,P8))
relativeComplimentOfHeadArg:ListBuffer((P10,P10), (P9,P9), (P7,P7), (P6,P6))
relativeComplimentOfBodyArg:ListBuffer(((P10 + -1),(P10 + -1)), ((P9 + -2),(P9 + -2)), ((P7 + -1),(P7 + -1)), ((P6 + -2),(P6 + -2)))
Vector(P11, P10, P9, P8, P7, P6)
List(INV3(P11, (P10 + -1), (P9 + -2), P8, (P7 + -1), (P6 + -2)))
(((((!(-1 * P11 >= 0) & (-1 * P11 >= 0)) & ((P11 + -1 * (P10 + -1)) >= 0)) & (((P8 + -1 * (P7 + -1)) + -1) >= 0)) & (P5 = P11)) & (P4 = P11))
variables in guard: ListBuffer(-1, P11, P10, P8, P7)
Data flow:
P10 <- _P10
P7 <- _P7
P10<-(P10 + -1)
P9<-(P9 + -2)
P7<-(P7 + -1)
P6<-(P6 + -2)
P11<-P11
P8<-P8
Guard:
!(-1 * P11 >= 0)
(-1 * P11 >= 0)
((1 + (P11 + -1 * _P10)) >= 0)
((P8 + -1 * _P7) >= 0)
(P5 = P11)
(P4 = P11)
dataflow number:4
guard number:6
-------------
INV3(P9, P8, P7, P6, P5, P4) :- INV3(P9, P8 - 1, P7 - 2, P6, P5, P4), P6 - P5 < 1 & P9 >= P8 - 1 & 0 >= P9 & 0 < P9 & P3 = P9 & P2 = P9.
Head arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
Body arguments: ListBuffer((P9,P9), ((P8 + -1),(P8 + -1)), ((P7 + -2),(P7 + -2)), (P6,P6), (P5,P5), (P4,P4))
Common Arguments:ListBuffer((P9,P9), (P6,P6), (P5,P5), (P4,P4))
relativeComplimentOfHeadArg:ListBuffer((P8,P8), (P7,P7))
relativeComplimentOfBodyArg:ListBuffer(((P8 + -1),(P8 + -1)), ((P7 + -2),(P7 + -2)))
Vector(P9, P8, P7, P6, P5, P4)
List(INV3(P9, (P8 + -1), (P7 + -2), P6, P5, P4))
(((((!(((P6 + -1 * P5) + -1) >= 0) & ((P9 + -1 * (P8 + -1)) >= 0)) & (-1 * P9 >= 0)) & !(-1 * P9 >= 0)) & (P3 = P9)) & (P2 = P9))
variables in guard: ListBuffer(P6, -1, P5, P9, P8)
Data flow:
P8 <- _P8
P8<-(P8 + -1)
P7<-(P7 + -2)
P9<-P9
P6<-P6
P5<-P5
P4<-P4
Guard:
!(((P6 + -1 * P5) + -1) >= 0)
((1 + (P9 + -1 * _P8)) >= 0)
(-1 * P9 >= 0)
!(-1 * P9 >= 0)
(P3 = P9)
(P2 = P9)
dataflow number:2
guard number:6
-------------
INV3(P7, P6, P5, P4, P3, P2) :- 0 < P1 & 0 >= P1 & P0 = P1 & P2 = 2 & P6 = 1 & P5 = 0 & P4 = 1 & P3 = 1 & P7 = P1.
Head arguments: ListBuffer((P7,P7), (P6,P6), (P5,P5), (P4,P4), (P3,P3), (P2,P2))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P7,P7), (P6,P6), (P5,P5), (P4,P4), (P3,P3), (P2,P2))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P7, P6, P5, P4, P3, P2)
List()
((((((((!(-1 * P1 >= 0) & (-1 * P1 >= 0)) & (P0 = P1)) & (P2 = 2)) & (P6 = 1)) & (P5 = 0)) & (P4 = 1)) & (P3 = 1)) & (P7 = P1))
variables in guard: ListBuffer(-1, P1)
Data flow:
P7 <- P1
P6 <- 1
P5 <- 0
P4 <- 1
P3 <- 1
P2 <- 2
Guard:
!(-1 * P1 >= 0)
(-1 * P1 >= 0)
(P0 = P1)
dataflow number:6
guard number:3
-------------
INV4(P9, P8, P7, P5, P4) :- INV4(P9, P8, P7, P5 - 1, P4 - 2), 0 < P9 & 0 < P9 & P9 < P8 & P9 - (P5 - 1) >= 1 & P3 = P9 & P6 = P9 & P2 = P9.
Head arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), (P5,P5), (P4,P4))
Body arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), ((P5 + -1),(P5 + -1)), ((P4 + -2),(P4 + -2)))
Common Arguments:ListBuffer((P9,P9), (P8,P8), (P7,P7))
relativeComplimentOfHeadArg:ListBuffer((P5,P5), (P4,P4))
relativeComplimentOfBodyArg:ListBuffer(((P5 + -1),(P5 + -1)), ((P4 + -2),(P4 + -2)))
Vector(P9, P8, P7, P5, P4)
List(INV4(P9, P8, P7, (P5 + -1), (P4 + -2)))
((((((!(-1 * P9 >= 0) & !(-1 * P9 >= 0)) & !((P9 + -1 * P8) >= 0)) & (((P9 + -1 * (P5 + -1)) + -1) >= 0)) & (P3 = P9)) & (P6 = P9)) & (P2 = P9))
variables in guard: ListBuffer(-1, P9, P8, P5)
Data flow:
P5 <- _P5
P5<-(P5 + -1)
P4<-(P4 + -2)
P9<-P9
P8<-P8
P7<-P7
Guard:
!(-1 * P9 >= 0)
!(-1 * P9 >= 0)
!((P9 + -1 * P8) >= 0)
((P9 + -1 * _P5) >= 0)
(P3 = P9)
(P6 = P9)
(P2 = P9)
dataflow number:2
guard number:7
-------------
INV4(P11, P10, P9, P7, P6) :- INV4(P11, P10 - 1, P9 - 2, P7 - 1, P6 - 2), 0 < P11 & 0 < P11 & P11 >= P10 - 1 & P11 - (P7 - 1) >= 1 & P5 = P11 & P8 = P11 & P4 = P11.
Head arguments: ListBuffer((P11,P11), (P10,P10), (P9,P9), (P7,P7), (P6,P6))
Body arguments: ListBuffer((P11,P11), ((P10 + -1),(P10 + -1)), ((P9 + -2),(P9 + -2)), ((P7 + -1),(P7 + -1)), ((P6 + -2),(P6 + -2)))
Common Arguments:ListBuffer((P11,P11))
relativeComplimentOfHeadArg:ListBuffer((P10,P10), (P9,P9), (P7,P7), (P6,P6))
relativeComplimentOfBodyArg:ListBuffer(((P10 + -1),(P10 + -1)), ((P9 + -2),(P9 + -2)), ((P7 + -1),(P7 + -1)), ((P6 + -2),(P6 + -2)))
Vector(P11, P10, P9, P7, P6)
List(INV4(P11, (P10 + -1), (P9 + -2), (P7 + -1), (P6 + -2)))
((((((!(-1 * P11 >= 0) & !(-1 * P11 >= 0)) & ((P11 + -1 * (P10 + -1)) >= 0)) & (((P11 + -1 * (P7 + -1)) + -1) >= 0)) & (P5 = P11)) & (P8 = P11)) & (P4 = P11))
variables in guard: ListBuffer(-1, P11, P10, P7)
Data flow:
P10 <- _P10
P7 <- _P7
P10<-(P10 + -1)
P9<-(P9 + -2)
P7<-(P7 + -1)
P6<-(P6 + -2)
P11<-P11
Guard:
!(-1 * P11 >= 0)
!(-1 * P11 >= 0)
((1 + (P11 + -1 * _P10)) >= 0)
((P11 + -1 * _P7) >= 0)
(P5 = P11)
(P8 = P11)
(P4 = P11)
dataflow number:4
guard number:7
-------------
INV4(P9, P8, P7, P5, P4) :- INV4(P9, P8 - 1, P7 - 2, P5, P4), P9 - P5 < 1 & P9 >= P8 - 1 & 0 < P9 & 0 < P9 & P3 = P9 & P6 = P9 & P2 = P9.
Head arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), (P5,P5), (P4,P4))
Body arguments: ListBuffer((P9,P9), ((P8 + -1),(P8 + -1)), ((P7 + -2),(P7 + -2)), (P5,P5), (P4,P4))
Common Arguments:ListBuffer((P9,P9), (P5,P5), (P4,P4))
relativeComplimentOfHeadArg:ListBuffer((P8,P8), (P7,P7))
relativeComplimentOfBodyArg:ListBuffer(((P8 + -1),(P8 + -1)), ((P7 + -2),(P7 + -2)))
Vector(P9, P8, P7, P5, P4)
List(INV4(P9, (P8 + -1), (P7 + -2), P5, P4))
((((((!(((P9 + -1 * P5) + -1) >= 0) & ((P9 + -1 * (P8 + -1)) >= 0)) & !(-1 * P9 >= 0)) & !(-1 * P9 >= 0)) & (P3 = P9)) & (P6 = P9)) & (P2 = P9))
variables in guard: ListBuffer(P9, -1, P5, P8)
Data flow:
P8 <- _P8
P8<-(P8 + -1)
P7<-(P7 + -2)
P9<-P9
P5<-P5
P4<-P4
Guard:
!(((P9 + -1 * P5) + -1) >= 0)
((1 + (P9 + -1 * _P8)) >= 0)
!(-1 * P9 >= 0)
!(-1 * P9 >= 0)
(P3 = P9)
(P6 = P9)
(P2 = P9)
dataflow number:2
guard number:7
-------------
INV4(P7, P6, P5, P3, P2) :- 0 < P4 & 0 < P4 & P0 = P4 & P2 = 2 & P6 = 1 & P5 = 0 & P3 = 1 & P1 = P4 & P7 = P4.
Head arguments: ListBuffer((P7,P7), (P6,P6), (P5,P5), (P3,P3), (P2,P2))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P7,P7), (P6,P6), (P5,P5), (P3,P3), (P2,P2))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P7, P6, P5, P3, P2)
List()
((((((((!(-1 * P4 >= 0) & !(-1 * P4 >= 0)) & (P0 = P4)) & (P2 = 2)) & (P6 = 1)) & (P5 = 0)) & (P3 = 1)) & (P1 = P4)) & (P7 = P4))
variables in guard: ListBuffer(-1, P4)
Data flow:
P7 <- P4
P6 <- 1
P5 <- 0
P3 <- 1
P2 <- 2
Guard:
!(-1 * P4 >= 0)
!(-1 * P4 >= 0)
(P0 = P4)
(P1 = P4)
dataflow number:5
guard number:4
-------------
INV1(P9, P8, P7, P6, P5, P4, P3) :- INV1(P9, P8, P7, P6, P5 - 1, P4 - 2, P2), 0 >= P2 & 0 >= P2 & P9 < P8 & P6 - (P5 - 1) >= 1 & P3 = P2.
Head arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4), (P3,P3))
Body arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6), ((P5 + -1),(P5 + -1)), ((P4 + -2),(P4 + -2)), (P2,P2))
Common Arguments:ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6))
relativeComplimentOfHeadArg:ListBuffer((P5,P5), (P4,P4), (P3,P3))
relativeComplimentOfBodyArg:ListBuffer(((P5 + -1),(P5 + -1)), ((P4 + -2),(P4 + -2)), (P2,P2))
Vector(P9, P8, P7, P6, P5, P4, P3)
List(INV1(P9, P8, P7, P6, (P5 + -1), (P4 + -2), P2))
(((((-1 * P2 >= 0) & (-1 * P2 >= 0)) & !((P9 + -1 * P8) >= 0)) & (((P6 + -1 * (P5 + -1)) + -1) >= 0)) & (P3 = P2))
variables in guard: ListBuffer(-1, P2, P9, P8, P6, P5)
Data flow:
P5 <- _P5
P3 <- P2
P5<-(P5 + -1)
P4<-(P4 + -2)
P3<-P2
P9<-P9
P8<-P8
P7<-P7
P6<-P6
Guard:
(-1 * P2 >= 0)
(-1 * P2 >= 0)
!((P9 + -1 * P8) >= 0)
((P6 + -1 * _P5) >= 0)
dataflow number:3
guard number:4
-------------
INV1(P11, P10, P9, P8, P7, P6, P5) :- INV1(P11, P10 - 1, P9 - 2, P8, P7 - 1, P6 - 2, P4), 0 >= P4 & 0 >= P4 & P11 >= P10 - 1 & P8 - (P7 - 1) >= 1 & P5 = P4.
Head arguments: ListBuffer((P11,P11), (P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5))
Body arguments: ListBuffer((P11,P11), ((P10 + -1),(P10 + -1)), ((P9 + -2),(P9 + -2)), (P8,P8), ((P7 + -1),(P7 + -1)), ((P6 + -2),(P6 + -2)), (P4,P4))
Common Arguments:ListBuffer((P11,P11), (P8,P8))
relativeComplimentOfHeadArg:ListBuffer((P10,P10), (P9,P9), (P7,P7), (P6,P6), (P5,P5))
relativeComplimentOfBodyArg:ListBuffer(((P10 + -1),(P10 + -1)), ((P9 + -2),(P9 + -2)), ((P7 + -1),(P7 + -1)), ((P6 + -2),(P6 + -2)), (P4,P4))
Vector(P11, P10, P9, P8, P7, P6, P5)
List(INV1(P11, (P10 + -1), (P9 + -2), P8, (P7 + -1), (P6 + -2), P4))
(((((-1 * P4 >= 0) & (-1 * P4 >= 0)) & ((P11 + -1 * (P10 + -1)) >= 0)) & (((P8 + -1 * (P7 + -1)) + -1) >= 0)) & (P5 = P4))
variables in guard: ListBuffer(-1, P4, P11, P10, P8, P7)
Data flow:
P10 <- _P10
P7 <- _P7
P5 <- P4
P10<-(P10 + -1)
P9<-(P9 + -2)
P7<-(P7 + -1)
P6<-(P6 + -2)
P5<-P4
P11<-P11
P8<-P8
Guard:
(-1 * P4 >= 0)
(-1 * P4 >= 0)
((1 + (P11 + -1 * _P10)) >= 0)
((P8 + -1 * _P7) >= 0)
dataflow number:5
guard number:4
-------------
INV1(P9, P8, P7, P6, P5, P4, P3) :- INV1(P9, P8 - 1, P7 - 2, P6, P5, P4, P2), P6 - P5 < 1 & P9 >= P8 - 1 & 0 >= P2 & 0 >= P2 & P3 = P2.
Head arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4), (P3,P3))
Body arguments: ListBuffer((P9,P9), ((P8 + -1),(P8 + -1)), ((P7 + -2),(P7 + -2)), (P6,P6), (P5,P5), (P4,P4), (P2,P2))
Common Arguments:ListBuffer((P9,P9), (P6,P6), (P5,P5), (P4,P4))
relativeComplimentOfHeadArg:ListBuffer((P8,P8), (P7,P7), (P3,P3))
relativeComplimentOfBodyArg:ListBuffer(((P8 + -1),(P8 + -1)), ((P7 + -2),(P7 + -2)), (P2,P2))
Vector(P9, P8, P7, P6, P5, P4, P3)
List(INV1(P9, (P8 + -1), (P7 + -2), P6, P5, P4, P2))
((((!(((P6 + -1 * P5) + -1) >= 0) & ((P9 + -1 * (P8 + -1)) >= 0)) & (-1 * P2 >= 0)) & (-1 * P2 >= 0)) & (P3 = P2))
variables in guard: ListBuffer(P6, -1, P5, P9, P8, P2)
Data flow:
P8 <- _P8
P3 <- P2
P8<-(P8 + -1)
P7<-(P7 + -2)
P3<-P2
P9<-P9
P6<-P6
P5<-P5
P4<-P4
Guard:
!(((P6 + -1 * P5) + -1) >= 0)
((1 + (P9 + -1 * _P8)) >= 0)
(-1 * P2 >= 0)
(-1 * P2 >= 0)
dataflow number:3
guard number:4
-------------
INV1(P7, P6, P5, P4, P3, P2, P1) :- 0 >= P0 & 0 >= P0 & P1 = P0 & P7 = 1 & P6 = 1 & P5 = 0 & P4 = 1 & P3 = 1 & P2 = 2.
Head arguments: ListBuffer((P7,P7), (P6,P6), (P5,P5), (P4,P4), (P3,P3), (P2,P2), (P1,P1))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P7,P7), (P6,P6), (P5,P5), (P4,P4), (P3,P3), (P2,P2), (P1,P1))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P7, P6, P5, P4, P3, P2, P1)
List()
(((((((((-1 * P0 >= 0) & (-1 * P0 >= 0)) & (P1 = P0)) & (P7 = 1)) & (P6 = 1)) & (P5 = 0)) & (P4 = 1)) & (P3 = 1)) & (P2 = 2))
variables in guard: ListBuffer(-1, P0)
Data flow:
P7 <- 1
P6 <- 1
P5 <- 0
P4 <- 1
P3 <- 1
P2 <- 2
P1 <- P0
Guard:
(-1 * P0 >= 0)
(-1 * P0 >= 0)
dataflow number:7
guard number:2
-------------
INV2(P9, P8, P7, P6, P5, P4) :- INV2(P9, P8, P7, P6, P5 - 1, P4 - 2), 0 >= P6 & 0 < P6 & P9 < P8 & P6 - (P5 - 1) >= 1 & P3 = P6 & P2 = P6.
Head arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
Body arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6), ((P5 + -1),(P5 + -1)), ((P4 + -2),(P4 + -2)))
Common Arguments:ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6))
relativeComplimentOfHeadArg:ListBuffer((P5,P5), (P4,P4))
relativeComplimentOfBodyArg:ListBuffer(((P5 + -1),(P5 + -1)), ((P4 + -2),(P4 + -2)))
Vector(P9, P8, P7, P6, P5, P4)
List(INV2(P9, P8, P7, P6, (P5 + -1), (P4 + -2)))
((((((-1 * P6 >= 0) & !(-1 * P6 >= 0)) & !((P9 + -1 * P8) >= 0)) & (((P6 + -1 * (P5 + -1)) + -1) >= 0)) & (P3 = P6)) & (P2 = P6))
variables in guard: ListBuffer(-1, P6, P9, P8, P5)
Data flow:
P5 <- _P5
P5<-(P5 + -1)
P4<-(P4 + -2)
P9<-P9
P8<-P8
P7<-P7
P6<-P6
Guard:
(-1 * P6 >= 0)
!(-1 * P6 >= 0)
!((P9 + -1 * P8) >= 0)
((P6 + -1 * _P5) >= 0)
(P3 = P6)
(P2 = P6)
dataflow number:2
guard number:6
-------------
INV2(P11, P10, P9, P8, P7, P6) :- INV2(P11, P10 - 1, P9 - 2, P8, P7 - 1, P6 - 2), 0 >= P8 & 0 < P8 & P11 >= P10 - 1 & P8 - (P7 - 1) >= 1 & P5 = P8 & P4 = P8.
Head arguments: ListBuffer((P11,P11), (P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6))
Body arguments: ListBuffer((P11,P11), ((P10 + -1),(P10 + -1)), ((P9 + -2),(P9 + -2)), (P8,P8), ((P7 + -1),(P7 + -1)), ((P6 + -2),(P6 + -2)))
Common Arguments:ListBuffer((P11,P11), (P8,P8))
relativeComplimentOfHeadArg:ListBuffer((P10,P10), (P9,P9), (P7,P7), (P6,P6))
relativeComplimentOfBodyArg:ListBuffer(((P10 + -1),(P10 + -1)), ((P9 + -2),(P9 + -2)), ((P7 + -1),(P7 + -1)), ((P6 + -2),(P6 + -2)))
Vector(P11, P10, P9, P8, P7, P6)
List(INV2(P11, (P10 + -1), (P9 + -2), P8, (P7 + -1), (P6 + -2)))
((((((-1 * P8 >= 0) & !(-1 * P8 >= 0)) & ((P11 + -1 * (P10 + -1)) >= 0)) & (((P8 + -1 * (P7 + -1)) + -1) >= 0)) & (P5 = P8)) & (P4 = P8))
variables in guard: ListBuffer(-1, P8, P11, P10, P7)
Data flow:
P10 <- _P10
P7 <- _P7
P10<-(P10 + -1)
P9<-(P9 + -2)
P7<-(P7 + -1)
P6<-(P6 + -2)
P11<-P11
P8<-P8
Guard:
(-1 * P8 >= 0)
!(-1 * P8 >= 0)
((1 + (P11 + -1 * _P10)) >= 0)
((P8 + -1 * _P7) >= 0)
(P5 = P8)
(P4 = P8)
dataflow number:4
guard number:6
-------------
INV2(P9, P8, P7, P6, P5, P4) :- INV2(P9, P8 - 1, P7 - 2, P6, P5, P4), P6 - P5 < 1 & P9 >= P8 - 1 & 0 < P6 & 0 >= P6 & P3 = P6 & P2 = P6.
Head arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
Body arguments: ListBuffer((P9,P9), ((P8 + -1),(P8 + -1)), ((P7 + -2),(P7 + -2)), (P6,P6), (P5,P5), (P4,P4))
Common Arguments:ListBuffer((P9,P9), (P6,P6), (P5,P5), (P4,P4))
relativeComplimentOfHeadArg:ListBuffer((P8,P8), (P7,P7))
relativeComplimentOfBodyArg:ListBuffer(((P8 + -1),(P8 + -1)), ((P7 + -2),(P7 + -2)))
Vector(P9, P8, P7, P6, P5, P4)
List(INV2(P9, (P8 + -1), (P7 + -2), P6, P5, P4))
(((((!(((P6 + -1 * P5) + -1) >= 0) & ((P9 + -1 * (P8 + -1)) >= 0)) & !(-1 * P6 >= 0)) & (-1 * P6 >= 0)) & (P3 = P6)) & (P2 = P6))
variables in guard: ListBuffer(P6, -1, P5, P9, P8)
Data flow:
P8 <- _P8
P8<-(P8 + -1)
P7<-(P7 + -2)
P9<-P9
P6<-P6
P5<-P5
P4<-P4
Guard:
!(((P6 + -1 * P5) + -1) >= 0)
((1 + (P9 + -1 * _P8)) >= 0)
!(-1 * P6 >= 0)
(-1 * P6 >= 0)
(P3 = P6)
(P2 = P6)
dataflow number:2
guard number:6
-------------
INV2(P7, P6, P5, P4, P3, P2) :- 0 < P4 & 0 >= P4 & P0 = P4 & P7 = 1 & P6 = 1 & P5 = 0 & P3 = 1 & P2 = 2 & P1 = P4.
Head arguments: ListBuffer((P7,P7), (P6,P6), (P5,P5), (P4,P4), (P3,P3), (P2,P2))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P7,P7), (P6,P6), (P5,P5), (P4,P4), (P3,P3), (P2,P2))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P7, P6, P5, P4, P3, P2)
List()
((((((((!(-1 * P4 >= 0) & (-1 * P4 >= 0)) & (P0 = P4)) & (P7 = 1)) & (P6 = 1)) & (P5 = 0)) & (P3 = 1)) & (P2 = 2)) & (P1 = P4))
variables in guard: ListBuffer(-1, P4)
Data flow:
P7 <- 1
P6 <- 1
P5 <- 0
P4 <- P0
P4 <- P1
P4 <- _P4
P3 <- 1
P2 <- 2
Guard:
((-1 + _P4) >= 0)
(-1 * _P4 >= 0)
dataflow number:6
guard number:2
-------------
CHC_COMP_FALSE :- INV3(P5, P4, P7, P3, P2, P6), P7 != P6 & P3 - P2 < 1 & P5 < P4 & 0 >= P5 & 0 < P5.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P5,P5), (P4,P4), (P7,P7), (P3,P3), (P2,P2), (P6,P6))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P5,P5), (P4,P4), (P7,P7), (P3,P3), (P2,P2), (P6,P6))
List()
List(INV3(P5, P4, P7, P3, P2, P6))
((((!(P7 = P6) & !(((P3 + -1 * P2) + -1) >= 0)) & !((P5 + -1 * P4) >= 0)) & (-1 * P5 >= 0)) & !(-1 * P5 >= 0))
variables in guard: ListBuffer(P3, -1, P2, P5, P4)
Data flow:
Guard:
!(P7 = P6)
!(((P3 + -1 * P2) + -1) >= 0)
!((P5 + -1 * P4) >= 0)
(-1 * P5 >= 0)
!(-1 * P5 >= 0)
dataflow number:0
guard number:5
-------------
CHC_COMP_FALSE :- INV4(P5, P4, P7, P2, P6), P7 != P6 & P5 - P2 < 1 & P5 < P4 & 0 < P5 & 0 < P5.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P5,P5), (P4,P4), (P7,P7), (P2,P2), (P6,P6))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P5,P5), (P4,P4), (P7,P7), (P2,P2), (P6,P6))
List()
List(INV4(P5, P4, P7, P2, P6))
((((!(P7 = P6) & !(((P5 + -1 * P2) + -1) >= 0)) & !((P5 + -1 * P4) >= 0)) & !(-1 * P5 >= 0)) & !(-1 * P5 >= 0))
variables in guard: ListBuffer(P5, -1, P2, P4)
Data flow:
Guard:
!(P7 = P6)
!(((P5 + -1 * P2) + -1) >= 0)
!((P5 + -1 * P4) >= 0)
!(-1 * P5 >= 0)
!(-1 * P5 >= 0)
dataflow number:0
guard number:5
-------------
CHC_COMP_FALSE :- INV1(P5, P4, P7, P3, P2, P6, P0), P7 != P6 & P3 - P2 < 1 & P5 < P4 & 0 >= P0 & 0 >= P0.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P5,P5), (P4,P4), (P7,P7), (P3,P3), (P2,P2), (P6,P6), (P0,P0))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P5,P5), (P4,P4), (P7,P7), (P3,P3), (P2,P2), (P6,P6), (P0,P0))
List()
List(INV1(P5, P4, P7, P3, P2, P6, P0))
((((!(P7 = P6) & !(((P3 + -1 * P2) + -1) >= 0)) & !((P5 + -1 * P4) >= 0)) & (-1 * P0 >= 0)) & (-1 * P0 >= 0))
variables in guard: ListBuffer(P3, -1, P2, P5, P4, P0)
Data flow:
Guard:
!(P7 = P6)
!(((P3 + -1 * P2) + -1) >= 0)
!((P5 + -1 * P4) >= 0)
(-1 * P0 >= 0)
(-1 * P0 >= 0)
dataflow number:0
guard number:5
-------------
CHC_COMP_FALSE :- INV2(P5, P4, P7, P3, P2, P6), P7 != P6 & P3 - P2 < 1 & P5 < P4 & 0 < P3 & 0 >= P3.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P5,P5), (P4,P4), (P7,P7), (P3,P3), (P2,P2), (P6,P6))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P5,P5), (P4,P4), (P7,P7), (P3,P3), (P2,P2), (P6,P6))
List()
List(INV2(P5, P4, P7, P3, P2, P6))
((((!(P7 = P6) & !(((P3 + -1 * P2) + -1) >= 0)) & !((P5 + -1 * P4) >= 0)) & !(-1 * P3 >= 0)) & (-1 * P3 >= 0))
variables in guard: ListBuffer(P3, -1, P2, P5, P4)
Data flow:
Guard:
!(P7 = P6)
!(((P3 + -1 * P2) + -1) >= 0)
!((P5 + -1 * P4) >= 0)
!(-1 * P3 >= 0)
(-1 * P3 >= 0)
dataflow number:0
guard number:5
-------------
false :- CHC_COMP_FALSE.
Head arguments: ListBuffer()
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer()
List()
List(CHC_COMP_FALSE)
true
variables in guard: ListBuffer(true)
Data flow:
Guard:
true
dataflow number:0
guard number:1
Hints:
-----------

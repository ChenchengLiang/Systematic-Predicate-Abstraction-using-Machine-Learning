-------------
INV2(P4, P3, P2) :- P4 < 1 & P2 = 0.
Head arguments: ListBuffer((P4,P4), (P3,P3), (P2,P2))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P4,P4), (P3,P3), (P2,P2))
relativeComplimentOfBodyArg:ListBuffer()
List(P4, P3, P2)
List()
(!((P4 + -1) >= 0) & (P2 = 0))
variables in guard: ListBuffer(P4, -1)
Data flow:
P4 <- _P4
P2 <- 0
Guard:
(-1 * _P4 >= 0)
dataflow number:2
guard number:1
-------------
INV2(P8, P7, P6) :- INV2(P8, P7 + 1, P6 - 1), P2 < 1 & P7 + 1 >= 1 & P8 >= 1.
Head arguments: ListBuffer((P8,P8), (P7,P7), (P6,P6))
Body arguments: ListBuffer((P8,P8), ((P7 + 1),(P7 + 1)), ((P6 + -1),(P6 + -1)))
Common Arguments:ListBuffer((P8,P8))
relativeComplimentOfHeadArg:ListBuffer((P7,P7), (P6,P6))
relativeComplimentOfBodyArg:ListBuffer(((P7 + 1),(P7 + 1)), ((P6 + -1),(P6 + -1)))
List(P8, P7, P6)
List(INV2(P8, (P7 + 1), (P6 + -1)))
((!((P2 + -1) >= 0) & (((P7 + 1) + -1) >= 0)) & ((P8 + -1) >= 0))
variables in guard: ListBuffer(P2, -1, P7, P8)
Data flow:
P7 <- _P7
P7<-(P7 + 1)
P6<-(P6 + -1)
P8<-P8
Guard:
!((P2 + -1) >= 0)
(_P7 >= 0)
((P8 + -1) >= 0)
dataflow number:2
guard number:3
-------------
INV2(P7, P6, P5) :- INV2(P7, P6 + 1, P5), P6 + 1 >= 1 & P2 < 1 & P7 < 1.
Head arguments: ListBuffer((P7,P7), (P6,P6), (P5,P5))
Body arguments: ListBuffer((P7,P7), ((P6 + 1),(P6 + 1)), (P5,P5))
Common Arguments:ListBuffer((P7,P7), (P5,P5))
relativeComplimentOfHeadArg:ListBuffer((P6,P6))
relativeComplimentOfBodyArg:ListBuffer(((P6 + 1),(P6 + 1)))
List(P7, P6, P5)
List(INV2(P7, (P6 + 1), P5))
(((((P6 + 1) + -1) >= 0) & !((P2 + -1) >= 0)) & !((P7 + -1) >= 0))
variables in guard: ListBuffer(P6, -1, P2, P7)
Data flow:
P6 <- _P6
P6<-(P6 + 1)
P7<-P7
P5<-P5
Guard:
(_P6 >= 0)
!((P2 + -1) >= 0)
!((P7 + -1) >= 0)
dataflow number:1
guard number:3
-------------
INV1(P5, P4, P3, P1, P0) :- P2 >= 1 & P5 = P2 & P4 = P1 & P3 = 0 & P0 = 0.
Head arguments: ListBuffer((P5,P5), (P4,P4), (P3,P3), (P1,P1), (P0,P0))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P5,P5), (P4,P4), (P3,P3), (P1,P1), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P5, P4, P3, P1, P0)
List()
((((((P2 + -1) >= 0) & (P5 = P2)) & (P4 = P1)) & (P3 = 0)) & (P0 = 0))
variables in guard: ListBuffer(P2, -1)
Data flow:
P5 <- P2
P4 <- _P4
P3 <- 0
P1 <- _P1
P0 <- 0
Guard:
((P2 + -1) >= 0)
(_P4 = _P1)
dataflow number:5
guard number:2
-------------
INV1(P11, P10, P9, P7, P6) :- INV1(P11, P10 + 1, P9 - 1, P7, P6), P2 >= 1 & P10 + 1 >= 1 & P7 < 1 & P8 = P11.
Head arguments: ListBuffer((P11,P11), (P10,P10), (P9,P9), (P7,P7), (P6,P6))
Body arguments: ListBuffer((P11,P11), ((P10 + 1),(P10 + 1)), ((P9 + -1),(P9 + -1)), (P7,P7), (P6,P6))
Common Arguments:ListBuffer((P11,P11), (P7,P7), (P6,P6))
relativeComplimentOfHeadArg:ListBuffer((P10,P10), (P9,P9))
relativeComplimentOfBodyArg:ListBuffer(((P10 + 1),(P10 + 1)), ((P9 + -1),(P9 + -1)))
Vector(P11, P10, P9, P7, P6)
List(INV1(P11, (P10 + 1), (P9 + -1), P7, P6))
(((((P2 + -1) >= 0) & (((P10 + 1) + -1) >= 0)) & !((P7 + -1) >= 0)) & (P8 = P11))
variables in guard: ListBuffer(P2, -1, P10, P7)
Data flow:
P10 <- _P10
P10<-(P10 + 1)
P9<-(P9 + -1)
P11<-P11
P7<-P7
P6<-P6
Guard:
((P2 + -1) >= 0)
(_P10 >= 0)
!((P7 + -1) >= 0)
(P8 = P11)
dataflow number:2
guard number:4
-------------
INV1(P12, P11, P10, P8, P7) :- INV1(P12, P11 + 1, P10 - 1, P8 + 1, P7), P8 + 1 >= 1 & P2 >= 1 & P11 + 1 >= 1 & P12 < 1 & P9 = P12.
Head arguments: ListBuffer((P12,P12), (P11,P11), (P10,P10), (P8,P8), (P7,P7))
Body arguments: ListBuffer((P12,P12), ((P11 + 1),(P11 + 1)), ((P10 + -1),(P10 + -1)), ((P8 + 1),(P8 + 1)), (P7,P7))
Common Arguments:ListBuffer((P12,P12), (P7,P7))
relativeComplimentOfHeadArg:ListBuffer((P11,P11), (P10,P10), (P8,P8))
relativeComplimentOfBodyArg:ListBuffer(((P11 + 1),(P11 + 1)), ((P10 + -1),(P10 + -1)), ((P8 + 1),(P8 + 1)))
Vector(P12, P11, P10, P8, P7)
List(INV1(P12, (P11 + 1), (P10 + -1), (P8 + 1), P7))
(((((((P8 + 1) + -1) >= 0) & ((P2 + -1) >= 0)) & (((P11 + 1) + -1) >= 0)) & !((P12 + -1) >= 0)) & (P9 = P12))
variables in guard: ListBuffer(P8, -1, P2, P11, P12)
Data flow:
P11 <- _P11
P8 <- _P8
P11<-(P11 + 1)
P10<-(P10 + -1)
P8<-(P8 + 1)
P12<-P12
P7<-P7
Guard:
(_P8 >= 0)
((P2 + -1) >= 0)
(_P11 >= 0)
!((P12 + -1) >= 0)
(P9 = P12)
dataflow number:3
guard number:5
-------------
INV1(P13, P12, P11, P9, P8) :- INV1(P13, P12 + 1, P11 - 1, P9 + 1, P8 - 1), P2 >= 1 & P9 + 1 >= 1 & P12 + 1 >= 1 & P13 >= 1 & P10 = P13.
Head arguments: ListBuffer((P13,P13), (P12,P12), (P11,P11), (P9,P9), (P8,P8))
Body arguments: ListBuffer((P13,P13), ((P12 + 1),(P12 + 1)), ((P11 + -1),(P11 + -1)), ((P9 + 1),(P9 + 1)), ((P8 + -1),(P8 + -1)))
Common Arguments:ListBuffer((P13,P13))
relativeComplimentOfHeadArg:ListBuffer((P12,P12), (P11,P11), (P9,P9), (P8,P8))
relativeComplimentOfBodyArg:ListBuffer(((P12 + 1),(P12 + 1)), ((P11 + -1),(P11 + -1)), ((P9 + 1),(P9 + 1)), ((P8 + -1),(P8 + -1)))
Vector(P13, P12, P11, P9, P8)
List(INV1(P13, (P12 + 1), (P11 + -1), (P9 + 1), (P8 + -1)))
((((((P2 + -1) >= 0) & (((P9 + 1) + -1) >= 0)) & (((P12 + 1) + -1) >= 0)) & ((P13 + -1) >= 0)) & (P10 = P13))
variables in guard: ListBuffer(P2, -1, P9, P12, P13)
Data flow:
P12 <- _P12
P9 <- _P9
P12<-(P12 + 1)
P11<-(P11 + -1)
P9<-(P9 + 1)
P8<-(P8 + -1)
P13<-P13
Guard:
((P2 + -1) >= 0)
(_P9 >= 0)
(_P12 >= 0)
((P13 + -1) >= 0)
(P10 = P13)
dataflow number:4
guard number:5
-------------
INV1(P10, P9, P8, P6, P5) :- INV1(P10, P9, P8, P6 + 1, P5), P6 + 1 >= 1 & P2 >= 1 & P10 < 1 & P9 < 1 & P7 = P10.
Head arguments: ListBuffer((P10,P10), (P9,P9), (P8,P8), (P6,P6), (P5,P5))
Body arguments: ListBuffer((P10,P10), (P9,P9), (P8,P8), ((P6 + 1),(P6 + 1)), (P5,P5))
Common Arguments:ListBuffer((P10,P10), (P9,P9), (P8,P8), (P5,P5))
relativeComplimentOfHeadArg:ListBuffer((P6,P6))
relativeComplimentOfBodyArg:ListBuffer(((P6 + 1),(P6 + 1)))
Vector(P10, P9, P8, P6, P5)
List(INV1(P10, P9, P8, (P6 + 1), P5))
(((((((P6 + 1) + -1) >= 0) & ((P2 + -1) >= 0)) & !((P10 + -1) >= 0)) & !((P9 + -1) >= 0)) & (P7 = P10))
variables in guard: ListBuffer(P6, -1, P2, P10, P9)
Data flow:
P6 <- _P6
P6<-(P6 + 1)
P10<-P10
P9<-P9
P8<-P8
P5<-P5
Guard:
(_P6 >= 0)
((P2 + -1) >= 0)
!((P10 + -1) >= 0)
!((P9 + -1) >= 0)
(P7 = P10)
dataflow number:1
guard number:5
-------------
INV1(P11, P10, P9, P7, P6) :- INV1(P11, P10, P9, P7 + 1, P6 - 1), P2 >= 1 & P7 + 1 >= 1 & P11 >= 1 & P10 < 1 & P8 = P11.
Head arguments: ListBuffer((P11,P11), (P10,P10), (P9,P9), (P7,P7), (P6,P6))
Body arguments: ListBuffer((P11,P11), (P10,P10), (P9,P9), ((P7 + 1),(P7 + 1)), ((P6 + -1),(P6 + -1)))
Common Arguments:ListBuffer((P11,P11), (P10,P10), (P9,P9))
relativeComplimentOfHeadArg:ListBuffer((P7,P7), (P6,P6))
relativeComplimentOfBodyArg:ListBuffer(((P7 + 1),(P7 + 1)), ((P6 + -1),(P6 + -1)))
Vector(P11, P10, P9, P7, P6)
List(INV1(P11, P10, P9, (P7 + 1), (P6 + -1)))
((((((P2 + -1) >= 0) & (((P7 + 1) + -1) >= 0)) & ((P11 + -1) >= 0)) & !((P10 + -1) >= 0)) & (P8 = P11))
variables in guard: ListBuffer(P2, -1, P7, P11, P10)
Data flow:
P7 <- _P7
P7<-(P7 + 1)
P6<-(P6 + -1)
P11<-P11
P10<-P10
P9<-P9
Guard:
((P2 + -1) >= 0)
(_P7 >= 0)
((P11 + -1) >= 0)
!((P10 + -1) >= 0)
(P8 = P11)
dataflow number:2
guard number:5
-------------
CHC_COMP_FALSE :- INV2(P4, P5, P6), P6 != 0 & P2 < 1 & P5 < 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P4,P4), (P5,P5), (P6,P6))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P4,P4), (P5,P5), (P6,P6))
List()
List(INV2(P4, P5, P6))
((!(P6 = 0) & !((P2 + -1) >= 0)) & !((P5 + -1) >= 0))
variables in guard: ListBuffer(P2, -1, P5)
Data flow:
Guard:
!(P6 = 0)
!((P2 + -1) >= 0)
!((P5 + -1) >= 0)
dataflow number:0
guard number:3
-------------
CHC_COMP_FALSE :- INV1(P5, P7, P9, P6, P8), P9 != P8 & P2 >= 1 & P6 < 1 & P7 < 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P5,P5), (P7,P7), (P9,P9), (P6,P6), (P8,P8))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P5,P5), (P7,P7), (P9,P9), (P6,P6), (P8,P8))
List()
List(INV1(P5, P7, P9, P6, P8))
(((!(P9 = P8) & ((P2 + -1) >= 0)) & !((P6 + -1) >= 0)) & !((P7 + -1) >= 0))
variables in guard: ListBuffer(P2, -1, P6, P7)
Data flow:
Guard:
!(P9 = P8)
((P2 + -1) >= 0)
!((P6 + -1) >= 0)
!((P7 + -1) >= 0)
dataflow number:0
guard number:4
-------------
false :- CHC_COMP_FALSE.
Head arguments: ListBuffer()
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer()
List()
List(CHC_COMP_FALSE)
true
variables in guard: ListBuffer(true)
Data flow:
Guard:
true
dataflow number:0
guard number:1
Hints:
-----------

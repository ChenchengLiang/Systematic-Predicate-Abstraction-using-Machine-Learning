-------------
h5(P4, P3) :- P3 = 0 & P0 = P4 & P1 = P5 & P2 = P6.
Head arguments: ListBuffer((P4,P4), (P3,P3))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P4,P4), (P3,P3))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P4, P3)
List()
((((P3 = 0) & (P0 = P4)) & (P1 = P5)) & (P2 = P6))
variables in guard: ListBuffer()
Data flow:
P4 <- P0
P3 <- 0
Guard:
(P1 = P5)
(P2 = P6)
dataflow number:2
guard number:2
-------------
h14(P4, P3, P2) :- h5(P4, P2), -1 >= P2 - P4 & P3 = P2 & P0 = P4.
Head arguments: ListBuffer((P4,P4), (P3,P3), (P2,P2))
Body arguments: ListBuffer((P4,P4), (P2,P2))
Common Arguments:ListBuffer((P4,P4), (P2,P2))
relativeComplimentOfHeadArg:ListBuffer((P3,P3))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P4, P3, P2)
List(h5(P4, P2))
((((-1 + -1 * (P2 + -1 * P4)) >= 0) & (P3 = P2)) & (P0 = P4))
variables in guard: ListBuffer(-1, P2, P4)
Data flow:
P3 <- P2
P4<-P4
Guard:
((-1 + -1 * (P2 + -1 * P4)) >= 0)
(P0 = P4)
dataflow number:1
guard number:2
-------------
h23(P4, P3, P2, P1) :- h14(P4, P3, P1), -1 >= P1 - P4 & P2 = P1 & P0 = P4.
Head arguments: ListBuffer((P4,P4), (P3,P3), (P2,P2), (P1,P1))
Body arguments: ListBuffer((P4,P4), (P3,P3), (P1,P1))
Common Arguments:ListBuffer((P4,P4), (P3,P3), (P1,P1))
relativeComplimentOfHeadArg:ListBuffer((P2,P2))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P4, P3, P2, P1)
List(h14(P4, P3, P1))
((((-1 + -1 * (P1 + -1 * P4)) >= 0) & (P2 = P1)) & (P0 = P4))
variables in guard: ListBuffer(-1, P1, P4)
Data flow:
P2 <- P1
P4<-P4
P3<-P3
Guard:
((-1 + -1 * (P1 + -1 * P4)) >= 0)
(P0 = P4)
dataflow number:1
guard number:2
-------------
h23(P4, P3, P2, P1) :- h23(P0, P3, P2, P1 - 1), 0 >= P3 - (P1 - 1) & -1 >= P1 - 1 - P0 & P4 = P0.
Head arguments: ListBuffer((P4,P4), (P3,P3), (P2,P2), (P1,P1))
Body arguments: ListBuffer((P0,P0), (P3,P3), (P2,P2), ((P1 + -1),(P1 + -1)))
Common Arguments:ListBuffer((P3,P3), (P2,P2))
relativeComplimentOfHeadArg:ListBuffer((P4,P4), (P1,P1))
relativeComplimentOfBodyArg:ListBuffer((P0,P0), ((P1 + -1),(P1 + -1)))
Vector(P4, P3, P2, P1)
List(h23(P0, P3, P2, (P1 + -1)))
(((-1 * (P3 + -1 * (P1 + -1)) >= 0) & ((-1 + -1 * ((P1 + -1) + -1 * P0)) >= 0)) & (P4 = P0))
variables in guard: ListBuffer(-1, P3, P1, P0)
Data flow:
P4 <- P0
P1 <- _P1
P4<-P0
P1<-(P1 + -1)
P3<-P3
P2<-P2
Guard:
((-1 + (-1 * P3 + _P1)) >= 0)
((-1 * _P1 + P0) >= 0)
dataflow number:2
guard number:2
-------------
h14(P4, P3, P2) :- h23(P0, P3, P2 - 1, P1), P1 >= P0 & P4 = P0.
Head arguments: ListBuffer((P4,P4), (P3,P3), (P2,P2))
Body arguments: ListBuffer((P0,P0), (P3,P3), ((P2 + -1),(P2 + -1)), (P1,P1))
Common Arguments:ListBuffer((P3,P3))
relativeComplimentOfHeadArg:ListBuffer((P4,P4), (P2,P2))
relativeComplimentOfBodyArg:ListBuffer((P0,P0), ((P2 + -1),(P2 + -1)), (P1,P1))
Vector(P4, P3, P2)
List(h23(P0, P3, (P2 + -1), P1))
(((P1 + -1 * P0) >= 0) & (P4 = P0))
variables in guard: ListBuffer(P1, -1, P0)
Data flow:
P4 <- P0
P3<-P3
Guard:
((P1 + -1 * P0) >= 0)
dataflow number:1
guard number:1
-------------
h5(P4, P3) :- h14(P4, P3 - 1, P2), P2 >= P4 & P0 = P4.
Head arguments: ListBuffer((P4,P4), (P3,P3))
Body arguments: ListBuffer((P4,P4), ((P3 + -1),(P3 + -1)), (P2,P2))
Common Arguments:ListBuffer((P4,P4))
relativeComplimentOfHeadArg:ListBuffer((P3,P3))
relativeComplimentOfBodyArg:ListBuffer(((P3 + -1),(P3 + -1)), (P2,P2))
Vector(P4, P3)
List(h14(P4, (P3 + -1), P2))
(((P2 + -1 * P4) >= 0) & (P0 = P4))
variables in guard: ListBuffer(P2, -1, P4)
Data flow:
P4<-P4
Guard:
((P2 + -1 * P4) >= 0)
(P0 = P4)
dataflow number:0
guard number:2
-------------
false :- h23(P0, P3, P2, P1), P3 - P1 >= 1 & -1 >= P1 - P0.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P0,P0), (P3,P3), (P2,P2), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P0,P0), (P3,P3), (P2,P2), (P1,P1))
List()
List(h23(P0, P3, P2, P1))
((((P3 + -1 * P1) + -1) >= 0) & ((-1 + -1 * (P1 + -1 * P0)) >= 0))
variables in guard: ListBuffer(P3, -1, P1, P0)
Data flow:
Guard:
(((P3 + -1 * P1) + -1) >= 0)
((-1 + -1 * (P1 + -1 * P0)) >= 0)
dataflow number:0
guard number:2
Hints:
-----------

-------------
inv_main11(P6, P3, P5, P0, P4, P7) :- inv_main10(P6, P3, P5, P0, P4, P7).
Head arguments: ListBuffer((P6,P6), (P3,P3), (P5,P5), (P0,P0), (P4,P4), (P7,P7))
Body arguments: ListBuffer((P6,P6), (P3,P3), (P5,P5), (P0,P0), (P4,P4), (P7,P7))
Common Arguments:ListBuffer((P6,P6), (P3,P3), (P5,P5), (P0,P0), (P4,P4), (P7,P7))
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer()
Vector(P6, P3, P5, P0, P4, P7)
List(inv_main10(P6, P3, P5, P0, P4, P7))
true
variables in guard: ListBuffer(true)
Data flow:
P6<-P6
P3<-P3
P5<-P5
P0<-P0
P4<-P4
P7<-P7
Guard:
true
dataflow number:0
guard number:1
-------------
inv_main11(P6, P8, P5, P9, P4, P7) :- inv_main11(P6, P8 - 1, P5, P9 - 1, P4, P7), P4 - (P8 - 1) >= 1.
Head arguments: ListBuffer((P6,P6), (P8,P8), (P5,P5), (P9,P9), (P4,P4), (P7,P7))
Body arguments: ListBuffer((P6,P6), ((P8 + -1),(P8 + -1)), (P5,P5), ((P9 + -1),(P9 + -1)), (P4,P4), (P7,P7))
Common Arguments:ListBuffer((P6,P6), (P5,P5), (P4,P4), (P7,P7))
relativeComplimentOfHeadArg:ListBuffer((P8,P8), (P9,P9))
relativeComplimentOfBodyArg:ListBuffer(((P8 + -1),(P8 + -1)), ((P9 + -1),(P9 + -1)))
Vector(P6, P8, P5, P9, P4, P7)
List(inv_main11(P6, (P8 + -1), P5, (P9 + -1), P4, P7))
(((P4 + -1 * (P8 + -1)) + -1) >= 0)
variables in guard: ListBuffer(P4, -1, P8)
Data flow:
P8 <- _P8
P8<-(P8 + -1)
P9<-(P9 + -1)
P6<-P6
P5<-P5
P4<-P4
P7<-P7
Guard:
((P4 + -1 * _P8) >= 0)
dataflow number:2
guard number:1
-------------
inv_main19(P6, P3, P8, P5, P9, P7) :- inv_main19(P6, P3, P8 - 1, P5, P9 - 1, P7), P7 - (P8 - 1) >= 1.
Head arguments: ListBuffer((P6,P6), (P3,P3), (P8,P8), (P5,P5), (P9,P9), (P7,P7))
Body arguments: ListBuffer((P6,P6), (P3,P3), ((P8 + -1),(P8 + -1)), (P5,P5), ((P9 + -1),(P9 + -1)), (P7,P7))
Common Arguments:ListBuffer((P6,P6), (P3,P3), (P5,P5), (P7,P7))
relativeComplimentOfHeadArg:ListBuffer((P8,P8), (P9,P9))
relativeComplimentOfBodyArg:ListBuffer(((P8 + -1),(P8 + -1)), ((P9 + -1),(P9 + -1)))
Vector(P6, P3, P8, P5, P9, P7)
List(inv_main19(P6, P3, (P8 + -1), P5, (P9 + -1), P7))
(((P7 + -1 * (P8 + -1)) + -1) >= 0)
variables in guard: ListBuffer(P7, -1, P8)
Data flow:
P8 <- _P8
P8<-(P8 + -1)
P9<-(P9 + -1)
P6<-P6
P3<-P3
P5<-P5
P7<-P7
Guard:
((P7 + -1 * _P8) >= 0)
dataflow number:2
guard number:1
-------------
inv_main6(P6, P3, P5, P0, P7) :- inv_main11(P6, P3, P5, P0, P4, P7), P3 - P4 < 1 & P4 - P3 < 1.
Head arguments: ListBuffer((P6,P6), (P3,P3), (P5,P5), (P0,P0), (P7,P7))
Body arguments: ListBuffer((P6,P6), (P3,P3), (P5,P5), (P0,P0), (P4,P4), (P7,P7))
Common Arguments:ListBuffer((P6,P6), (P3,P3), (P5,P5), (P0,P0), (P7,P7))
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P4,P4))
Vector(P6, P3, P5, P0, P7)
List(inv_main11(P6, P3, P5, P0, P4, P7))
(!(((P3 + -1 * P4) + -1) >= 0) & !(((P4 + -1 * P3) + -1) >= 0))
variables in guard: ListBuffer(P3, -1, P4)
Data flow:
P6<-P6
P3<-P3
P5<-P5
P0<-P0
P7<-P7
Guard:
!(((P3 + -1 * P4) + -1) >= 0)
!(((P4 + -1 * P3) + -1) >= 0)
dataflow number:0
guard number:2
-------------
inv_main10(P6, P3, P5, P8, P9, P7) :- inv_main11(P6, P3, P5, P8 + 1, P9 - 1, P7), P9 - 1 - P3 < 1 & P3 - (P9 - 1) >= 1.
Head arguments: ListBuffer((P6,P6), (P3,P3), (P5,P5), (P8,P8), (P9,P9), (P7,P7))
Body arguments: ListBuffer((P6,P6), (P3,P3), (P5,P5), ((P8 + 1),(P8 + 1)), ((P9 + -1),(P9 + -1)), (P7,P7))
Common Arguments:ListBuffer((P6,P6), (P3,P3), (P5,P5), (P7,P7))
relativeComplimentOfHeadArg:ListBuffer((P8,P8), (P9,P9))
relativeComplimentOfBodyArg:ListBuffer(((P8 + 1),(P8 + 1)), ((P9 + -1),(P9 + -1)))
Vector(P6, P3, P5, P8, P9, P7)
List(inv_main11(P6, P3, P5, (P8 + 1), (P9 + -1), P7))
(!((((P9 + -1) + -1 * P3) + -1) >= 0) & (((P3 + -1 * (P9 + -1)) + -1) >= 0))
variables in guard: ListBuffer(P9, -1, P3)
Data flow:
P9 <- _P9
P6<-P6
P3<-P3
P5<-P5
P7<-P7
Guard:
((1 + (-1 * _P9 + P3)) >= 0)
((P3 + -1 * _P9) >= 0)
dataflow number:1
guard number:2
-------------
inv_main16(P6, P3, P2, P5, P1) :- inv_main6(P6, P3, P5, P0, P7), P6 - P7 < 1 & P2 = P6 & P1 = P5.
Head arguments: ListBuffer((P6,P6), (P3,P3), (P2,P2), (P5,P5), (P1,P1))
Body arguments: ListBuffer((P6,P6), (P3,P3), (P5,P5), (P0,P0), (P7,P7))
Common Arguments:ListBuffer((P6,P6), (P3,P3), (P5,P5))
relativeComplimentOfHeadArg:ListBuffer((P2,P2), (P1,P1))
relativeComplimentOfBodyArg:ListBuffer((P0,P0), (P7,P7))
Vector(P6, P3, P2, P5, P1)
List(inv_main6(P6, P3, P5, P0, P7))
((!(((P6 + -1 * P7) + -1) >= 0) & (P2 = P6)) & (P1 = P5))
variables in guard: ListBuffer(P6, -1, P7)
Data flow:
P2 <- P6
P1 <- P5
P3<-P3
Guard:
!(((P6 + -1 * P7) + -1) >= 0)
dataflow number:2
guard number:1
-------------
inv_main19(P6, P3, P2, P5, P8, P9) :- inv_main6(P6, P3, P5, P0, P9 - 1), P6 - (P9 - 1) >= 1 & P2 = P6 & P8 + 1 = P5.
Head arguments: ListBuffer((P6,P6), (P3,P3), (P2,P2), (P5,P5), (P8,P8), (P9,P9))
Body arguments: ListBuffer((P6,P6), (P3,P3), (P5,P5), (P0,P0), ((P9 + -1),(P9 + -1)))
Common Arguments:ListBuffer((P6,P6), (P3,P3), (P5,P5))
relativeComplimentOfHeadArg:ListBuffer((P2,P2), (P8,P8), (P9,P9))
relativeComplimentOfBodyArg:ListBuffer((P0,P0), ((P9 + -1),(P9 + -1)))
Vector(P6, P3, P2, P5, P8, P9)
List(inv_main6(P6, P3, P5, P0, (P9 + -1)))
(((((P6 + -1 * (P9 + -1)) + -1) >= 0) & (P2 = P6)) & ((P8 + 1) = P5))
variables in guard: ListBuffer(P6, -1, P9)
Data flow:
P2 <- P6
P8 <- (P5 + -1)
P9 <- _P9
P3<-P3
Guard:
((P6 + -1 * _P9) >= 0)
dataflow number:3
guard number:1
-------------
inv_main16(P6, P3, P2, P5, P1) :- inv_main19(P6, P3, P2, P5, P1, P7), !(P2 - P7 >= 1 | P7 - P2 >= 1).
Head arguments: ListBuffer((P6,P6), (P3,P3), (P2,P2), (P5,P5), (P1,P1))
Body arguments: ListBuffer((P6,P6), (P3,P3), (P2,P2), (P5,P5), (P1,P1), (P7,P7))
Common Arguments:ListBuffer((P6,P6), (P3,P3), (P2,P2), (P5,P5), (P1,P1))
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P7,P7))
Vector(P6, P3, P2, P5, P1)
List(inv_main19(P6, P3, P2, P5, P1, P7))
!((((P2 + -1 * P7) + -1) >= 0) | (((P7 + -1 * P2) + -1) >= 0))
variables in guard: ListBuffer(P2, -1, P7)
Data flow:
P6<-P6
P3<-P3
P2<-P2
P5<-P5
P1<-P1
Guard:
!((((P2 + -1 * P7) + -1) >= 0) | (((P7 + -1 * P2) + -1) >= 0))
dataflow number:0
guard number:1
-------------
inv_main19(P6, P3, P2, P5, P8, P9) :- inv_main19(P6, P3, P2, P5, P8 + 1, P9 - 1), P9 - 1 - P2 < 1 & P2 - (P9 - 1) >= 1.
Head arguments: ListBuffer((P6,P6), (P3,P3), (P2,P2), (P5,P5), (P8,P8), (P9,P9))
Body arguments: ListBuffer((P6,P6), (P3,P3), (P2,P2), (P5,P5), ((P8 + 1),(P8 + 1)), ((P9 + -1),(P9 + -1)))
Common Arguments:ListBuffer((P6,P6), (P3,P3), (P2,P2), (P5,P5))
relativeComplimentOfHeadArg:ListBuffer((P8,P8), (P9,P9))
relativeComplimentOfBodyArg:ListBuffer(((P8 + 1),(P8 + 1)), ((P9 + -1),(P9 + -1)))
Vector(P6, P3, P2, P5, P8, P9)
List(inv_main19(P6, P3, P2, P5, (P8 + 1), (P9 + -1)))
(!((((P9 + -1) + -1 * P2) + -1) >= 0) & (((P2 + -1 * (P9 + -1)) + -1) >= 0))
variables in guard: ListBuffer(P9, -1, P2)
Data flow:
P9 <- _P9
P8<-(P8 + 1)
P9<-(P9 + -1)
P6<-P6
P3<-P3
P2<-P2
P5<-P5
Guard:
((1 + (-1 * _P9 + P2)) >= 0)
((P2 + -1 * _P9) >= 0)
dataflow number:2
guard number:2
-------------
inv_main6(P7, P5, P6, P3, P0) :- P7 < 1 & 0 = P0 & P3 = P6 & P5 = P7.
Head arguments: ListBuffer((P7,P7), (P5,P5), (P6,P6), (P3,P3), (P0,P0))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P7,P7), (P5,P5), (P6,P6), (P3,P3), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P7, P5, P6, P3, P0)
List()
(((!((P7 + -1) >= 0) & (0 = P0)) & (P3 = P6)) & (P5 = P7))
variables in guard: ListBuffer(P7, -1)
Data flow:
P7 <- _P7
P5 <- _P5
P6 <- _P6
P3 <- _P3
P0 <- 0
Guard:
(-1 * _P7 >= 0)
(_P3 = _P6)
(_P5 = _P7)
dataflow number:5
guard number:3
-------------
inv_main10(P5, P4, P6, P7, P1, P0) :- P5 >= 1 & 0 = P0 & 1 = P1 & P4 = P5 & P7 = P6 - 1.
Head arguments: ListBuffer((P5,P5), (P4,P4), (P6,P6), (P7,P7), (P1,P1), (P0,P0))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P5,P5), (P4,P4), (P6,P6), (P7,P7), (P1,P1), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P5, P4, P6, P7, P1, P0)
List()
((((((P5 + -1) >= 0) & (0 = P0)) & (1 = P1)) & (P4 = P5)) & (P7 = (-1 + P6)))
variables in guard: ListBuffer(P5, -1)
Data flow:
P5 <- _P5
P4 <- _P4
P6 <- _P6
P7 <- _P7
P1 <- 1
P0 <- 0
Guard:
((-1 + _P5) >= 0)
(_P4 = _P5)
(_P7 = (-1 + _P6))
dataflow number:6
guard number:3
-------------
CHC_COMP_FALSE :- inv_main10(P6, P3, P5, P0, P4, P7), P3 < P4.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P6,P6), (P3,P3), (P5,P5), (P0,P0), (P4,P4), (P7,P7))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P6,P6), (P3,P3), (P5,P5), (P0,P0), (P4,P4), (P7,P7))
List()
List(inv_main10(P6, P3, P5, P0, P4, P7))
!((P3 + -1 * P4) >= 0)
variables in guard: ListBuffer(P3, -1, P4)
Data flow:
Guard:
!((P3 + -1 * P4) >= 0)
dataflow number:0
guard number:1
-------------
CHC_COMP_FALSE :- inv_main6(P6, P3, P5, P0, P7), P5 - P0 = P6 & -1 >= P6.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P6,P6), (P3,P3), (P5,P5), (P0,P0), (P7,P7))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P6,P6), (P3,P3), (P5,P5), (P0,P0), (P7,P7))
List()
List(inv_main6(P6, P3, P5, P0, P7))
((((P5 + -1 * P0) + -1 * P6) = 0) & ((-1 * P6 + -1) >= 0))
variables in guard: ListBuffer(P5, -1, P0, P6)
Data flow:
Guard:
(((P5 + -1 * P0) + -1 * P6) = 0)
((-1 * P6 + -1) >= 0)
dataflow number:0
guard number:2
-------------
CHC_COMP_FALSE :- inv_main6(P6, P3, P0, P0, P7), P6 >= 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P6,P6), (P3,P3), (P0,P0), (P0,P0), (P7,P7))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P6,P6), (P3,P3), (P0,P0), (P0,P0), (P7,P7))
List()
List(inv_main6(P6, P3, P0, P0, P7))
((P6 + -1) >= 0)
variables in guard: ListBuffer(P6, -1)
Data flow:
Guard:
((P6 + -1) >= 0)
dataflow number:0
guard number:1
-------------
CHC_COMP_FALSE :- inv_main6(P6, P3, P5, P0, P7), P5 - P0 != P6 & P5 != P0.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P6,P6), (P3,P3), (P5,P5), (P0,P0), (P7,P7))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P6,P6), (P3,P3), (P5,P5), (P0,P0), (P7,P7))
List()
List(inv_main6(P6, P3, P5, P0, P7))
(!(((P5 + -1 * P0) + -1 * P6) = 0) & !(P5 = P0))
variables in guard: ListBuffer(P5, -1, P0, P6)
Data flow:
Guard:
!(((P5 + -1 * P0) + -1 * P6) = 0)
!(P5 = P0)
dataflow number:0
guard number:2
-------------
CHC_COMP_FALSE :- inv_main16(P6, P3, P2, P5, P1), P5 - P1 = P6 & -1 >= P6.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P6,P6), (P3,P3), (P2,P2), (P5,P5), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P6,P6), (P3,P3), (P2,P2), (P5,P5), (P1,P1))
List()
List(inv_main16(P6, P3, P2, P5, P1))
((((P5 + -1 * P1) + -1 * P6) = 0) & ((-1 * P6 + -1) >= 0))
variables in guard: ListBuffer(P5, -1, P1, P6)
Data flow:
Guard:
(((P5 + -1 * P1) + -1 * P6) = 0)
((-1 * P6 + -1) >= 0)
dataflow number:0
guard number:2
-------------
CHC_COMP_FALSE :- inv_main16(P6, P3, P2, P1, P1), P6 >= 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P6,P6), (P3,P3), (P2,P2), (P1,P1), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P6,P6), (P3,P3), (P2,P2), (P1,P1), (P1,P1))
List()
List(inv_main16(P6, P3, P2, P1, P1))
((P6 + -1) >= 0)
variables in guard: ListBuffer(P6, -1)
Data flow:
Guard:
((P6 + -1) >= 0)
dataflow number:0
guard number:1
-------------
CHC_COMP_FALSE :- inv_main16(P6, P3, P2, P5, P1), P5 - P1 != P6 & P5 != P1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P6,P6), (P3,P3), (P2,P2), (P5,P5), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P6,P6), (P3,P3), (P2,P2), (P5,P5), (P1,P1))
List()
List(inv_main16(P6, P3, P2, P5, P1))
(!(((P5 + -1 * P1) + -1 * P6) = 0) & !(P5 = P1))
variables in guard: ListBuffer(P5, -1, P1, P6)
Data flow:
Guard:
!(((P5 + -1 * P1) + -1 * P6) = 0)
!(P5 = P1)
dataflow number:0
guard number:2
-------------
CHC_COMP_FALSE :- inv_main16(P6, P3, P2, P5, P1), P3 != P2.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P6,P6), (P3,P3), (P2,P2), (P5,P5), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P6,P6), (P3,P3), (P2,P2), (P5,P5), (P1,P1))
List()
List(inv_main16(P6, P3, P2, P5, P1))
!(P3 = P2)
variables in guard: ListBuffer()
Data flow:
Guard:
!(P3 = P2)
dataflow number:0
guard number:1
-------------
false :- CHC_COMP_FALSE.
Head arguments: ListBuffer()
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer()
List()
List(CHC_COMP_FALSE)
true
variables in guard: ListBuffer(true)
Data flow:
Guard:
true
dataflow number:0
guard number:1
Hints:
-----------

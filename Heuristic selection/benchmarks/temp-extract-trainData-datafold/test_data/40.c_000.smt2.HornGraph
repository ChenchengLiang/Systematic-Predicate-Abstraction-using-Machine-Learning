-------------
h5(P14, P11, P10, P9, P8, P6, P5) :- -1 >= P14 & P6 = 0 & P5 = 1 & P1 = P8 & P2 = P9 & P3 = P10 & P4 = P11 & P7 = P14.
Head arguments: ListBuffer((P14,P14), (P11,P11), (P10,P10), (P9,P9), (P8,P8), (P6,P6), (P5,P5))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P14,P14), (P11,P11), (P10,P10), (P9,P9), (P8,P8), (P6,P6), (P5,P5))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P14, P11, P10, P9, P8, P6, P5)
List()
(((((((((-1 + -1 * P14) >= 0) & (P6 = 0)) & (P5 = 1)) & (P1 = P8)) & (P2 = P9)) & (P3 = P10)) & (P4 = P11)) & (P7 = P14))
variables in guard: ListBuffer(-1, P14)
Data flow:
P14 <- P7
P14 <- _P14
P11 <- P4
P10 <- P3
P9 <- P2
P8 <- P1
P6 <- 0
P5 <- 1
Guard:
((-1 + -1 * _P14) >= 0)
dataflow number:7
guard number:1
-------------
h5(P14, P11, P10, P9, P8, P6, P5) :- P14 >= 1 & P6 = 0 & P5 = 1 & P1 = P8 & P2 = P9 & P3 = P10 & P4 = P11 & P7 = P14.
Head arguments: ListBuffer((P14,P14), (P11,P11), (P10,P10), (P9,P9), (P8,P8), (P6,P6), (P5,P5))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P14,P14), (P11,P11), (P10,P10), (P9,P9), (P8,P8), (P6,P6), (P5,P5))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P14, P11, P10, P9, P8, P6, P5)
List()
(((((((((P14 + -1) >= 0) & (P6 = 0)) & (P5 = 1)) & (P1 = P8)) & (P2 = P9)) & (P3 = P10)) & (P4 = P11)) & (P7 = P14))
variables in guard: ListBuffer(P14, -1)
Data flow:
P14 <- P7
P14 <- _P14
P11 <- P4
P10 <- P3
P9 <- P2
P8 <- P1
P6 <- 0
P5 <- 1
Guard:
((-1 + _P14) >= 0)
dataflow number:7
guard number:1
-------------
h9(P10, P9, P8, P7, P6, P5, P4) :- h5(P13, P10, P9, P8, P7, P5, P4), P6 = P13 & P3 = P10 & P2 = P9 & P1 = P8 & P0 = P7.
Head arguments: ListBuffer((P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
Body arguments: ListBuffer((P13,P13), (P10,P10), (P9,P9), (P8,P8), (P7,P7), (P5,P5), (P4,P4))
Common Arguments:ListBuffer((P10,P10), (P9,P9), (P8,P8), (P7,P7), (P5,P5), (P4,P4))
relativeComplimentOfHeadArg:ListBuffer((P6,P6))
relativeComplimentOfBodyArg:ListBuffer((P13,P13))
Vector(P10, P9, P8, P7, P6, P5, P4)
List(h5(P13, P10, P9, P8, P7, P5, P4))
(((((P6 = P13) & (P3 = P10)) & (P2 = P9)) & (P1 = P8)) & (P0 = P7))
variables in guard: ListBuffer()
Data flow:
P6 <- P13
P10<-P10
P9<-P9
P8<-P8
P7<-P7
P5<-P5
P4<-P4
Guard:
(P3 = P10)
(P2 = P9)
(P1 = P8)
(P0 = P7)
dataflow number:1
guard number:4
-------------
h9(P10, P9, P8, P7, P6, P5, P4) :- P5 = 1 & P6 = 0 & P4 = 1 & P0 = P7 & P1 = P8 & P2 = P9 & P3 = P10 & 0 = P13.
Head arguments: ListBuffer((P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P10, P9, P8, P7, P6, P5, P4)
List()
((((((((P5 = 1) & (P6 = 0)) & (P4 = 1)) & (P0 = P7)) & (P1 = P8)) & (P2 = P9)) & (P3 = P10)) & (0 = P13))
variables in guard: ListBuffer()
Data flow:
P10 <- P3
P9 <- P2
P8 <- P1
P7 <- P0
P6 <- 0
P5 <- 1
P4 <- 1
Guard:
(0 = P13)
dataflow number:7
guard number:1
-------------
h11(P10, P9, P8, P7, P6, P5, P4) :- h9(P10, P9, P8, P7, P6, P5, P4), P3 = P10 & P2 = P9 & P1 = P8 & P0 = P7.
Head arguments: ListBuffer((P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
Body arguments: ListBuffer((P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
Common Arguments:ListBuffer((P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer()
Vector(P10, P9, P8, P7, P6, P5, P4)
List(h9(P10, P9, P8, P7, P6, P5, P4))
((((P3 = P10) & (P2 = P9)) & (P1 = P8)) & (P0 = P7))
variables in guard: ListBuffer()
Data flow:
P10<-P10
P9<-P9
P8<-P8
P7<-P7
P6<-P6
P5<-P5
P4<-P4
Guard:
(P3 = P10)
(P2 = P9)
(P1 = P8)
(P0 = P7)
dataflow number:0
guard number:4
-------------
h16(P11, P10, P9, P8, P7, P6, P5) :- h11(P11, P10, P9, P8, P7, P6 - 2, P5), -1 >= P11 & P4 = P11 & P3 = P10 & P2 = P9 & P1 = P8.
Head arguments: ListBuffer((P11,P11), (P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5))
Body arguments: ListBuffer((P11,P11), (P10,P10), (P9,P9), (P8,P8), (P7,P7), ((P6 + -2),(P6 + -2)), (P5,P5))
Common Arguments:ListBuffer((P11,P11), (P10,P10), (P9,P9), (P8,P8), (P7,P7), (P5,P5))
relativeComplimentOfHeadArg:ListBuffer((P6,P6))
relativeComplimentOfBodyArg:ListBuffer(((P6 + -2),(P6 + -2)))
Vector(P11, P10, P9, P8, P7, P6, P5)
List(h11(P11, P10, P9, P8, P7, (P6 + -2), P5))
((((((-1 + -1 * P11) >= 0) & (P4 = P11)) & (P3 = P10)) & (P2 = P9)) & (P1 = P8))
variables in guard: ListBuffer(-1, P11)
Data flow:
P11<-P11
P10<-P10
P9<-P9
P8<-P8
P7<-P7
P5<-P5
Guard:
((-1 + -1 * P11) >= 0)
(P4 = P11)
(P3 = P10)
(P2 = P9)
(P1 = P8)
dataflow number:0
guard number:5
-------------
h16(P11, P10, P9, P8, P7, P6, P5) :- h11(P11, P10, P9, P8, P7, P6 - 2, P5), P11 >= 1 & P4 = P11 & P3 = P10 & P2 = P9 & P1 = P8.
Head arguments: ListBuffer((P11,P11), (P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5))
Body arguments: ListBuffer((P11,P11), (P10,P10), (P9,P9), (P8,P8), (P7,P7), ((P6 + -2),(P6 + -2)), (P5,P5))
Common Arguments:ListBuffer((P11,P11), (P10,P10), (P9,P9), (P8,P8), (P7,P7), (P5,P5))
relativeComplimentOfHeadArg:ListBuffer((P6,P6))
relativeComplimentOfBodyArg:ListBuffer(((P6 + -2),(P6 + -2)))
Vector(P11, P10, P9, P8, P7, P6, P5)
List(h11(P11, P10, P9, P8, P7, (P6 + -2), P5))
((((((P11 + -1) >= 0) & (P4 = P11)) & (P3 = P10)) & (P2 = P9)) & (P1 = P8))
variables in guard: ListBuffer(P11, -1)
Data flow:
P11<-P11
P10<-P10
P9<-P9
P8<-P8
P7<-P7
P5<-P5
Guard:
((P11 + -1) >= 0)
(P4 = P11)
(P3 = P10)
(P2 = P9)
(P1 = P8)
dataflow number:0
guard number:5
-------------
h25(P11, P10, P9, P8, P7, P6, P5) :- h16(P11, P10, P9, P8, P7, P6, P5 - 1), P4 = P11 & P3 = P10 & P2 = P9 & P1 = P8.
Head arguments: ListBuffer((P11,P11), (P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5))
Body arguments: ListBuffer((P11,P11), (P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), ((P5 + -1),(P5 + -1)))
Common Arguments:ListBuffer((P11,P11), (P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6))
relativeComplimentOfHeadArg:ListBuffer((P5,P5))
relativeComplimentOfBodyArg:ListBuffer(((P5 + -1),(P5 + -1)))
Vector(P11, P10, P9, P8, P7, P6, P5)
List(h16(P11, P10, P9, P8, P7, P6, (P5 + -1)))
((((P4 = P11) & (P3 = P10)) & (P2 = P9)) & (P1 = P8))
variables in guard: ListBuffer()
Data flow:
P11<-P11
P10<-P10
P9<-P9
P8<-P8
P7<-P7
P6<-P6
Guard:
(P4 = P11)
(P3 = P10)
(P2 = P9)
(P1 = P8)
dataflow number:0
guard number:4
-------------
h25(P11, P10, P9, P8, P7, P6, P5) :- h16(P11, P10, P9, P8, P7, P6, P5 - 1), P4 = P11 & P3 = P10 & P2 = P9 & P1 = P8.
Head arguments: ListBuffer((P11,P11), (P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5))
Body arguments: ListBuffer((P11,P11), (P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), ((P5 + -1),(P5 + -1)))
Common Arguments:ListBuffer((P11,P11), (P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6))
relativeComplimentOfHeadArg:ListBuffer((P5,P5))
relativeComplimentOfBodyArg:ListBuffer(((P5 + -1),(P5 + -1)))
Vector(P11, P10, P9, P8, P7, P6, P5)
List(h16(P11, P10, P9, P8, P7, P6, (P5 + -1)))
((((P4 = P11) & (P3 = P10)) & (P2 = P9)) & (P1 = P8))
variables in guard: ListBuffer()
Data flow:
P11<-P11
P10<-P10
P9<-P9
P8<-P8
P7<-P7
P6<-P6
Guard:
(P4 = P11)
(P3 = P10)
(P2 = P9)
(P1 = P8)
dataflow number:0
guard number:4
-------------
h11(P10, P9, P8, P7, P6, P5, P4) :- h16(P10, P9, P8, P7, P6, P5, P4 - 2), P3 = P10 & P2 = P9 & P1 = P8 & P0 = P7.
Head arguments: ListBuffer((P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
Body arguments: ListBuffer((P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), ((P4 + -2),(P4 + -2)))
Common Arguments:ListBuffer((P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5))
relativeComplimentOfHeadArg:ListBuffer((P4,P4))
relativeComplimentOfBodyArg:ListBuffer(((P4 + -2),(P4 + -2)))
Vector(P10, P9, P8, P7, P6, P5, P4)
List(h16(P10, P9, P8, P7, P6, P5, (P4 + -2)))
((((P3 = P10) & (P2 = P9)) & (P1 = P8)) & (P0 = P7))
variables in guard: ListBuffer()
Data flow:
P10<-P10
P9<-P9
P8<-P8
P7<-P7
P6<-P6
P5<-P5
Guard:
(P3 = P10)
(P2 = P9)
(P1 = P8)
(P0 = P7)
dataflow number:0
guard number:4
-------------
h11(P10, P9, P8, P7, P6, P5, P4) :- h25(P10, P9, P8, P7, P6, P5, P4), P3 = P10 & P2 = P9 & P1 = P8 & P0 = P7.
Head arguments: ListBuffer((P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
Body arguments: ListBuffer((P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
Common Arguments:ListBuffer((P10,P10), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer()
Vector(P10, P9, P8, P7, P6, P5, P4)
List(h25(P10, P9, P8, P7, P6, P5, P4))
((((P3 = P10) & (P2 = P9)) & (P1 = P8)) & (P0 = P7))
variables in guard: ListBuffer()
Data flow:
P10<-P10
P9<-P9
P8<-P8
P7<-P7
P6<-P6
P5<-P5
P4<-P4
Guard:
(P3 = P10)
(P2 = P9)
(P1 = P8)
(P0 = P7)
dataflow number:0
guard number:4
-------------
h30(P7, P6, P5, P4, P2, P1) :- h11(0, P9, P8, P7, P6, P5, P4), P1 = 0 & P2 = 0 & P3 = 0 & 0 = P10 & P0 = P7.
Head arguments: ListBuffer((P7,P7), (P6,P6), (P5,P5), (P4,P4), (P2,P2), (P1,P1))
Body arguments: ListBuffer((0,0), (P9,P9), (P8,P8), (P7,P7), (P6,P6), (P5,P5), (P4,P4))
Common Arguments:ListBuffer((P7,P7), (P6,P6), (P5,P5), (P4,P4))
relativeComplimentOfHeadArg:ListBuffer((P2,P2), (P1,P1))
relativeComplimentOfBodyArg:ListBuffer((0,0), (P9,P9), (P8,P8))
Vector(P7, P6, P5, P4, P2, P1)
List(h11(0, P9, P8, P7, P6, P5, P4))
(((((P1 = 0) & (P2 = 0)) & (P3 = 0)) & (0 = P10)) & (P0 = P7))
variables in guard: ListBuffer()
Data flow:
P2 <- 0
P1 <- 0
P7<-P7
P6<-P6
P5<-P5
P4<-P4
h11_argument_0<-0
Guard:
(P3 = 0)
(0 = P10)
(P0 = P7)
dataflow number:2
guard number:3
-------------
h35(P9, P8, P7, P6, P4, P3) :- h30(P9, P8, P7, P6, P4 - 1, P0), P7 = P6 + P0 - P3 & -1 >= P9 & P2 = P9.
Head arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6), (P4,P4), (P3,P3))
Body arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6), ((P4 + -1),(P4 + -1)), (P0,P0))
Common Arguments:ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6))
relativeComplimentOfHeadArg:ListBuffer((P4,P4), (P3,P3))
relativeComplimentOfBodyArg:ListBuffer(((P4 + -1),(P4 + -1)), (P0,P0))
Vector(P9, P8, P7, P6, P4, P3)
List(h30(P9, P8, P7, P6, (P4 + -1), P0))
(((P7 = ((P6 + P0) + -1 * P3)) & ((-1 + -1 * P9) >= 0)) & (P2 = P9))
variables in guard: ListBuffer(-1, P9)
Data flow:
P3 <- (P7 + -1 * (P6 + P0))
P9<-P9
P8<-P8
Guard:
((-1 + -1 * P9) >= 0)
(P2 = P9)
dataflow number:1
guard number:2
-------------
h35(P9, P8, P7, P6, P4, P3) :- h30(P9, P8, P7, P6, P4 - 1, P0), P7 = P6 + P0 - P3 & P9 >= 1 & P2 = P9.
Head arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6), (P4,P4), (P3,P3))
Body arguments: ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6), ((P4 + -1),(P4 + -1)), (P0,P0))
Common Arguments:ListBuffer((P9,P9), (P8,P8), (P7,P7), (P6,P6))
relativeComplimentOfHeadArg:ListBuffer((P4,P4), (P3,P3))
relativeComplimentOfBodyArg:ListBuffer(((P4 + -1),(P4 + -1)), (P0,P0))
Vector(P9, P8, P7, P6, P4, P3)
List(h30(P9, P8, P7, P6, (P4 + -1), P0))
(((P7 = ((P6 + P0) + -1 * P3)) & ((P9 + -1) >= 0)) & (P2 = P9))
variables in guard: ListBuffer(P9, -1)
Data flow:
P3 <- (P7 + -1 * (P6 + P0))
P9<-P9
P8<-P8
Guard:
((P9 + -1) >= 0)
(P2 = P9)
dataflow number:1
guard number:2
-------------
h30(P7, P6, P5, P4, P2, P1) :- h35(P7, P6, P5, P4, P2, P1), P0 = P7.
Head arguments: ListBuffer((P7,P7), (P6,P6), (P5,P5), (P4,P4), (P2,P2), (P1,P1))
Body arguments: ListBuffer((P7,P7), (P6,P6), (P5,P5), (P4,P4), (P2,P2), (P1,P1))
Common Arguments:ListBuffer((P7,P7), (P6,P6), (P5,P5), (P4,P4), (P2,P2), (P1,P1))
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer()
Vector(P7, P6, P5, P4, P2, P1)
List(h35(P7, P6, P5, P4, P2, P1))
(P0 = P7)
variables in guard: ListBuffer()
Data flow:
P7<-P7
P6<-P6
P5<-P5
P4<-P4
P2<-P2
P1<-P1
Guard:
(P0 = P7)
dataflow number:0
guard number:1
-------------
h42(P2, P1) :- h30(0, P6, P5, P4, P2, P1), -1 >= P6 & P0 = 0 & 0 = P7.
Head arguments: ListBuffer((P2,P2), (P1,P1))
Body arguments: ListBuffer((0,0), (P6,P6), (P5,P5), (P4,P4), (P2,P2), (P1,P1))
Common Arguments:ListBuffer((P2,P2), (P1,P1))
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((0,0), (P6,P6), (P5,P5), (P4,P4))
Vector(P2, P1)
List(h30(0, P6, P5, P4, P2, P1))
((((-1 + -1 * P6) >= 0) & (P0 = 0)) & (0 = P7))
variables in guard: ListBuffer(-1, P6)
Data flow:
P2<-P2
P1<-P1
h30_argument_0<-0
Guard:
((-1 + -1 * P6) >= 0)
(P0 = 0)
(0 = P7)
dataflow number:0
guard number:3
-------------
h42(P2, P1) :- h30(0, P6, P5, P4, P2, P1), P6 >= 1 & P0 = 0 & 0 = P7.
Head arguments: ListBuffer((P2,P2), (P1,P1))
Body arguments: ListBuffer((0,0), (P6,P6), (P5,P5), (P4,P4), (P2,P2), (P1,P1))
Common Arguments:ListBuffer((P2,P2), (P1,P1))
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((0,0), (P6,P6), (P5,P5), (P4,P4))
Vector(P2, P1)
List(h30(0, P6, P5, P4, P2, P1))
((((P6 + -1) >= 0) & (P0 = 0)) & (0 = P7))
variables in guard: ListBuffer(P6, -1)
Data flow:
P2<-P2
P1<-P1
h30_argument_0<-0
Guard:
((P6 + -1) >= 0)
(P0 = 0)
(0 = P7)
dataflow number:0
guard number:3
-------------
CHC_COMP_FALSE :- h42(P2, P1), -1 >= P2 - P1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P2,P2), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P2,P2), (P1,P1))
List()
List(h42(P2, P1))
((-1 + -1 * (P2 + -1 * P1)) >= 0)
variables in guard: ListBuffer(-1, P2, P1)
Data flow:
Guard:
((-1 + -1 * (P2 + -1 * P1)) >= 0)
dataflow number:0
guard number:1
-------------
CHC_COMP_FALSE :- h42(P2, P1), P2 - P1 >= 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P2,P2), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P2,P2), (P1,P1))
List()
List(h42(P2, P1))
(((P2 + -1 * P1) + -1) >= 0)
variables in guard: ListBuffer(P2, -1, P1)
Data flow:
Guard:
(((P2 + -1 * P1) + -1) >= 0)
dataflow number:0
guard number:1
-------------
false :- CHC_COMP_FALSE.
Head arguments: ListBuffer()
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer()
List()
List(CHC_COMP_FALSE)
true
variables in guard: ListBuffer(true)
Data flow:
Guard:
true
dataflow number:0
guard number:1
Hints:
-----------

-------------
inv_main7(P4, P3, P2, P1, P0) :- 0 = P0 & 0 = P1 & 0 = P2 & 1 = P3.
Head arguments: ListBuffer((P4,P4), (P3,P3), (P2,P2), (P1,P1), (P0,P0))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P4,P4), (P3,P3), (P2,P2), (P1,P1), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
List(P4, P3, P2, P1, P0)
List()
((((0 = P0) & (0 = P1)) & (0 = P2)) & (1 = P3))
variables in guard: ListBuffer()
Data flow:
P3 <- 1
P2 <- 0
P1 <- 0
P0 <- 0
Guard:
dataflow number:4
guard number:0
-------------
inv_main7(P1, P5, P2, P0, P3) :- inv_main7(P1, P5 - 1, P2 - 2, P0, P3), P1 >= P5 - 1.
Head arguments: ListBuffer((P1,P1), (P5,P5), (P2,P2), (P0,P0), (P3,P3))
Body arguments: ListBuffer((P1,P1), ((P5 + -1),(P5 + -1)), ((P2 + -2),(P2 + -2)), (P0,P0), (P3,P3))
Common Arguments:ListBuffer((P1,P1), (P0,P0), (P3,P3))
relativeComplimentOfHeadArg:ListBuffer((P5,P5), (P2,P2))
relativeComplimentOfBodyArg:ListBuffer(((P5 + -1),(P5 + -1)), ((P2 + -2),(P2 + -2)))
List(P1, P5, P2, P0, P3)
List(inv_main7(P1, (P5 + -1), (P2 + -2), P0, P3))
((P1 + -1 * (P5 + -1)) >= 0)
variables in guard: ListBuffer(P1, -1, P5)
Data flow:
P5 <- _P5
P5<-(P5 + -1)
P2<-(P2 + -2)
P1<-P1
P0<-P0
P3<-P3
Guard:
((1 + (P1 + -1 * _P5)) >= 0)
dataflow number:2
guard number:1
-------------
inv_main12(P2, P3) :- inv_main7(P1, P4, P2, P0, P3), !(P1 - P0 >= 1 | P1 >= P4).
Head arguments: ListBuffer((P2,P2), (P3,P3))
Body arguments: ListBuffer((P1,P1), (P4,P4), (P2,P2), (P0,P0), (P3,P3))
Common Arguments:ListBuffer((P2,P2), (P3,P3))
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P1,P1), (P4,P4), (P0,P0))
Vector(P2, P3)
List(inv_main7(P1, P4, P2, P0, P3))
!((((P1 + -1 * P0) + -1) >= 0) | ((P1 + -1 * P4) >= 0))
variables in guard: ListBuffer(P1, -1, P0, P4)
Data flow:
P2<-P2
P3<-P3
Guard:
!((((P1 + -1 * P0) + -1) >= 0) | ((P1 + -1 * P4) >= 0))
dataflow number:0
guard number:1
-------------
inv_main15(P1, P2, P5, P6) :- inv_main7(P1, P4, P2, P5 - 1, P6 - 2), P1 < P4 & P1 - (P5 - 1) >= 1.
Head arguments: ListBuffer((P1,P1), (P2,P2), (P5,P5), (P6,P6))
Body arguments: ListBuffer((P1,P1), (P4,P4), (P2,P2), ((P5 + -1),(P5 + -1)), ((P6 + -2),(P6 + -2)))
Common Arguments:ListBuffer((P1,P1), (P2,P2))
relativeComplimentOfHeadArg:ListBuffer((P5,P5), (P6,P6))
relativeComplimentOfBodyArg:ListBuffer((P4,P4), ((P5 + -1),(P5 + -1)), ((P6 + -2),(P6 + -2)))
Vector(P1, P2, P5, P6)
List(inv_main7(P1, P4, P2, (P5 + -1), (P6 + -2)))
(!((P1 + -1 * P4) >= 0) & (((P1 + -1 * (P5 + -1)) + -1) >= 0))
variables in guard: ListBuffer(P1, -1, P4, P5)
Data flow:
P5 <- _P5
P1<-P1
P2<-P2
Guard:
!((P1 + -1 * P4) >= 0)
((P1 + -1 * _P5) >= 0)
dataflow number:1
guard number:2
-------------
inv_main12(P2, P3) :- inv_main15(P1, P2, P0, P3), P1 - P0 < 1.
Head arguments: ListBuffer((P2,P2), (P3,P3))
Body arguments: ListBuffer((P1,P1), (P2,P2), (P0,P0), (P3,P3))
Common Arguments:ListBuffer((P2,P2), (P3,P3))
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P1,P1), (P0,P0))
Vector(P2, P3)
List(inv_main15(P1, P2, P0, P3))
!(((P1 + -1 * P0) + -1) >= 0)
variables in guard: ListBuffer(P1, -1, P0)
Data flow:
P2<-P2
P3<-P3
Guard:
!(((P1 + -1 * P0) + -1) >= 0)
dataflow number:0
guard number:1
-------------
inv_main15(P1, P2, P5, P6) :- inv_main15(P1, P2, P5 - 1, P6 - 2), P1 - (P5 - 1) >= 1.
Head arguments: ListBuffer((P1,P1), (P2,P2), (P5,P5), (P6,P6))
Body arguments: ListBuffer((P1,P1), (P2,P2), ((P5 + -1),(P5 + -1)), ((P6 + -2),(P6 + -2)))
Common Arguments:ListBuffer((P1,P1), (P2,P2))
relativeComplimentOfHeadArg:ListBuffer((P5,P5), (P6,P6))
relativeComplimentOfBodyArg:ListBuffer(((P5 + -1),(P5 + -1)), ((P6 + -2),(P6 + -2)))
Vector(P1, P2, P5, P6)
List(inv_main15(P1, P2, (P5 + -1), (P6 + -2)))
(((P1 + -1 * (P5 + -1)) + -1) >= 0)
variables in guard: ListBuffer(P1, -1, P5)
Data flow:
P5 <- _P5
P5<-(P5 + -1)
P6<-(P6 + -2)
P1<-P1
P2<-P2
Guard:
((P1 + -1 * _P5) >= 0)
dataflow number:2
guard number:1
-------------
CHC_COMP_FALSE :- inv_main7(P1, P4, P2 - 2, P0, P3), P2 - 2*P4 != 0 & P1 >= P4.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P1,P1), (P4,P4), ((P2 + -2),(P2 + -2)), (P0,P0), (P3,P3))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P1,P1), (P4,P4), ((P2 + -2),(P2 + -2)), (P0,P0), (P3,P3))
List()
List(inv_main7(P1, P4, (P2 + -2), P0, P3))
(!((P2 + -2 * P4) = 0) & ((P1 + -1 * P4) >= 0))
variables in guard: ListBuffer(P1, -1, P4)
Data flow:
Guard:
!((P2 + -2 * P4) = 0)
((P1 + -1 * P4) >= 0)
dataflow number:0
guard number:2
-------------
CHC_COMP_FALSE :- inv_main15(P1, P2, P0, P3), P3 - 2*P0 != 0.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P1,P1), (P2,P2), (P0,P0), (P3,P3))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P1,P1), (P2,P2), (P0,P0), (P3,P3))
List()
List(inv_main15(P1, P2, P0, P3))
!((P3 + -2 * P0) = 0)
variables in guard: ListBuffer()
Data flow:
Guard:
!((P3 + -2 * P0) = 0)
dataflow number:0
guard number:1
-------------
CHC_COMP_FALSE :- inv_main12(P2, P3), P2 != P3.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P2,P2), (P3,P3))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P2,P2), (P3,P3))
List()
List(inv_main12(P2, P3))
!(P2 = P3)
variables in guard: ListBuffer()
Data flow:
Guard:
!(P2 = P3)
dataflow number:0
guard number:1
-------------
false :- CHC_COMP_FALSE.
Head arguments: ListBuffer()
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer()
List()
List(CHC_COMP_FALSE)
true
variables in guard: ListBuffer(true)
Data flow:
Guard:
true
dataflow number:0
guard number:1
Hints:
-----------

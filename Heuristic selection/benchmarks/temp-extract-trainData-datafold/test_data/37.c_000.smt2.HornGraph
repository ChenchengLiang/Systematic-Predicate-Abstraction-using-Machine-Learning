-------------
h5(P7, P2, P1, P0) :- P2 = 0 & P1 = 0 & P0 = P4 & P3 = P7.
Head arguments: ListBuffer((P7,P7), (P2,P2), (P1,P1), (P0,P0))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P7,P7), (P2,P2), (P1,P1), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P7, P2, P1, P0)
List()
((((P2 = 0) & (P1 = 0)) & (P0 = P4)) & (P3 = P7))
variables in guard: ListBuffer()
Data flow:
P7 <- P3
P2 <- 0
P1 <- 0
P0 <- P4
Guard:
dataflow number:4
guard number:0
-------------
h15(P8, P3, P1) :- h5(P8, P2, P0, P1), -1 >= P1 & P8 - P2 >= 1 & P3 = P2 & P4 = P8.
Head arguments: ListBuffer((P8,P8), (P3,P3), (P1,P1))
Body arguments: ListBuffer((P8,P8), (P2,P2), (P0,P0), (P1,P1))
Common Arguments:ListBuffer((P8,P8), (P1,P1))
relativeComplimentOfHeadArg:ListBuffer((P3,P3))
relativeComplimentOfBodyArg:ListBuffer((P2,P2), (P0,P0))
Vector(P8, P3, P1)
List(h5(P8, P2, P0, P1))
(((((-1 + -1 * P1) >= 0) & (((P8 + -1 * P2) + -1) >= 0)) & (P3 = P2)) & (P4 = P8))
variables in guard: ListBuffer(-1, P1, P8, P2)
Data flow:
P3 <- P2
P8<-P8
P1<-P1
Guard:
((-1 + -1 * P1) >= 0)
(((P8 + -1 * P2) + -1) >= 0)
(P4 = P8)
dataflow number:1
guard number:3
-------------
h15(P8, P3, P1) :- h5(P8, P2, P0, P1), P1 >= 1 & P8 - P2 >= 1 & P3 = P2 & P4 = P8.
Head arguments: ListBuffer((P8,P8), (P3,P3), (P1,P1))
Body arguments: ListBuffer((P8,P8), (P2,P2), (P0,P0), (P1,P1))
Common Arguments:ListBuffer((P8,P8), (P1,P1))
relativeComplimentOfHeadArg:ListBuffer((P3,P3))
relativeComplimentOfBodyArg:ListBuffer((P2,P2), (P0,P0))
Vector(P8, P3, P1)
List(h5(P8, P2, P0, P1))
(((((P1 + -1) >= 0) & (((P8 + -1 * P2) + -1) >= 0)) & (P3 = P2)) & (P4 = P8))
variables in guard: ListBuffer(P1, -1, P8, P2)
Data flow:
P3 <- P2
P8<-P8
P1<-P1
Guard:
((P1 + -1) >= 0)
(((P8 + -1 * P2) + -1) >= 0)
(P4 = P8)
dataflow number:1
guard number:3
-------------
h18(P8, P3, P2, P1) :- h5(P8, P3 - 1, P2, 0), P8 - (P3 - 1) >= 1 & P1 = 0 & P4 = P8.
Head arguments: ListBuffer((P8,P8), (P3,P3), (P2,P2), (P1,P1))
Body arguments: ListBuffer((P8,P8), ((P3 + -1),(P3 + -1)), (P2,P2), (0,0))
Common Arguments:ListBuffer((P8,P8), (P2,P2))
relativeComplimentOfHeadArg:ListBuffer((P3,P3), (P1,P1))
relativeComplimentOfBodyArg:ListBuffer(((P3 + -1),(P3 + -1)), (0,0))
Vector(P8, P3, P2, P1)
List(h5(P8, (P3 + -1), P2, 0))
(((((P8 + -1 * (P3 + -1)) + -1) >= 0) & (P1 = 0)) & (P4 = P8))
variables in guard: ListBuffer(P8, -1, P3)
Data flow:
P3 <- _P3
P1 <- 0
P8<-P8
P2<-P2
h5_argument_3<-0
Guard:
((P8 + -1 * _P3) >= 0)
(P4 = P8)
dataflow number:2
guard number:2
-------------
h18(P8, P3, P2, P1) :- h15(P8, P3 - 1, P1), P4 = P8 & P2 = P3 - 1.
Head arguments: ListBuffer((P8,P8), (P3,P3), (P2,P2), (P1,P1))
Body arguments: ListBuffer((P8,P8), ((P3 + -1),(P3 + -1)), (P1,P1))
Common Arguments:ListBuffer((P8,P8), (P1,P1))
relativeComplimentOfHeadArg:ListBuffer((P3,P3), (P2,P2))
relativeComplimentOfBodyArg:ListBuffer(((P3 + -1),(P3 + -1)))
Vector(P8, P3, P2, P1)
List(h15(P8, (P3 + -1), P1))
((P4 = P8) & (P2 = (P3 + -1)))
variables in guard: ListBuffer()
Data flow:
P3 <- _P3
P2 <- _P2
P8<-P8
P1<-P1
Guard:
(P4 = P8)
(_P2 = (-1 + _P3))
dataflow number:2
guard number:2
-------------
h5(P7, P2, P1, P0) :- h18(P7, P2, P1, P0), P3 = P7.
Head arguments: ListBuffer((P7,P7), (P2,P2), (P1,P1), (P0,P0))
Body arguments: ListBuffer((P7,P7), (P2,P2), (P1,P1), (P0,P0))
Common Arguments:ListBuffer((P7,P7), (P2,P2), (P1,P1), (P0,P0))
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer()
Vector(P7, P2, P1, P0)
List(h18(P7, P2, P1, P0))
(P3 = P7)
variables in guard: ListBuffer()
Data flow:
P7<-P7
P2<-P2
P1<-P1
P0<-P0
Guard:
(P3 = P7)
dataflow number:0
guard number:1
-------------
CHC_COMP_FALSE :- h5(P7, P2, P1, P0), -1 >= P1 & P7 >= 1 & 0 >= P7 - P2.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P7,P7), (P2,P2), (P1,P1), (P0,P0))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P7,P7), (P2,P2), (P1,P1), (P0,P0))
List()
List(h5(P7, P2, P1, P0))
((((-1 + -1 * P1) >= 0) & ((P7 + -1) >= 0)) & (-1 * (P7 + -1 * P2) >= 0))
variables in guard: ListBuffer(-1, P1, P7, P2)
Data flow:
Guard:
((-1 + -1 * P1) >= 0)
((P7 + -1) >= 0)
(-1 * (P7 + -1 * P2) >= 0)
dataflow number:0
guard number:3
-------------
CHC_COMP_FALSE :- h5(P7, P2, P1, P0), 0 >= P7 - P1 & P1 >= 0 & P7 >= 1 & 0 >= P7 - P2.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P7,P7), (P2,P2), (P1,P1), (P0,P0))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P7,P7), (P2,P2), (P1,P1), (P0,P0))
List()
List(h5(P7, P2, P1, P0))
((((-1 * (P7 + -1 * P1) >= 0) & (P1 >= 0)) & ((P7 + -1) >= 0)) & (-1 * (P7 + -1 * P2) >= 0))
variables in guard: ListBuffer(-1, P7, P1, P2)
Data flow:
Guard:
(-1 * (P7 + -1 * P1) >= 0)
(P1 >= 0)
((P7 + -1) >= 0)
(-1 * (P7 + -1 * P2) >= 0)
dataflow number:0
guard number:4
-------------
false :- CHC_COMP_FALSE.
Head arguments: ListBuffer()
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer()
List()
List(CHC_COMP_FALSE)
true
variables in guard: ListBuffer(true)
Data flow:
Guard:
true
dataflow number:0
guard number:1
Hints:
-----------

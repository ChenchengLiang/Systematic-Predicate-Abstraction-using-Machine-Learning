-------------
inv_main6(P0, P5, P2, P3, P1) :- inv_main7(P0, P5, P4, P3, P1), P4 < 1 & P2 = P5.
Head arguments: ListBuffer((P0,P0), (P5,P5), (P2,P2), (P3,P3), (P1,P1))
Body arguments: ListBuffer((P0,P0), (P5,P5), (P4,P4), (P3,P3), (P1,P1))
Common Arguments:ListBuffer((P0,P0), (P5,P5), (P3,P3), (P1,P1))
relativeComplimentOfHeadArg:ListBuffer((P2,P2))
relativeComplimentOfBodyArg:ListBuffer((P4,P4))
Vector(P0, P5, P2, P3, P1)
List(inv_main7(P0, P5, P4, P3, P1))
(!((P4 + -1) >= 0) & (P2 = P5))
variables in guard: ListBuffer(P4, -1)
Data flow:
P2 <- P5
P0<-P0
P3<-P3
P1<-P1
Guard:
!((P4 + -1) >= 0)
dataflow number:1
guard number:1
-------------
inv_main6(P0, P5, P2, P3, P1) :- inv_main8(P0, P5, P4, P3, P1), P4 < 1 & P2 = P5.
Head arguments: ListBuffer((P0,P0), (P5,P5), (P2,P2), (P3,P3), (P1,P1))
Body arguments: ListBuffer((P0,P0), (P5,P5), (P4,P4), (P3,P3), (P1,P1))
Common Arguments:ListBuffer((P0,P0), (P5,P5), (P3,P3), (P1,P1))
relativeComplimentOfHeadArg:ListBuffer((P2,P2))
relativeComplimentOfBodyArg:ListBuffer((P4,P4))
Vector(P0, P5, P2, P3, P1)
List(inv_main8(P0, P5, P4, P3, P1))
(!((P4 + -1) >= 0) & (P2 = P5))
variables in guard: ListBuffer(P4, -1)
Data flow:
P2 <- P5
P0<-P0
P3<-P3
P1<-P1
Guard:
!((P4 + -1) >= 0)
dataflow number:1
guard number:1
-------------
inv_main7(P0, P5, P6, P7, P1) :- inv_main7(P0, P5, P6 + 1, P7 - 1, P1), P6 + 1 >= 1.
Head arguments: ListBuffer((P0,P0), (P5,P5), (P6,P6), (P7,P7), (P1,P1))
Body arguments: ListBuffer((P0,P0), (P5,P5), ((P6 + 1),(P6 + 1)), ((P7 + -1),(P7 + -1)), (P1,P1))
Common Arguments:ListBuffer((P0,P0), (P5,P5), (P1,P1))
relativeComplimentOfHeadArg:ListBuffer((P6,P6), (P7,P7))
relativeComplimentOfBodyArg:ListBuffer(((P6 + 1),(P6 + 1)), ((P7 + -1),(P7 + -1)))
Vector(P0, P5, P6, P7, P1)
List(inv_main7(P0, P5, (P6 + 1), (P7 + -1), P1))
(((P6 + 1) + -1) >= 0)
variables in guard: ListBuffer(P6, -1)
Data flow:
P6 <- _P6
P6<-(P6 + 1)
P7<-(P7 + -1)
P0<-P0
P5<-P5
P1<-P1
Guard:
(_P6 >= 0)
dataflow number:2
guard number:1
-------------
inv_main8(P0, P5, P6, P7, P1) :- inv_main8(P0, P5, P6 + 1, P7 + 1, P1), P6 + 1 >= 1.
Head arguments: ListBuffer((P0,P0), (P5,P5), (P6,P6), (P7,P7), (P1,P1))
Body arguments: ListBuffer((P0,P0), (P5,P5), ((P6 + 1),(P6 + 1)), ((P7 + 1),(P7 + 1)), (P1,P1))
Common Arguments:ListBuffer((P0,P0), (P5,P5), (P1,P1))
relativeComplimentOfHeadArg:ListBuffer((P6,P6), (P7,P7))
relativeComplimentOfBodyArg:ListBuffer(((P6 + 1),(P6 + 1)), ((P7 + 1),(P7 + 1)))
Vector(P0, P5, P6, P7, P1)
List(inv_main8(P0, P5, (P6 + 1), (P7 + 1), P1))
(((P6 + 1) + -1) >= 0)
variables in guard: ListBuffer(P6, -1)
Data flow:
P6 <- _P6
P6<-(P6 + 1)
P7<-(P7 + 1)
P0<-P0
P5<-P5
P1<-P1
Guard:
(_P6 >= 0)
dataflow number:2
guard number:1
-------------
inv_main6(P0, P5, P6, P3, P7) :- inv_main6(P0, P5, P6 + 1, P3, P7 - 1), P0 >= 1 & P6 + 1 >= 1.
Head arguments: ListBuffer((P0,P0), (P5,P5), (P6,P6), (P3,P3), (P7,P7))
Body arguments: ListBuffer((P0,P0), (P5,P5), ((P6 + 1),(P6 + 1)), (P3,P3), ((P7 + -1),(P7 + -1)))
Common Arguments:ListBuffer((P0,P0), (P5,P5), (P3,P3))
relativeComplimentOfHeadArg:ListBuffer((P6,P6), (P7,P7))
relativeComplimentOfBodyArg:ListBuffer(((P6 + 1),(P6 + 1)), ((P7 + -1),(P7 + -1)))
Vector(P0, P5, P6, P3, P7)
List(inv_main6(P0, P5, (P6 + 1), P3, (P7 + -1)))
(((P0 + -1) >= 0) & (((P6 + 1) + -1) >= 0))
variables in guard: ListBuffer(P0, -1, P6)
Data flow:
P6 <- _P6
P6<-(P6 + 1)
P7<-(P7 + -1)
P0<-P0
P5<-P5
P3<-P3
Guard:
((P0 + -1) >= 0)
(_P6 >= 0)
dataflow number:2
guard number:2
-------------
inv_main6(P0, P5, P6, P3, P7) :- inv_main6(P0, P5, P6 + 1, P3, P7 + 1), P0 < 1 & P6 + 1 >= 1.
Head arguments: ListBuffer((P0,P0), (P5,P5), (P6,P6), (P3,P3), (P7,P7))
Body arguments: ListBuffer((P0,P0), (P5,P5), ((P6 + 1),(P6 + 1)), (P3,P3), ((P7 + 1),(P7 + 1)))
Common Arguments:ListBuffer((P0,P0), (P5,P5), (P3,P3))
relativeComplimentOfHeadArg:ListBuffer((P6,P6), (P7,P7))
relativeComplimentOfBodyArg:ListBuffer(((P6 + 1),(P6 + 1)), ((P7 + 1),(P7 + 1)))
Vector(P0, P5, P6, P3, P7)
List(inv_main6(P0, P5, (P6 + 1), P3, (P7 + 1)))
(!((P0 + -1) >= 0) & (((P6 + 1) + -1) >= 0))
variables in guard: ListBuffer(P0, -1, P6)
Data flow:
P6 <- _P6
P6<-(P6 + 1)
P7<-(P7 + 1)
P0<-P0
P5<-P5
P3<-P3
Guard:
!((P0 + -1) >= 0)
(_P6 >= 0)
dataflow number:2
guard number:2
-------------
inv_main7(P4, P5, P3, P1, P0) :- P4 >= 1 & 0 = P0 & 0 = P1 & P3 = P5.
Head arguments: ListBuffer((P4,P4), (P5,P5), (P3,P3), (P1,P1), (P0,P0))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P4,P4), (P5,P5), (P3,P3), (P1,P1), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P4, P5, P3, P1, P0)
List()
(((((P4 + -1) >= 0) & (0 = P0)) & (0 = P1)) & (P3 = P5))
variables in guard: ListBuffer(P4, -1)
Data flow:
P4 <- _P4
P5 <- _P5
P3 <- _P3
P1 <- 0
P0 <- 0
Guard:
((-1 + _P4) >= 0)
(_P3 = _P5)
dataflow number:5
guard number:2
-------------
inv_main8(P4, P5, P3, P1, P0) :- P4 < 1 & 0 = P0 & 0 = P1 & P3 = P5.
Head arguments: ListBuffer((P4,P4), (P5,P5), (P3,P3), (P1,P1), (P0,P0))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P4,P4), (P5,P5), (P3,P3), (P1,P1), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P4, P5, P3, P1, P0)
List()
(((!((P4 + -1) >= 0) & (0 = P0)) & (0 = P1)) & (P3 = P5))
variables in guard: ListBuffer(P4, -1)
Data flow:
P4 <- _P4
P5 <- _P5
P3 <- _P3
P1 <- 0
P0 <- 0
Guard:
(-1 * _P4 >= 0)
(_P3 = _P5)
dataflow number:5
guard number:2
-------------
CHC_COMP_FALSE :- inv_main7(P0, P5, P4, P3, P1), P3 != P5 & 0 < P5 & P4 < 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P0,P0), (P5,P5), (P4,P4), (P3,P3), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P0,P0), (P5,P5), (P4,P4), (P3,P3), (P1,P1))
List()
List(inv_main7(P0, P5, P4, P3, P1))
((!(P3 = P5) & !(-1 * P5 >= 0)) & !((P4 + -1) >= 0))
variables in guard: ListBuffer(-1, P5, P4)
Data flow:
Guard:
!(P3 = P5)
!(-1 * P5 >= 0)
!((P4 + -1) >= 0)
dataflow number:0
guard number:3
-------------
CHC_COMP_FALSE :- inv_main8(P0, P5, P4, P3, P1), P3 + P5 != 0 & 0 < P5 & P4 < 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P0,P0), (P5,P5), (P4,P4), (P3,P3), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P0,P0), (P5,P5), (P4,P4), (P3,P3), (P1,P1))
List()
List(inv_main8(P0, P5, P4, P3, P1))
((!((P3 + P5) = 0) & !(-1 * P5 >= 0)) & !((P4 + -1) >= 0))
variables in guard: ListBuffer(-1, P5, P4)
Data flow:
Guard:
!((P3 + P5) = 0)
!(-1 * P5 >= 0)
!((P4 + -1) >= 0)
dataflow number:0
guard number:3
-------------
CHC_COMP_FALSE :- inv_main6(P0, P5, P2, P3, P5), 0 >= P2 & P5 >= 1 & 0 >= P0.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P0,P0), (P5,P5), (P2,P2), (P3,P3), (P5,P5))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P0,P0), (P5,P5), (P2,P2), (P3,P3), (P5,P5))
List()
List(inv_main6(P0, P5, P2, P3, P5))
(((-1 * P2 >= 0) & ((P5 + -1) >= 0)) & (-1 * P0 >= 0))
variables in guard: ListBuffer(-1, P2, P5, P0)
Data flow:
Guard:
(-1 * P2 >= 0)
((P5 + -1) >= 0)
(-1 * P0 >= 0)
dataflow number:0
guard number:3
-------------
CHC_COMP_FALSE :- inv_main6(P0, P5, P2, P3, P1), P1 + P5 = 0 & 0 >= P2 & P5 >= 1 & P0 >= 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P0,P0), (P5,P5), (P2,P2), (P3,P3), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P0,P0), (P5,P5), (P2,P2), (P3,P3), (P1,P1))
List()
List(inv_main6(P0, P5, P2, P3, P1))
(((P1 + P5) = 0) & (((-1 * P2 >= 0) & ((P5 + -1) >= 0)) & ((P0 + -1) >= 0)))
variables in guard: ListBuffer(P1, P5, -1, P2, P0)
Data flow:
Guard:
((P1 + P5) = 0)
(-1 * P2 >= 0)
((P5 + -1) >= 0)
((P0 + -1) >= 0)
dataflow number:0
guard number:4
-------------
CHC_COMP_FALSE :- inv_main6(P0, P5, P2, P3, P1), P1 != P5 & P1 + P5 != 0 & 0 >= P2 & P5 >= 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P0,P0), (P5,P5), (P2,P2), (P3,P3), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P0,P0), (P5,P5), (P2,P2), (P3,P3), (P1,P1))
List()
List(inv_main6(P0, P5, P2, P3, P1))
((!(P1 = P5) & !((P1 + P5) = 0)) & ((-1 * P2 >= 0) & ((P5 + -1) >= 0)))
variables in guard: ListBuffer(P1, P5, -1, P2)
Data flow:
Guard:
!(P1 = P5)
!((P1 + P5) = 0)
(-1 * P2 >= 0)
((P5 + -1) >= 0)
dataflow number:0
guard number:4
-------------
CHC_COMP_FALSE :- inv_main6(P0, P5, P2, P3, P1), P3 != P1 & P2 < 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P0,P0), (P5,P5), (P2,P2), (P3,P3), (P1,P1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P0,P0), (P5,P5), (P2,P2), (P3,P3), (P1,P1))
List()
List(inv_main6(P0, P5, P2, P3, P1))
(!(P3 = P1) & !((P2 + -1) >= 0))
variables in guard: ListBuffer(P2, -1)
Data flow:
Guard:
!(P3 = P1)
!((P2 + -1) >= 0)
dataflow number:0
guard number:2
-------------
false :- CHC_COMP_FALSE.
Head arguments: ListBuffer()
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer()
List()
List(CHC_COMP_FALSE)
true
variables in guard: ListBuffer(true)
Data flow:
Guard:
true
dataflow number:0
guard number:1
Hints:
-----------

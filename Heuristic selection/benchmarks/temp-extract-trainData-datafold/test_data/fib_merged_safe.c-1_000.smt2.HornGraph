-------------
inv_main7(P6, P5, P4, P3, P2) :- 0 = P0 & 0 = P1 & 1 = P2 & 1 = P3 & 1 = P4 & 0 = P5.
Head arguments: ListBuffer((P6,P6), (P5,P5), (P4,P4), (P3,P3), (P2,P2))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P6,P6), (P5,P5), (P4,P4), (P3,P3), (P2,P2))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P6, P5, P4, P3, P2)
List()
((((((0 = P0) & (0 = P1)) & (1 = P2)) & (1 = P3)) & (1 = P4)) & (0 = P5))
variables in guard: ListBuffer()
Data flow:
P5 <- 0
P4 <- 1
P3 <- 1
P2 <- 1
Guard:
(0 = P0)
(0 = P1)
dataflow number:4
guard number:2
-------------
inv_main7(P1, P6, P0, P5, P2) :- inv_main7(P1 + 1, P6, P0, P6, P0), P3 = P0 + P0 & P1 + 1 >= 1 & P5 = P6 + P6 & P2 = P0 + P0 & P4 = P6 + P6.
Head arguments: ListBuffer((P1,P1), (P6,P6), (P0,P0), (P5,P5), (P2,P2))
Body arguments: ListBuffer(((P1 + 1),(P1 + 1)), (P6,P6), (P0,P0), (P6,P6), (P0,P0))
Common Arguments:ListBuffer((P6,P6), (P0,P0))
relativeComplimentOfHeadArg:ListBuffer((P1,P1), (P5,P5), (P2,P2))
relativeComplimentOfBodyArg:ListBuffer(((P1 + 1),(P1 + 1)), (P6,P6), (P0,P0))
Vector(P1, P6, P0, P5, P2)
List(inv_main7((P1 + 1), P6, P0, P6, P0))
(((((P3 = (P0 + P0)) & (((P1 + 1) + -1) >= 0)) & (P5 = (P6 + P6))) & (P2 = (P0 + P0))) & (P4 = (P6 + P6)))
variables in guard: ListBuffer(P1, -1)
Data flow:
P1 <- _P1
P5 <- (P6 + P6)
P2 <- (P0 + P0)
P1<-(P1 + 1)
P5<-P6
P2<-P0
Guard:
(P3 = (P0 + P0))
(_P1 >= 0)
(P4 = (P6 + P6))
dataflow number:3
guard number:3
-------------
false :- inv_main7(P1 + 1, P6, P0, P6, P0), P3 != P4 + P6 & P3 = P0 + P0 & P1 + 1 >= 1 & P5 = P6 + P6 & P2 = P0 + P0 & P4 = P6 + P6.
Head arguments: ListBuffer()
Body arguments: ListBuffer(((P1 + 1),(P1 + 1)), (P6,P6), (P0,P0), (P6,P6), (P0,P0))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer(((P1 + 1),(P1 + 1)), (P6,P6), (P0,P0), (P6,P6), (P0,P0))
List()
List(inv_main7((P1 + 1), P6, P0, P6, P0))
(!(P3 = (P4 + P6)) & (((((P3 = (P0 + P0)) & (((P1 + 1) + -1) >= 0)) & (P5 = (P6 + P6))) & (P2 = (P0 + P0))) & (P4 = (P6 + P6))))
variables in guard: ListBuffer(P1, -1)
Data flow:
Guard:
!(P3 = (P4 + P6))
(P3 = (P0 + P0))
(((P1 + 1) + -1) >= 0)
(P5 = (P6 + P6))
(P2 = (P0 + P0))
(P4 = (P6 + P6))
dataflow number:0
guard number:6
Hints:
-----------

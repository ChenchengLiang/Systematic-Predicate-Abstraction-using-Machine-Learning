-------------
h5(P9, P3, P2, P1, P0) :- P1 = 0 & P0 = 10 & P3 = 0 & P2 = 0 & P4 = P9.
Head arguments: ListBuffer((P9,P9), (P3,P3), (P2,P2), (P1,P1), (P0,P0))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((P9,P9), (P3,P3), (P2,P2), (P1,P1), (P0,P0))
relativeComplimentOfBodyArg:ListBuffer()
Vector(P9, P3, P2, P1, P0)
List()
(((((P1 = 0) & (P0 = 10)) & (P3 = 0)) & (P2 = 0)) & (P4 = P9))
variables in guard: ListBuffer()
Data flow:
P9 <- P4
P3 <- 0
P2 <- 0
P1 <- 0
P0 <- 10
Guard:
dataflow number:5
guard number:0
-------------
h5(P9, P3, P2, P1, P0) :- h5(P9, P3 - 1, P2, P1 - 1, P0), P1 >= 0 & 2 - P1 >= 1 & P1 = 2*P0 + P1 & P1 != 0 & P9 - (P1 - 1) >= 1 & P4 = P9.
Head arguments: ListBuffer((P9,P9), (P3,P3), (P2,P2), (P1,P1), (P0,P0))
Body arguments: ListBuffer((P9,P9), ((P3 + -1),(P3 + -1)), (P2,P2), ((P1 + -1),(P1 + -1)), (P0,P0))
Common Arguments:ListBuffer((P9,P9), (P2,P2), (P0,P0))
relativeComplimentOfHeadArg:ListBuffer((P3,P3), (P1,P1))
relativeComplimentOfBodyArg:ListBuffer(((P3 + -1),(P3 + -1)), ((P1 + -1),(P1 + -1)))
Vector(P9, P3, P2, P1, P0)
List(h5(P9, (P3 + -1), P2, (P1 + -1), P0))
((((((P1 >= 0) & (((2 + -1 * P1) + -1) >= 0)) & (P1 = (2 * P0 + P1))) & !(P1 = 0)) & (((P9 + -1 * (P1 + -1)) + -1) >= 0)) & (P4 = P9))
variables in guard: ListBuffer(P1, -1, P9)
Data flow:
P1 <- (2 * P0 + P1)
P1 <- _P1
P3<-(P3 + -1)
P1<-(P1 + -1)
P9<-P9
P2<-P2
P0<-P0
Guard:
(P1 >= 0)
(((2 + -1 * P1) + -1) >= 0)
!(P1 = 0)
((P9 + -1 * _P1) >= 0)
(P4 = P9)
dataflow number:2
guard number:5
-------------
h5(P9, P3, P2, P1, P0) :- h5(P9, P3 - 1, P2, P1 - 1, P0), P1 >= 0 & 2 - P1 >= 1 & P1 = 2*P0 + P1 & P1 != 0 & P9 - (P1 - 1) >= 1 & P4 = P9.
Head arguments: ListBuffer((P9,P9), (P3,P3), (P2,P2), (P1,P1), (P0,P0))
Body arguments: ListBuffer((P9,P9), ((P3 + -1),(P3 + -1)), (P2,P2), ((P1 + -1),(P1 + -1)), (P0,P0))
Common Arguments:ListBuffer((P9,P9), (P2,P2), (P0,P0))
relativeComplimentOfHeadArg:ListBuffer((P3,P3), (P1,P1))
relativeComplimentOfBodyArg:ListBuffer(((P3 + -1),(P3 + -1)), ((P1 + -1),(P1 + -1)))
Vector(P9, P3, P2, P1, P0)
List(h5(P9, (P3 + -1), P2, (P1 + -1), P0))
((((((P1 >= 0) & (((2 + -1 * P1) + -1) >= 0)) & (P1 = (2 * P0 + P1))) & !(P1 = 0)) & (((P9 + -1 * (P1 + -1)) + -1) >= 0)) & (P4 = P9))
variables in guard: ListBuffer(P1, -1, P9)
Data flow:
P1 <- (2 * P0 + P1)
P1 <- _P1
P3<-(P3 + -1)
P1<-(P1 + -1)
P9<-P9
P2<-P2
P0<-P0
Guard:
(P1 >= 0)
(((2 + -1 * P1) + -1) >= 0)
!(P1 = 0)
((P9 + -1 * _P1) >= 0)
(P4 = P9)
dataflow number:2
guard number:5
-------------
h5(P9, P3, P2, P1, P0) :- h5(P9, P3 - 1, P2 - 1, P1 - 1, P0), P1 = 2*P0 & P9 - (P1 - 1) >= 1 & P4 = P9.
Head arguments: ListBuffer((P9,P9), (P3,P3), (P2,P2), (P1,P1), (P0,P0))
Body arguments: ListBuffer((P9,P9), ((P3 + -1),(P3 + -1)), ((P2 + -1),(P2 + -1)), ((P1 + -1),(P1 + -1)), (P0,P0))
Common Arguments:ListBuffer((P9,P9), (P0,P0))
relativeComplimentOfHeadArg:ListBuffer((P3,P3), (P2,P2), (P1,P1))
relativeComplimentOfBodyArg:ListBuffer(((P3 + -1),(P3 + -1)), ((P2 + -1),(P2 + -1)), ((P1 + -1),(P1 + -1)))
Vector(P9, P3, P2, P1, P0)
List(h5(P9, (P3 + -1), (P2 + -1), (P1 + -1), P0))
(((P1 = 2 * P0) & (((P9 + -1 * (P1 + -1)) + -1) >= 0)) & (P4 = P9))
variables in guard: ListBuffer(P9, -1, P1)
Data flow:
P1 <- 2 * P0
P1 <- _P1
P3<-(P3 + -1)
P2<-(P2 + -1)
P1<-(P1 + -1)
P9<-P9
P0<-P0
Guard:
((P9 + -1 * _P1) >= 0)
(P4 = P9)
dataflow number:3
guard number:2
-------------
CHC_COMP_FALSE :- h5(P9, P3, P2, P0, P0), -1 >= P3 - 2*P2 & 0 >= P9 - P0.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P9,P9), (P3,P3), (P2,P2), (P0,P0), (P0,P0))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P9,P9), (P3,P3), (P2,P2), (P0,P0), (P0,P0))
List()
List(h5(P9, P3, P2, P0, P0))
(((-1 + -1 * (P3 + -2 * P2)) >= 0) & (-1 * (P9 + -1 * P0) >= 0))
variables in guard: ListBuffer(-1, P3, -2, P2, P9, P0)
Data flow:
Guard:
((-1 + -1 * (P3 + -2 * P2)) >= 0)
(-1 * (P9 + -1 * P0) >= 0)
dataflow number:0
guard number:2
-------------
CHC_COMP_FALSE :- h5(P9, P3, P2, P0, P0), P3 - 2*P2 >= 1 & 0 >= P9 - P0.
Head arguments: ListBuffer()
Body arguments: ListBuffer((P9,P9), (P3,P3), (P2,P2), (P0,P0), (P0,P0))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer((P9,P9), (P3,P3), (P2,P2), (P0,P0), (P0,P0))
List()
List(h5(P9, P3, P2, P0, P0))
((((P3 + -2 * P2) + -1) >= 0) & (-1 * (P9 + -1 * P0) >= 0))
variables in guard: ListBuffer(P3, -2, P2, -1, P9, P0)
Data flow:
Guard:
(((P3 + -2 * P2) + -1) >= 0)
(-1 * (P9 + -1 * P0) >= 0)
dataflow number:0
guard number:2
-------------
false :- CHC_COMP_FALSE.
Head arguments: ListBuffer()
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
relativeComplimentOfBodyArg:ListBuffer()
List()
List(CHC_COMP_FALSE)
true
variables in guard: ListBuffer(true)
Data flow:
Guard:
true
dataflow number:0
guard number:1
Hints:
-----------

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main10 (Int Int Int Int) Bool)
(declare-fun inv_main14 (Int Int Int Int) Bool)
(declare-fun inv_main18 (Int Int Int Int) Bool)
(declare-fun inv_main22 (Int Int Int Int) Bool)
(declare-fun inv_main26 (Int Int Int Int) Bool)
(declare-fun inv_main3 (Int Int Int Int) Bool)
(declare-fun inv_main30 (Int Int Int Int) Bool)
(declare-fun inv_main33 (Int Int Int Int) Bool)
(declare-fun inv_main6 (Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (inv_main3 var3 var0 var2 var1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (inv_main6 var2 var1 var0 var3 ) ) (inv_main10 1 var1 var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main10 var2 var1 var0 var3 ) (not (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) (inv_main14 1 var1 var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main10 var2 var1 var0 var3 ) (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) (inv_main10 (+ var2 1 ) var1 var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main14 var2 var1 var0 var3 ) (not (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) (inv_main18 1 var1 var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main14 var2 var1 var0 var3 ) (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) (inv_main14 (+ var2 1 ) var1 var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main18 var2 var1 var0 var3 ) (not (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) (inv_main22 1 var1 var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main18 var2 var1 var0 var3 ) (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) (inv_main18 (+ var2 1 ) var1 var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main22 var2 var1 var0 var3 ) (not (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) (inv_main26 1 var1 var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main22 var2 var1 var0 var3 ) (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) (inv_main22 (+ var2 1 ) var1 var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main26 var2 var1 var0 var3 ) (not (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) (inv_main30 1 var1 var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main26 var2 var1 var0 var3 ) (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) (inv_main26 (+ var2 1 ) var1 var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main30 var2 var1 var0 var3 ) (not (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) (inv_main33 1 var1 var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main30 var2 var1 var0 var3 ) (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) (inv_main30 (+ var2 1 ) var1 var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main33 var2 var1 var0 var3 ) (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) (inv_main33 (+ var2 1 ) var1 var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main3 var2 var1 var0 var3 ) (<= 0 (+ (+ var0 (- 1) ) (- 1) ) ) ) ) (inv_main6 var2 1 var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main33 var2 var1 var0 var3 ) (and (<= 0 (+ (+ var0 (* (- 1) (+ var1 1 ) ) ) (- 1) ) ) (not (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) ) (inv_main6 var2 (+ var1 1 ) var0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main6 var2 var1 var0 var3 ) (not (<= 0 (+ var1 (- 1) ) ) ) ) ) ) ) ) ) )
(check-sat)

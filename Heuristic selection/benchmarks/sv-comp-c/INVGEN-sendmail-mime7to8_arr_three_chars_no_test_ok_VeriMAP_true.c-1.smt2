(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main10 (Int Int Int) Bool)
(declare-fun inv_main16 (Int Int Int) Bool)
(declare-fun inv_main19 (Int Int Int) Bool)
(declare-fun inv_main22 (Int Int Int) Bool)
(declare-fun inv_main25 (Int Int Int) Bool)
(declare-fun inv_main28 (Int Int Int) Bool)
(declare-fun inv_main31 (Int Int Int) Bool)
(declare-fun inv_main37 (Int Int Int) Bool)
(declare-fun inv_main39 (Int Int Int) Bool)
(declare-fun inv_main5 (Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (inv_main5 var0 var2 var1 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (inv_main16 var0 var2 var1 ) ) (inv_main19 var0 var2 var1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (inv_main22 var0 var2 var1 ) ) (inv_main25 var0 var2 var1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (inv_main28 var0 var2 var1 ) ) (inv_main31 var0 var2 var1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (inv_main37 var0 var2 var1 ) ) (inv_main39 var0 var2 var1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main5 var0 var2 var1 ) (<= 0 (+ var2 (- 1) ) ) ) ) (inv_main10 var0 var2 0 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main10 var0 var2 var1 ) (and (= var0 0 ) (and (= var0 0 ) (not (= var0 0 ) ) ) ) ) ) (inv_main16 var0 var2 var1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main19 var0 var2 var1 ) (<= 0 (+ (+ var1 1 ) (* (- 1) (+ var2 (- 1) ) ) ) ) ) ) (inv_main22 var0 var2 0 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main19 var0 var2 var1 ) (not (<= 0 (+ (+ var1 1 ) (* (- 1) (+ var2 (- 1) ) ) ) ) ) ) ) (inv_main22 var0 var2 (+ var1 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main25 var0 var2 var1 ) (<= 0 (+ (+ var1 1 ) (* (- 1) (+ var2 (- 1) ) ) ) ) ) ) (inv_main28 var0 var2 0 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main25 var0 var2 var1 ) (not (<= 0 (+ (+ var1 1 ) (* (- 1) (+ var2 (- 1) ) ) ) ) ) ) ) (inv_main28 var0 var2 (+ var1 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main31 var0 var2 var1 ) (<= 0 (+ (+ var1 1 ) (* (- 1) (+ var2 (- 1) ) ) ) ) ) ) (inv_main10 var0 var2 0 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main31 var0 var2 var1 ) (not (<= 0 (+ (+ var1 1 ) (* (- 1) (+ var2 (- 1) ) ) ) ) ) ) ) (inv_main10 var0 var2 (+ var1 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main10 var0 var2 var1 ) (and (<= 0 (+ var1 (- 1) ) ) (= var0 0 ) ) ) ) (inv_main37 var0 var2 var1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main10 var0 var2 var1 ) (and (<= 0 (+ var1 (- 1) ) ) (and (not (= var0 0 ) ) (not (= var0 0 ) ) ) ) ) ) (inv_main37 var0 var2 var1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main10 var0 var2 var1 ) (and (<= 0 (+ var1 (- 1) ) ) (and (not (= var0 0 ) ) (and (= var0 0 ) (not (= var0 0 ) ) ) ) ) ) ) (inv_main37 var0 var2 var1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (not (and (inv_main16 var0 var2 var1 ) (not (<= 0 var1 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (not (and (inv_main19 var0 var2 var1 ) (not (<= 0 (+ (+ var2 (* (- 1) var1 ) ) (- 1) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (not (and (inv_main22 var0 var2 var1 ) (not (<= 0 var1 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (not (and (inv_main25 var0 var2 var1 ) (not (<= 0 (+ (+ var2 (* (- 1) var1 ) ) (- 1) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (not (and (inv_main28 var0 var2 var1 ) (not (<= 0 var1 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (not (and (inv_main31 var0 var2 var1 ) (not (<= 0 (+ (+ var2 (* (- 1) var1 ) ) (- 1) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (not (and (inv_main37 var0 var2 var1 ) (not (<= 0 var1 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (not (and (inv_main39 var0 var2 var1 ) (not (<= 0 (+ (+ var2 (* (- 1) var1 ) ) (- 1) ) ) ) ) ) ) ) ) )
(check-sat)

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main12 (Int Int) Bool)
(declare-fun inv_main13 (Int Int) Bool)
(declare-fun inv_main16 (Int Int) Bool)
(declare-fun inv_main18 (Int Int) Bool)
(declare-fun inv_main20 (Int Int) Bool)
(declare-fun inv_main25 (Int Int) Bool)
(declare-fun inv_main27 (Int Int) Bool)
(declare-fun inv_main29 (Int Int) Bool)
(declare-fun inv_main30 (Int Int) Bool)
(declare-fun inv_main33 (Int Int) Bool)
(declare-fun inv_main35 (Int Int) Bool)
(declare-fun inv_main37 (Int Int) Bool)
(declare-fun inv_main4 (Int Int) Bool)
(declare-fun inv_main42 (Int Int) Bool)
(declare-fun inv_main46 (Int Int) Bool)
(declare-fun inv_main49 (Int Int) Bool)
(declare-fun inv_main51 (Int Int) Bool)
(declare-fun inv_main57 (Int Int) Bool)
(declare-fun inv_main59 (Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (inv_main4 var1 var0 ) ) ) )
(assert true )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (inv_main16 var1 var0 ) ) (inv_main18 var1 var0 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (inv_main20 var1 var0 ) ) (inv_main25 var1 var0 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (inv_main13 var1 var0 ) ) (inv_main27 var1 var0 ) ) ) ) )
(assert true )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (inv_main33 var1 var0 ) ) (inv_main35 var1 var0 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (inv_main42 var1 var0 ) ) (inv_main46 var1 var0 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (inv_main49 var1 var0 ) ) (inv_main51 var1 var0 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (inv_main37 var1 var0 ) ) (inv_main57 var1 var0 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (inv_main30 var1 var0 ) ) (inv_main59 var1 var0 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main4 var1 var0 ) (<= 0 (+ var2 (- 1) ) ) ) ) (inv_main12 (+ var2 (- 1) ) 0 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (and (inv_main12 var1 var0 ) (= var0 var1 ) ) ) (inv_main16 var1 var0 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main12 var2 var0 ) (and (not (= var1 0 ) ) (not (= var0 var2 ) ) ) ) ) (inv_main13 var2 var0 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main12 var1 var0 ) (and (= var2 0 ) (not (= var0 var1 ) ) ) ) ) (inv_main20 var1 var0 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (inv_main25 var1 var0 ) ) (inv_main12 var1 (+ var0 1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (inv_main27 var1 var0 ) ) (inv_main29 var1 (+ var0 1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (and (inv_main29 var1 var0 ) (= var0 var1 ) ) ) (inv_main33 var1 var0 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main29 var1 var0 ) (and (not (= var3 0 ) ) (and (not (= var2 0 ) ) (not (= var0 var1 ) ) ) ) ) ) (inv_main42 var1 var0 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main29 var1 var0 ) (and (= var3 0 ) (and (not (= var2 0 ) ) (not (= var0 var1 ) ) ) ) ) ) (inv_main37 var1 var0 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (and (inv_main46 var1 var0 ) (= (+ var0 1 ) var1 ) ) ) (inv_main49 var1 (+ var0 1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (and (inv_main46 var1 var0 ) (not (= (+ var0 1 ) var1 ) ) ) ) (inv_main37 var1 (+ var0 1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main29 var3 var1 ) (and (not (= var0 0 ) ) (and (= var2 0 ) (not (= var1 var3 ) ) ) ) ) ) (inv_main30 var3 var1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main29 var2 var0 ) (and (= var3 0 ) (and (= var1 0 ) (not (= var0 var2 ) ) ) ) ) ) (inv_main37 var2 var0 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (inv_main57 var1 var0 ) ) (inv_main29 var1 (+ var0 1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main16 var1 var0 ) (not (<= 0 var0 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main18 var1 var0 ) (not (<= 0 (+ var1 (* (- 1) var0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main20 var1 var0 ) (not (<= 0 var0 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main25 var1 var0 ) (not (<= 0 (+ var1 (* (- 1) var0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main13 var1 var0 ) (not (<= 0 var0 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main27 var1 var0 ) (not (<= 0 (+ var1 (* (- 1) var0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main33 var1 var0 ) (not (<= 0 var0 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main35 var1 var0 ) (not (<= 0 (+ var1 (* (- 1) var0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main42 var1 var0 ) (not (<= 0 var0 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main46 var1 var0 ) (not (<= 0 (+ var1 (* (- 1) var0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main49 var1 var0 ) (not (<= 0 var0 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main51 var1 var0 ) (not (<= 0 (+ var1 (* (- 1) var0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main37 var1 var0 ) (not (<= 0 var0 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main57 var1 var0 ) (not (<= 0 (+ var1 (* (- 1) var0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main30 var1 var0 ) (not (<= 0 var0 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main59 var1 var0 ) (not (<= 0 (+ var1 (* (- 1) var0 ) ) ) ) ) ) ) ) )
(check-sat)

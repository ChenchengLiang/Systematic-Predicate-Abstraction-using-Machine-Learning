(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main11 (Int Int) Bool)
(declare-fun inv_main4 (Int Int) Bool)
(declare-fun inv_main57 (Int Int) Bool)
(declare-fun inv_main8 (Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (inv_main4 var0 var1 ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (inv_main11 var0 var1 ) ) (inv_main57 var0 var1 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (and (inv_main4 var0 var1 ) (and (= var1 0 ) (= var0 0 ) ) ) ) (inv_main8 var0 var1 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main8 var1 var2 ) (= var0 0 ) ) ) (inv_main11 var1 var2 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main8 var0 var3 ) (and (<= 0 (+ var0 (- 9) ) ) (and (not (= var1 0 ) ) (not (= var2 0 ) ) ) ) ) ) (inv_main8 (+ var0 2 ) (+ var3 1 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main8 var0 var4 ) (and (<= 0 (+ 9 (* (- 1) var0 ) ) ) (and (<= 0 (+ var0 (- 7) ) ) (and (not (= var3 0 ) ) (and (= var2 0 ) (not (= var1 0 ) ) ) ) ) ) ) ) (inv_main8 (+ var0 1 ) (+ var4 3 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main8 var1 var5 ) (and (<= 0 (* (- 1) (+ var1 (- 7) ) ) ) (and (<= 0 (+ var1 (- 5) ) ) (and (not (= var4 0 ) ) (and (= var0 0 ) (and (= var3 0 ) (not (= var2 0 ) ) ) ) ) ) ) ) ) (inv_main8 (+ var1 2 ) (+ var5 1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main8 var1 var5 ) (and (<= 0 (* (- 1) (+ var1 (- 4) ) ) ) (and (= var4 0 ) (and (= var0 0 ) (and (= var3 0 ) (not (= var2 0 ) ) ) ) ) ) ) ) (inv_main8 (+ var1 1 ) (+ var5 2 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main11 var0 var1 ) (not (<= 0 (+ (* (- 1) var0 ) (* 2 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (inv_main57 var0 var1 ) (not (<= 0 (+ (* 3 var0 ) (* (- 1) var1 ) ) ) ) ) ) ) ) )
(check-sat)

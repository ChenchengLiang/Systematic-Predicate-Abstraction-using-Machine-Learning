(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main26 (Int Int Int Int) Bool)
(declare-fun inv_main29 (Int Int Int Int) Bool)
(declare-fun inv_main32 (Int Int Int Int) Bool)
(declare-fun inv_main35 (Int Int Int Int) Bool)
(declare-fun inv_main40 (Int Int Int Int) Bool)
(declare-fun inv_main41 (Int Int Int Int) Bool)
(declare-fun inv_main5 (Int Int Int Int) Bool)
(declare-fun inv_main7 (Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (inv_main5 0 var0 0 0 ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (inv_main26 var2 var3 var0 var1 ) ) (inv_main29 var2 var3 var0 var1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (inv_main32 var2 var3 var0 var1 ) ) (inv_main35 var2 var3 var0 var1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (inv_main40 var2 var3 var0 var1 ) ) (inv_main41 var2 var3 var0 var1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main5 var2 var3 var0 var1 ) (<= 0 (+ var3 (- 1) ) ) ) ) (inv_main7 var2 var3 var0 var1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main7 var2 var3 var0 var1 ) (and (not (<= 0 (+ (+ var0 1 ) (* (- 1) var3 ) ) ) ) (and (= var2 0 ) (and (= var2 0 ) (and (= var2 0 ) (and (not (= var2 0 ) ) (not (= var2 0 ) ) ) ) ) ) ) ) ) (inv_main26 var2 var3 (+ var0 1 ) var1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main7 var2 var3 var0 var1 ) (and (not (<= 0 (+ (+ var0 1 ) (* (- 1) var3 ) ) ) ) (and (= var2 0 ) (not (= var2 0 ) ) ) ) ) ) (inv_main32 var2 var3 (+ var0 1 ) var1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main7 var2 var3 var0 var1 ) (and (not (= var2 0 ) ) (and (= var2 0 ) (and (not (= var2 0 ) ) (not (= var2 0 ) ) ) ) ) ) ) (inv_main7 var2 var3 0 0 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (inv_main29 var2 var3 var0 var1 ) ) (inv_main7 var2 var3 var0 (+ var1 1 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main35 var2 var3 var0 var1 ) (= var2 0 ) ) ) (inv_main7 var2 var3 var0 (+ var1 1 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main7 var2 var3 var0 var1 ) (= var2 0 ) ) ) (inv_main40 var2 var3 var0 var1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main7 var2 var3 var0 var1 ) (and (not (= var2 0 ) ) (and (not (= var2 0 ) ) (not (= var2 0 ) ) ) ) ) ) (inv_main40 var2 var3 var0 var1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main7 var2 var3 var0 var1 ) (and (not (= var2 0 ) ) (and (= var2 0 ) (and (= var2 0 ) (and (not (= var2 0 ) ) (not (= var2 0 ) ) ) ) ) ) ) ) (inv_main40 var2 var3 var0 var1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main7 var2 var3 var0 var1 ) (and (<= 0 (+ (+ var0 1 ) (* (- 1) var3 ) ) ) (and (= var2 0 ) (and (= var2 0 ) (and (= var2 0 ) (and (not (= var2 0 ) ) (not (= var2 0 ) ) ) ) ) ) ) ) ) (inv_main40 var2 var3 (+ var0 1 ) var1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main7 var2 var3 var0 var1 ) (and (<= 0 (+ (+ var0 1 ) (* (- 1) var3 ) ) ) (and (= var2 0 ) (not (= var2 0 ) ) ) ) ) ) (inv_main40 var2 var3 (+ var0 1 ) var1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main35 var2 var3 var0 var1 ) (not (= var2 0 ) ) ) ) (inv_main40 var2 var3 var0 (+ var1 1 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main26 var2 var3 var0 var1 ) (not (<= 0 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main29 var2 var3 var0 var1 ) (not (<= 0 (+ (+ var3 (* (- 1) var1 ) ) (- 1) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main32 var2 var3 var0 var1 ) (not (<= 0 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main35 var2 var3 var0 var1 ) (not (<= 0 (+ (+ var3 (* (- 1) var1 ) ) (- 1) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main40 var2 var3 var0 var1 ) (not (<= 0 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main41 var2 var3 var0 var1 ) (not (<= 0 (+ (+ var3 (* (- 1) var1 ) ) (- 1) ) ) ) ) ) ) ) ) ) )
(check-sat)

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main12 (Int Int Int Int) Bool)
(declare-fun inv_main18 (Int Int Int Int) Bool)
(declare-fun inv_main3 (Int Int Int) Bool)
(declare-fun inv_main8 (Int Int Int Int) Bool)
(assert (inv_main3 0 0 0 ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main12 var0 var1 var3 var4 ) (not (= var2 0 ) ) ) ) (inv_main18 var0 (+ var1 var2 ) var2 var4 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main18 var0 var1 var2 var3 ) (not (<= 0 (+ (+ var3 (* (- 1) (+ var0 1 ) ) ) (- 1) ) ) ) ) ) (inv_main8 (+ var0 1 ) var1 var2 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main18 var0 var1 var2 var3 ) (<= 0 (+ (+ var3 (* (- 1) (+ var0 1 ) ) ) (- 1) ) ) ) ) (inv_main12 (+ var0 1 ) (+ var1 (* (- 1) var2 ) ) var2 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main3 var0 var1 var3 ) (and (not (<= 0 (+ var2 (- 1) ) ) ) (<= 0 (+ var2 (- 1) ) ) ) ) ) (inv_main8 0 var1 var3 var2 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main3 var0 var1 var3 ) (and (<= 0 (+ var2 (- 1) ) ) (<= 0 (+ var2 (- 1) ) ) ) ) ) (inv_main12 0 (+ var1 (* (- 1) var3 ) ) var3 var2 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main12 var0 var1 var2 var3 ) (not (= var1 0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main18 var0 var1 var2 var3 ) (= var1 0 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main8 var0 var1 var2 var3 ) (not (= var1 0 ) ) ) ) ) ) ) ) )
(check-sat)

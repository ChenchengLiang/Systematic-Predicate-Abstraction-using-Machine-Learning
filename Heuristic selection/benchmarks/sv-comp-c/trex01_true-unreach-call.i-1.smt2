(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main18 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main19 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main2 () Bool)
(declare-fun inv_main24 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main45 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main46 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main51 (Int Int Int Int Int Int) Bool)
(assert inv_main2 )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main18 var3 var2 var1 var4 var5 var0 ) (not (<= 0 (+ (+ var5 (* (- 1) var0 ) ) (- 1) ) ) ) ) ) (inv_main19 var3 var2 var1 var4 var5 var0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main45 var2 var1 var4 var3 var0 var5 ) (not (<= 0 (+ (+ var0 (* (- 1) var5 ) ) (- 1) ) ) ) ) ) (inv_main46 var2 var1 var4 var3 var0 var5 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main18 var3 var2 var1 var4 var5 var0 ) (<= 0 (+ (+ var5 (* (- 1) var0 ) ) (- 1) ) ) ) ) (inv_main18 var3 var2 var1 var4 var5 (* 2 var0 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main19 var3 var2 var1 var4 var5 var0 ) (and (and (<= 0 (+ 1000000 (* (- 1) var5 ) ) ) (<= 0 (+ var5 1000000 ) ) ) (and (and (<= 0 (+ 1000000 (* (- 1) var4 ) ) ) (<= 0 (+ var4 1000000 ) ) ) (and (<= 0 (+ 1000000 (* (- 1) var1 ) ) ) (<= 0 (+ var1 1000000 ) ) ) ) ) ) ) (inv_main24 var3 var2 var1 var4 var5 var0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main24 var3 var2 var1 var4 var5 var0 ) (and (= var6 0 ) (and (<= 0 (+ var1 (- 1) ) ) (<= 0 (+ var4 (- 1) ) ) ) ) ) ) (inv_main24 var3 var2 var1 (+ var4 (* (- 1) var2 ) ) var5 var0 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main24 var5 var4 var3 var6 var7 var2 ) (and (not (= var1 0 ) ) (and (<= 0 (+ var3 (- 1) ) ) (<= 0 (+ var6 (- 1) ) ) ) ) ) ) (inv_main24 var5 var4 (+ var3 (* (- 1) var4 ) ) var0 var7 (+ var2 (- 1) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main45 var2 var1 var4 var3 var0 var5 ) (<= 0 (+ (+ var0 (* (- 1) var5 ) ) (- 1) ) ) ) ) (inv_main45 var2 var1 var4 var3 var0 (* 2 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main46 var2 var1 var4 var3 var0 var5 ) (and (and (<= 0 (+ 1000000 (* (- 1) var0 ) ) ) (<= 0 (+ var0 1000000 ) ) ) (and (and (<= 0 (+ 1000000 (* (- 1) var3 ) ) ) (<= 0 (+ var3 1000000 ) ) ) (and (<= 0 (+ 1000000 (* (- 1) var4 ) ) ) (<= 0 (+ var4 1000000 ) ) ) ) ) ) ) (inv_main51 var2 var1 var4 var3 var0 var5 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main51 var2 var1 var5 var3 var0 var6 ) (and (= var4 0 ) (and (<= 0 (+ var5 (- 1) ) ) (<= 0 (+ var3 (- 1) ) ) ) ) ) ) (inv_main51 var2 var1 var5 (+ var3 (* (- 1) var1 ) ) var0 var6 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main51 var4 var1 var6 var5 var0 var7 ) (and (not (= var2 0 ) ) (and (<= 0 (+ var6 (- 1) ) ) (<= 0 (+ var5 (- 1) ) ) ) ) ) ) (inv_main51 var4 var1 (+ var6 (* (- 1) var1 ) ) var3 var0 (+ var7 (- 1) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and inv_main2 (not (= var0 0 ) ) ) ) (inv_main18 var0 1 var3 var1 var2 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and inv_main2 (= var0 0 ) ) ) (inv_main45 var0 2 var1 var2 var3 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (not (and (inv_main19 var3 var2 var1 var4 var5 var0 ) (not (<= 0 (+ var0 (- 1) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (not (and (inv_main46 var2 var1 var4 var3 var0 var5 ) (not (<= 0 (+ var5 (- 1) ) ) ) ) ) ) ) ) ) ) ) )
(check-sat)

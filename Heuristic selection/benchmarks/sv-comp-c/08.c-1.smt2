(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main25 (Int Int) Bool)
(declare-fun inv_main3 (Int Int) Bool)
(assert (inv_main3 0 0 ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main3 var0 var1 ) (and (not (= var3 0 ) ) (not (= var2 0 ) ) ) ) ) (inv_main3 (+ var0 1 ) (+ var1 100 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main3 var0 var1 ) (and (= var3 0 ) (and (= var4 0 ) (not (= var2 0 ) ) ) ) ) ) (inv_main3 var0 var1 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main3 var0 var1 ) (and (not (or (<= 0 (+ (+ 4 (* (- 1) var0 ) ) (- 1) ) ) (<= 0 (+ (+ var1 (- 2) ) (- 1) ) ) ) ) (= var2 0 ) ) ) ) (inv_main25 var0 var1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main3 var0 var2 ) (and (<= 0 (+ (* (- 1) var0 ) (- 1) ) ) (and (not (<= 0 (+ var0 (- 4) ) ) ) (and (not (= var1 0 ) ) (and (= var4 0 ) (not (= var3 0 ) ) ) ) ) ) ) ) (inv_main3 var0 (+ var2 (- 1) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main3 var0 var2 ) (and (not (<= 0 (+ (* (- 1) var0 ) (- 1) ) ) ) (and (not (<= 0 (+ var0 (- 4) ) ) ) (and (not (= var1 0 ) ) (and (= var4 0 ) (not (= var3 0 ) ) ) ) ) ) ) ) (inv_main3 var0 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main3 var0 var2 ) (and (<= 0 (+ (* (- 1) (+ var0 1 ) ) (- 1) ) ) (and (<= 0 (+ var0 (- 4) ) ) (and (not (= var1 0 ) ) (and (= var4 0 ) (not (= var3 0 ) ) ) ) ) ) ) ) (inv_main3 (+ var0 1 ) (+ (+ var2 1 ) (- 1) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main3 var0 var2 ) (and (not (<= 0 (+ (* (- 1) (+ var0 1 ) ) (- 1) ) ) ) (and (<= 0 (+ var0 (- 4) ) ) (and (not (= var1 0 ) ) (and (= var4 0 ) (not (= var3 0 ) ) ) ) ) ) ) ) (inv_main3 (+ var0 1 ) (+ var2 1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (inv_main25 var0 var1 ) ) ) ) )
(check-sat)

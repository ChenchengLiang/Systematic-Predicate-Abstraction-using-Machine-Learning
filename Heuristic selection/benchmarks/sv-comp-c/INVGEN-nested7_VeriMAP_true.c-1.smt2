(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main10 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main12 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main18 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main24 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main3 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main30 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main35 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main7 (Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (inv_main3 0 var5 var0 var4 var1 var3 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main35 var6 var2 var0 var1 var4 var3 var5 ) (not (<= 0 (+ (+ var3 (* (- 1) var4 ) ) (- 1) ) ) ) ) ) (inv_main10 var6 var2 var0 var1 var4 var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main12 var6 var2 var0 var1 var4 var3 var5 ) (and (not (= var6 0 ) ) (<= 0 (+ (+ var5 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) (inv_main18 var6 var2 var1 var1 0 var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main18 var6 var2 var0 var1 var4 var3 var5 ) (<= 0 (+ (+ var3 (* (- 1) var4 ) ) (- 1) ) ) ) ) (inv_main18 var6 var2 (+ var0 1 ) var1 (+ var4 1 ) var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main12 var6 var2 var0 var1 var4 var3 var5 ) (and (<= 0 (+ (+ var1 (- 5) ) (- 1) ) ) (not (<= 0 (+ (+ var5 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) ) (inv_main24 var6 var2 var0 var1 0 var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main24 var6 var2 var0 var1 var4 var3 var5 ) (<= 0 (+ (+ var5 (* (- 1) var4 ) ) (- 1) ) ) ) ) (inv_main24 var6 var2 var0 var1 (+ var4 1 ) var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main30 var6 var2 var0 var1 var4 var3 var5 ) (<= 0 (+ (+ (+ var3 var1 ) (* (- 1) var0 ) ) (- 1) ) ) ) ) (inv_main30 var6 var2 (+ var0 1 ) var1 var4 var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main12 var6 var2 var0 var1 var4 var3 var5 ) (and (<= 0 (+ (+ var1 (* (- 1) var3 ) ) (- 1) ) ) (and (not (<= 0 (+ (+ var1 (- 5) ) (- 1) ) ) ) (not (<= 0 (+ (+ var5 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) ) ) (inv_main35 var6 var2 var0 var1 0 var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main12 var6 var2 var0 var1 var4 var3 var5 ) (and (not (<= 0 (+ (+ var1 (* (- 1) var3 ) ) (- 1) ) ) ) (and (not (<= 0 (+ (+ var1 (- 5) ) (- 1) ) ) ) (not (<= 0 (+ (+ var5 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) ) ) (inv_main10 var6 var2 var0 var1 var4 var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main35 var6 var2 var0 var1 var4 var3 var5 ) (<= 0 (+ (+ var3 (* (- 1) var4 ) ) (- 1) ) ) ) ) (inv_main35 var6 var2 (+ var0 (- 1) ) var1 (+ var4 1 ) var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main10 var6 var2 var0 var1 var4 var3 var5 ) (not (<= 0 (+ (+ var3 (* (- 1) (+ var2 1 ) ) ) (- 1) ) ) ) ) ) (inv_main7 var6 (+ var2 1 ) var0 var1 var4 var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main10 var6 var2 var0 var1 var4 var3 var5 ) (<= 0 (+ (+ var3 (* (- 1) (+ var2 1 ) ) ) (- 1) ) ) ) ) (inv_main12 var6 0 var0 var1 var4 var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main3 var6 var2 var0 var1 var4 var3 var5 ) (and (not (<= 0 (+ var3 (- 1) ) ) ) (<= 0 (+ (+ var3 var1 ) (* (- 1) var0 ) ) ) ) ) ) (inv_main7 var6 0 var0 var1 var4 var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main3 var6 var2 var0 var1 var4 var3 var5 ) (and (<= 0 (+ var3 (- 1) ) ) (<= 0 (+ (+ var3 var1 ) (* (- 1) var0 ) ) ) ) ) ) (inv_main12 var6 0 var0 var1 var4 var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main18 var6 var2 var0 var1 var4 var3 var5 ) (not (<= 0 (+ (+ var3 (* (- 1) var4 ) ) (- 1) ) ) ) ) ) (inv_main12 var6 (+ var2 1 ) var0 var1 var4 var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main12 var6 var2 var0 var1 var4 var3 var5 ) (and (= var6 0 ) (<= 0 (+ (+ var5 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) (inv_main12 var6 (+ var2 1 ) var1 var1 var4 var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main24 var6 var2 var0 var1 var4 var3 var5 ) (and (not (<= 0 (+ var5 (- 1) ) ) ) (not (<= 0 (+ (+ var5 (* (- 1) var4 ) ) (- 1) ) ) ) ) ) ) (inv_main10 var6 var2 var0 var1 0 var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main24 var6 var2 var0 var1 var4 var3 var5 ) (and (<= 0 (+ var5 (- 1) ) ) (not (<= 0 (+ (+ var5 (* (- 1) var4 ) ) (- 1) ) ) ) ) ) ) (inv_main30 var6 var2 0 var1 0 var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main30 var6 var2 var0 var1 var4 var3 var5 ) (and (not (<= 0 (+ (+ var5 (* (- 1) (+ var4 1 ) ) ) (- 1) ) ) ) (not (<= 0 (+ (+ (+ var3 var1 ) (* (- 1) var0 ) ) (- 1) ) ) ) ) ) ) (inv_main10 var6 var2 var0 var1 (+ var4 1 ) var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main30 var6 var2 var0 var1 var4 var3 var5 ) (and (<= 0 (+ (+ var5 (* (- 1) (+ var4 1 ) ) ) (- 1) ) ) (not (<= 0 (+ (+ (+ var3 var1 ) (* (- 1) var0 ) ) (- 1) ) ) ) ) ) ) (inv_main30 var6 var2 0 var1 (+ var4 1 ) var3 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (not (and (inv_main7 var6 var2 var0 var1 var4 var3 var5 ) (not (<= 0 (+ (+ var3 var1 ) (* (- 1) var0 ) ) ) ) ) ) ) ) ) ) ) ) ) )
(check-sat)

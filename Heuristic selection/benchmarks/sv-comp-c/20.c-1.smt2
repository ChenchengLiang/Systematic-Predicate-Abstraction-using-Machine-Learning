(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main22 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main3 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main30 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main35 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main6 (Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (inv_main3 var3 var2 var1 var0 var5 var4 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main6 var1 var6 var3 var2 var0 var5 var4 ) (and (not (= (+ var1 var6 ) var3 ) ) (not (<= 0 (+ (+ var5 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) ) (inv_main22 var1 var6 var3 var2 var0 var5 var4 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main6 var1 var7 var4 var3 var0 var6 var5 ) (and (not (= var2 0 ) ) (and (= var3 var0 ) (<= 0 (+ (+ var6 (* (- 1) var3 ) ) (- 1) ) ) ) ) ) ) (inv_main6 (+ var1 1 ) (+ var7 (- 1) ) var4 (+ var3 1 ) var0 var6 var3 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main6 var1 var7 var4 var2 var0 var6 var5 ) (and (= var3 0 ) (and (= var2 var0 ) (<= 0 (+ (+ var6 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) ) (inv_main6 (+ var1 1 ) (+ var7 (- 1) ) var4 (+ var2 1 ) var0 var6 var5 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main6 var1 var7 var4 var3 var0 var6 var5 ) (and (not (= var2 0 ) ) (and (not (= var3 var0 ) ) (<= 0 (+ (+ var6 (* (- 1) var3 ) ) (- 1) ) ) ) ) ) ) (inv_main6 (+ var1 (- 1) ) (+ var7 1 ) var4 (+ var3 1 ) var0 var6 var3 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main6 var1 var7 var4 var3 var0 var6 var5 ) (and (= var2 0 ) (and (not (= var3 var0 ) ) (<= 0 (+ (+ var6 (* (- 1) var3 ) ) (- 1) ) ) ) ) ) ) (inv_main6 (+ var1 (- 1) ) (+ var7 1 ) var4 (+ var3 1 ) var0 var6 var5 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main30 var1 var6 var3 var2 var0 var5 var4 ) (not (<= 0 (+ (+ var5 (* (- 1) var4 ) ) (- 1) ) ) ) ) ) (inv_main35 var1 var6 var3 var2 var0 var5 var4 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main3 var1 var5 var3 var2 var0 var4 ) (= (+ var1 var5 ) var3 ) ) ) (inv_main6 var1 var5 var3 0 var0 var4 0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main6 var1 var6 var3 var2 var0 var5 var4 ) (and (and (not (<= 0 var4 ) ) (<= 0 (+ var5 (- 1) ) ) ) (and (= (+ var1 var6 ) var3 ) (not (<= 0 (+ (+ var5 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) ) ) (inv_main30 var1 var6 var3 var2 var0 var5 var4 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main6 var1 var6 var3 var2 var0 var5 var4 ) (and (and (not (<= 0 (+ (+ var5 (* (- 1) var4 ) ) (- 1) ) ) ) (and (<= 0 var4 ) (<= 0 (+ var5 (- 1) ) ) ) ) (and (= (+ var1 var6 ) var3 ) (not (<= 0 (+ (+ var5 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) ) ) (inv_main35 var1 var6 var3 var2 var0 var5 var4 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main22 var1 var6 var3 var2 var0 var5 var4 ) (and (not (<= 0 var4 ) ) (<= 0 (+ var5 (- 1) ) ) ) ) ) (inv_main30 var1 var6 var3 var2 var0 var5 var4 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main22 var1 var6 var3 var2 var0 var5 var4 ) (and (not (<= 0 (+ (+ var5 (* (- 1) var4 ) ) (- 1) ) ) ) (and (<= 0 var4 ) (<= 0 (+ var5 (- 1) ) ) ) ) ) ) (inv_main35 var1 var6 var3 var2 var0 var5 var4 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (not (inv_main22 var1 var6 var3 var2 var0 var5 var4 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (not (inv_main30 var1 var6 var3 var2 var0 var5 var4 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (not (inv_main35 var1 var6 var3 var2 var0 var5 var4 ) ) ) ) ) ) ) ) ) )
(check-sat)

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main16 (Int Int Int Int Int) Bool)
(declare-fun inv_main19 (Int Int Int Int Int) Bool)
(declare-fun inv_main20 (Int Int Int Int Int) Bool)
(declare-fun inv_main22 (Int Int Int Int Int) Bool)
(declare-fun inv_main23 (Int Int Int Int Int) Bool)
(declare-fun inv_main24 (Int Int Int Int Int) Bool)
(declare-fun inv_main3 (Int Int Int Int Int) Bool)
(declare-fun inv_main30 (Int Int Int Int Int) Bool)
(declare-fun inv_main32 (Int Int Int Int Int) Bool)
(declare-fun inv_main37 (Int Int Int Int Int) Bool)
(declare-fun inv_main38 (Int Int Int Int Int) Bool)
(declare-fun inv_main39 (Int Int Int Int Int) Bool)
(declare-fun inv_main42 (Int Int Int Int Int) Bool)
(declare-fun inv_main43 (Int Int Int Int Int) Bool)
(declare-fun inv_main44 (Int Int Int Int Int) Bool)
(declare-fun inv_main46 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (inv_main3 var2 var1 var0 var4 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main20 var4 var1 var3 var0 var2 ) ) (inv_main22 var4 var1 var3 var0 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main22 var4 var1 var3 var0 var2 ) ) (inv_main23 var4 var1 var3 var0 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main23 var4 var1 var3 var0 var2 ) ) (inv_main24 var4 var1 var3 var0 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main19 var4 var1 var3 var0 var2 ) ) (inv_main30 var4 var1 var3 var0 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main32 var4 var1 var3 var0 var2 ) ) (inv_main37 var4 var1 var3 var0 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main37 var4 var1 var3 var0 var2 ) ) (inv_main38 var4 var1 var3 var0 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main38 var4 var1 var3 var0 var2 ) ) (inv_main39 var4 var1 var3 var0 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main42 var4 var1 var3 var0 var2 ) ) (inv_main44 var4 var1 var3 var0 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main43 var4 var1 var3 var0 var2 ) ) (inv_main46 var4 var1 var3 var0 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main16 var4 var1 var3 var0 var2 ) (and (<= 0 (+ (+ var3 (* (- 1) var2 ) ) (- 1) ) ) (<= 0 (+ var3 (* (- 1) var2 ) ) ) ) ) ) (inv_main20 var4 var1 var3 var0 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main16 var4 var1 var3 var0 var2 ) (and (not (<= 0 (+ (+ var3 (* (- 1) var2 ) ) (- 1) ) ) ) (<= 0 (+ var3 (* (- 1) var2 ) ) ) ) ) ) (inv_main19 var4 var1 var3 var0 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main24 var5 var1 var3 var0 var2 ) (not (= var4 0 ) ) ) ) (inv_main19 var5 var1 var3 var0 (+ var2 1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main24 var5 var1 var3 var0 var2 ) (= var4 0 ) ) ) (inv_main19 var5 var1 var3 var0 var2 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main30 var5 var2 var4 var0 var3 ) (= var1 0 ) ) ) (inv_main32 var5 var2 var4 var0 var3 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main39 var4 var1 var3 var0 var2 ) ) (inv_main16 var4 var1 var3 var2 (* 2 var2 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main16 var4 var1 var3 var0 var2 ) (and (<= 0 (+ (+ var1 (- 1) ) (- 1) ) ) (not (<= 0 (+ var3 (* (- 1) var2 ) ) ) ) ) ) ) (inv_main42 var4 var1 var3 var0 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main16 var4 var1 var3 var0 var2 ) (and (not (<= 0 (+ (+ var1 (- 1) ) (- 1) ) ) ) (not (<= 0 (+ var3 (* (- 1) var2 ) ) ) ) ) ) ) (inv_main43 var4 var1 var3 var0 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main30 var5 var1 var4 var0 var2 ) (and (<= 0 (+ (+ var1 (- 1) ) (- 1) ) ) (not (= var3 0 ) ) ) ) ) (inv_main42 var5 var1 var4 var0 var2 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main30 var5 var1 var4 var0 var2 ) (and (not (<= 0 (+ (+ var1 (- 1) ) (- 1) ) ) ) (not (= var3 0 ) ) ) ) ) (inv_main43 var5 var1 var4 var0 var2 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main3 var5 var1 var4 var0 var3 ) (and (<= 0 (+ (+ var2 (- 1) ) (- 1) ) ) (and (forall ((var6 Int)) (or (not (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var2 (* (- 2) var6 ) ) ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 (+ var2 (* (- 2) var6 ) ) ) ) (- 1) ) ) ) (or (not (<= 0 (+ (+ var2 (* (- 2) var6 ) ) (- 1) ) ) ) (<= 0 (+ var2 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) (+ var2 (* (- 2) var6 ) ) ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var2 ) (- 1) ) ) ) ) ) (<= 0 (+ (+ (+ var6 1 ) (- 1) ) (- 1) ) ) ) ) (and (<= 0 (+ var2 (- 1) ) ) (<= 0 (+ 1000000 (* (- 1) var2 ) ) ) ) ) ) ) ) (exists ((var6 Int)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var2 (* (- 2) var6 ) ) ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 (+ var2 (* (- 2) var6 ) ) ) ) (- 1) ) ) ) (or (not (<= 0 (+ (+ var2 (* (- 2) var6 ) ) (- 1) ) ) ) (<= 0 (+ var2 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) (+ var2 (* (- 2) var6 ) ) ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var2 ) (- 1) ) ) ) ) (exists ((var7 Int)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var2 (* (- 2) var7 ) ) ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 (+ var2 (* (- 2) var7 ) ) ) ) (- 1) ) ) ) (or (not (<= 0 (+ (+ var2 (* (- 2) var7 ) ) (- 1) ) ) ) (<= 0 (+ var2 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) (+ var2 (* (- 2) var7 ) ) ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var2 ) (- 1) ) ) ) ) (exists ((var8 Int)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var2 (* (- 2) var8 ) ) ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 (+ var2 (* (- 2) var8 ) ) ) ) (- 1) ) ) ) (or (not (<= 0 (+ (+ var2 (* (- 2) var8 ) ) (- 1) ) ) ) (<= 0 (+ var2 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) (+ var2 (* (- 2) var8 ) ) ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var2 ) (- 1) ) ) ) ) (inv_main16 var2 (+ (+ var6 1 ) (- 1) ) var2 (+ (+ var7 1 ) (- 1) ) (* 2 (+ (+ var8 1 ) (- 1) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main3 var5 var1 var4 var0 var3 ) (and (<= 0 (+ (+ (+ var2 (- 1) ) (- 1) ) (- 1) ) ) (and (not (exists ((var6 Int)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var2 (* (- 2) var6 ) ) ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 (+ var2 (* (- 2) var6 ) ) ) ) (- 1) ) ) ) (or (not (<= 0 (+ (+ var2 (* (- 2) var6 ) ) (- 1) ) ) ) (<= 0 (+ var2 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) (+ var2 (* (- 2) var6 ) ) ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var2 ) (- 1) ) ) ) ) (<= 0 (+ (+ (+ var6 1 ) (- 1) ) (- 1) ) ) ) ) ) (and (<= 0 (+ var2 (- 1) ) ) (<= 0 (+ 1000000 (* (- 1) var2 ) ) ) ) ) ) ) ) (exists ((var6 Int)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var2 (* (- 2) var6 ) ) ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 (+ var2 (* (- 2) var6 ) ) ) ) (- 1) ) ) ) (or (not (<= 0 (+ (+ var2 (* (- 2) var6 ) ) (- 1) ) ) ) (<= 0 (+ var2 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) (+ var2 (* (- 2) var6 ) ) ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var2 ) (- 1) ) ) ) ) (exists ((var7 Int)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var2 (* (- 2) var7 ) ) ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 (+ var2 (* (- 2) var7 ) ) ) ) (- 1) ) ) ) (or (not (<= 0 (+ (+ var2 (* (- 2) var7 ) ) (- 1) ) ) ) (<= 0 (+ var2 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) (+ var2 (* (- 2) var7 ) ) ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var2 ) (- 1) ) ) ) ) (exists ((var8 Int)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var2 (* (- 2) var8 ) ) ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 (+ var2 (* (- 2) var8 ) ) ) ) (- 1) ) ) ) (or (not (<= 0 (+ (+ var2 (* (- 2) var8 ) ) (- 1) ) ) ) (<= 0 (+ var2 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) (+ var2 (* (- 2) var8 ) ) ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var2 ) (- 1) ) ) ) ) (inv_main16 var2 (+ var6 1 ) (+ var2 (- 1) ) (+ var7 1 ) (* 2 (+ var8 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main44 var4 var1 var3 var0 var2 ) (<= 0 (+ (+ var3 (- 1) ) (- 1) ) ) ) ) (inv_main16 var4 (+ var1 (- 1) ) var3 (+ var1 (- 1) ) (* 2 (+ var1 (- 1) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main46 var4 var1 var3 var0 var2 ) (<= 0 (+ (+ (+ var3 (- 1) ) (- 1) ) (- 1) ) ) ) ) (inv_main16 var4 var1 (+ var3 (- 1) ) var1 (* 2 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main20 var4 var1 var3 var0 var2 ) (not (<= 0 (+ var2 (- 1) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main22 var4 var1 var3 var0 var2 ) (not (<= 0 (+ var4 (* (- 1) var2 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main23 var4 var1 var3 var0 var2 ) (not (<= 0 (+ (+ var2 1 ) (- 1) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main24 var4 var1 var3 var0 var2 ) (not (<= 0 (+ var4 (* (- 1) (+ var2 1 ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main19 var4 var1 var3 var0 var2 ) (not (<= 0 (+ var2 (- 1) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main30 var4 var1 var3 var0 var2 ) (not (<= 0 (+ var4 (* (- 1) var2 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main32 var4 var1 var3 var0 var2 ) (not (<= 0 (+ var0 (- 1) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main37 var4 var1 var3 var0 var2 ) (not (<= 0 (+ var4 (* (- 1) var0 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main38 var4 var1 var3 var0 var2 ) (not (<= 0 (+ var2 (- 1) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main39 var4 var1 var3 var0 var2 ) (not (<= 0 (+ var4 (* (- 1) var2 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main42 var4 var1 var3 var0 var2 ) (not (<= 0 (+ var1 (- 1) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main44 var4 var1 var3 var0 var2 ) (not (<= 0 (+ var4 (* (- 1) var1 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main43 var4 var1 var3 var0 var2 ) (not (<= 0 (+ var3 (- 1) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main46 var4 var1 var3 var0 var2 ) (not (<= 0 (+ var4 (* (- 1) var3 ) ) ) ) ) ) ) ) ) ) ) )
(check-sat)

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main3 (Int Int Int Int) Bool)
(declare-fun inv_main4 (Int Int Int Int) Bool)
(declare-fun inv_main5 (Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (inv_main3 var0 var2 var1 var3 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (inv_main3 var2 var3 var0 var1 ) ) (inv_main4 0 0 0 0 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main4 var3 var4 var0 var1 ) (= var2 0 ) ) ) (inv_main5 var3 var4 var0 var1 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main4 var4 var5 var0 var1 ) (and (not (= var2 0 ) ) (not (= var3 0 ) ) ) ) ) (inv_main4 (+ var4 1 ) (+ var5 2 ) var0 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main4 var4 var6 var0 var1 ) (and (not (<= 0 (+ var4 (- 4) ) ) ) (and (not (= var5 0 ) ) (and (= var3 0 ) (not (= var2 0 ) ) ) ) ) ) ) (inv_main4 var4 var6 var0 var1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main4 var4 var6 var0 var1 ) (and (<= 0 (+ var4 (- 4) ) ) (and (not (= var5 0 ) ) (and (= var3 0 ) (not (= var2 0 ) ) ) ) ) ) ) (inv_main4 (+ var4 1 ) (+ var6 3 ) (+ var0 10 ) (+ var1 10 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main4 var5 var6 var0 var2 ) (and (not (and (<= 0 (+ var5 (* (- 1) var0 ) ) ) (<= 0 (+ (+ var2 (* (- 1) var6 ) ) (- 1) ) ) ) ) (and (= var1 0 ) (and (= var4 0 ) (not (= var3 0 ) ) ) ) ) ) ) (inv_main4 var5 var6 var0 var2 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main4 var5 var6 var0 var2 ) (and (and (<= 0 (+ var5 (* (- 1) var0 ) ) ) (<= 0 (+ (+ var2 (* (- 1) var6 ) ) (- 1) ) ) ) (and (= var1 0 ) (and (= var4 0 ) (not (= var3 0 ) ) ) ) ) ) ) (inv_main4 (* (- 1) var5 ) (* (- 1) var6 ) var0 var2 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main5 var2 var3 var0 var1 ) (not (<= 0 (+ (* 3 var2 ) (* (- 1) var3 ) ) ) ) ) ) ) ) ) ) )
(check-sat)

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main19 (Int) Bool)
(declare-fun inv_main29 (Int) Bool)
(declare-fun inv_main3 (Int) Bool)
(declare-fun inv_main39 (Int) Bool)
(declare-fun inv_main49 (Int) Bool)
(declare-fun inv_main54 (Int) Bool)
(declare-fun inv_main9 (Int) Bool)
(assert (inv_main3 0 ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (and (inv_main49 var0 ) (not (= var1 0 ) ) ) ) (inv_main54 (+ var0 1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (and (inv_main49 var1 ) (= var0 0 ) ) ) (inv_main54 (+ var1 2 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main3 var1 ) (and (not (= var0 0 ) ) (not (= var2 0 ) ) ) ) ) (inv_main9 (+ (+ var1 1 ) 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main3 var1 ) (and (= var0 0 ) (not (= var2 0 ) ) ) ) ) (inv_main9 (+ (+ var1 1 ) 20 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main3 var2 ) (and (not (= var0 0 ) ) (= var1 0 ) ) ) ) (inv_main9 (+ (+ var2 22 ) 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main3 var2 ) (and (= var0 0 ) (= var1 0 ) ) ) ) (inv_main9 (+ (+ var2 22 ) 20 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main9 var2 ) (and (not (= var1 0 ) ) (not (= var0 0 ) ) ) ) ) (inv_main19 (+ (+ var2 1 ) 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main9 var2 ) (and (= var0 0 ) (not (= var1 0 ) ) ) ) ) (inv_main19 (+ (+ var2 1 ) 16 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main9 var2 ) (and (not (= var1 0 ) ) (= var0 0 ) ) ) ) (inv_main19 (+ (+ var2 18 ) 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main9 var2 ) (and (= var1 0 ) (= var0 0 ) ) ) ) (inv_main19 (+ (+ var2 18 ) 16 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main19 var2 ) (and (not (= var0 0 ) ) (not (= var1 0 ) ) ) ) ) (inv_main29 (+ (+ var2 1 ) 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main19 var2 ) (and (= var0 0 ) (not (= var1 0 ) ) ) ) ) (inv_main29 (+ (+ var2 1 ) 12 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main19 var2 ) (and (not (= var1 0 ) ) (= var0 0 ) ) ) ) (inv_main29 (+ (+ var2 14 ) 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main19 var2 ) (and (= var1 0 ) (= var0 0 ) ) ) ) (inv_main29 (+ (+ var2 14 ) 12 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main29 var2 ) (and (not (= var0 0 ) ) (not (= var1 0 ) ) ) ) ) (inv_main39 (+ (+ var2 1 ) 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main29 var2 ) (and (= var0 0 ) (not (= var1 0 ) ) ) ) ) (inv_main39 (+ (+ var2 1 ) 8 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main29 var1 ) (and (not (= var2 0 ) ) (= var0 0 ) ) ) ) (inv_main39 (+ (+ var1 10 ) 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main29 var2 ) (and (= var0 0 ) (= var1 0 ) ) ) ) (inv_main39 (+ (+ var2 10 ) 8 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main39 var2 ) (and (not (= var1 0 ) ) (not (= var0 0 ) ) ) ) ) (inv_main49 (+ (+ var2 1 ) 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main39 var2 ) (and (= var0 0 ) (not (= var1 0 ) ) ) ) ) (inv_main49 (+ (+ var2 1 ) 4 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main39 var2 ) (and (not (= var0 0 ) ) (= var1 0 ) ) ) ) (inv_main49 (+ (+ var2 6 ) 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main39 var2 ) (and (= var0 0 ) (= var1 0 ) ) ) ) (inv_main49 (+ (+ var2 6 ) 4 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (not (and (inv_main54 var0 ) (not (<= 0 (+ 132 (* (- 1) var0 ) ) ) ) ) ) ) )
(check-sat)

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main18 (Int Int Int Int Int) Bool)
(declare-fun inv_main28 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main6 (Int Int Int Int Int) Bool)
(declare-fun inv_main8 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (inv_main6 var1 var0 var2 0 var3 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main28 var4 var2 var0 var5 var1 var3 ) (not (<= 0 (+ (+ var3 1 ) (* (- 1) var1 ) ) ) ) ) ) (inv_main28 (+ var4 (- 1) ) var2 var0 (+ var5 (- 1) ) var1 (+ var3 1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (inv_main6 var4 var3 var0 var5 var2 ) ) (inv_main8 0 var1 var0 var5 var2 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main8 var4 var3 var0 var5 var1 ) (and (not (= var2 0 ) ) (<= 0 (+ 1000000 (* (- 1) var4 ) ) ) ) ) ) (inv_main8 (+ var4 1 ) var3 var0 var5 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main18 var4 var3 var0 var5 var1 ) (not (and (not (= var2 0 ) ) (<= 0 (+ 1000000 (* (- 1) var4 ) ) ) ) ) ) ) (inv_main28 var4 var3 var0 var5 var4 0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main18 var3 var2 var0 var5 var1 ) (and (not (= var4 0 ) ) (<= 0 (+ 1000000 (* (- 1) var3 ) ) ) ) ) ) (inv_main18 (+ var3 1 ) var2 var3 (+ var5 1 ) var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main8 var3 var2 var0 var5 var1 ) (and (<= 0 (+ (+ var3 (* (- 1) var2 ) ) (- 1) ) ) (not (and (not (= var4 0 ) ) (<= 0 (+ 1000000 (* (- 1) var3 ) ) ) ) ) ) ) ) (inv_main18 0 var3 var0 var5 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main8 var3 var2 var0 var5 var1 ) (and (not (<= 0 (+ (+ var3 (* (- 1) var2 ) ) (- 1) ) ) ) (not (and (not (= var4 0 ) ) (<= 0 (+ 1000000 (* (- 1) var3 ) ) ) ) ) ) ) ) (inv_main18 0 var2 var0 var5 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (not (and (inv_main28 var4 var2 var0 var5 var1 var3 ) (not (<= 0 var5 ) ) ) ) ) ) ) ) ) ) )
(check-sat)

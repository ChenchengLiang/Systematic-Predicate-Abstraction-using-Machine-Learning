(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main3 (Int Int Int Int) Bool)
(declare-fun inv_main4 (Int Int Int Int) Bool)
(declare-fun inv_main5 (Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (inv_main3 var3 var0 var2 var1 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (inv_main3 var2 var0 var1 var3 ) ) (inv_main4 0 0 0 0 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main4 var2 var0 var1 var3 ) (not (and (not (= var4 0 ) ) (<= 0 (+ (+ 10000 (* (- 1) var0 ) ) (- 1) ) ) ) ) ) ) (inv_main5 var2 var0 var1 var3 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main4 var4 var1 var3 var5 ) (and (not (= var0 0 ) ) (and (not (= var2 0 ) ) (<= 0 (+ (+ 10000 (* (- 1) var1 ) ) (- 1) ) ) ) ) ) ) (inv_main4 (+ var4 1 ) (+ var1 100 ) (+ var3 10 ) (+ var5 1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main4 var4 var1 var3 var5 ) (and (not (<= 0 (+ var4 (- 4) ) ) ) (and (not (= var6 0 ) ) (and (= var0 0 ) (and (not (= var2 0 ) ) (<= 0 (+ (+ 10000 (* (- 1) var1 ) ) (- 1) ) ) ) ) ) ) ) ) (inv_main4 var4 var1 (+ var3 10 ) (+ var5 1 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main4 var4 var1 var3 var5 ) (and (<= 0 (+ var4 (- 4) ) ) (and (not (= var6 0 ) ) (and (= var0 0 ) (and (not (= var2 0 ) ) (<= 0 (+ (+ 10000 (* (- 1) var1 ) ) (- 1) ) ) ) ) ) ) ) ) (inv_main4 (+ var4 1 ) (+ var1 1 ) (+ var3 10 ) (+ var5 1 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main4 var4 var1 var3 var5 ) (and (and (<= 0 (+ (+ var1 (* (- 10) var5 ) ) (- 1) ) ) (<= 0 (+ var3 (* (- 100) var4 ) ) ) ) (and (= var6 0 ) (and (= var0 0 ) (and (not (= var2 0 ) ) (<= 0 (+ (+ 10000 (* (- 1) var1 ) ) (- 1) ) ) ) ) ) ) ) ) (inv_main4 var4 (* (- 1) var1 ) (+ var3 10 ) (+ var5 1 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main4 var4 var1 var3 var5 ) (and (not (and (<= 0 (+ (+ var1 (* (- 10) var5 ) ) (- 1) ) ) (<= 0 (+ var3 (* (- 100) var4 ) ) ) ) ) (and (= var6 0 ) (and (= var0 0 ) (and (not (= var2 0 ) ) (<= 0 (+ (+ 10000 (* (- 1) var1 ) ) (- 1) ) ) ) ) ) ) ) ) (inv_main4 var4 var1 (+ var3 10 ) (+ var5 1 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main5 var2 var0 var1 var3 ) (or (not (<= 0 (+ var2 (- 4) ) ) ) (not (<= 0 (+ 2 (* (- 1) var0 ) ) ) ) ) ) ) ) ) ) ) )
(check-sat)

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main15 (Int Int Int Int Int) Bool)
(declare-fun inv_main16 (Int Int Int Int Int) Bool)
(declare-fun inv_main27 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main33 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main6 (Int Int Int Int Int) Bool)
(declare-fun inv_main7 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (inv_main6 var3 var1 var0 0 var2 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main6 var1 var3 var0 var2 var4 ) ) (inv_main7 0 var3 var0 var2 var4 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main27 var2 var4 var0 var3 var5 var1 ) (not (<= 0 var3 ) ) ) ) (inv_main33 var2 var4 var0 var3 var5 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main27 var2 var4 var0 var3 var5 var1 ) (and (<= 0 (+ (+ var5 (* (- 1) (+ var1 1 ) ) ) (- 1) ) ) (<= 0 var3 ) ) ) ) (inv_main27 (+ var2 (- 1) ) var4 var0 (+ var3 (- 1) ) var5 (+ var1 1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main33 var2 var4 var0 var3 var5 var1 ) (<= 0 (+ (+ var5 (* (- 1) (+ var1 1 ) ) ) (- 1) ) ) ) ) (inv_main27 (+ var2 (- 1) ) var4 var0 (+ var3 (- 1) ) var5 (+ var1 1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main7 var1 var4 var0 var3 var5 ) (not (= var2 0 ) ) ) ) (inv_main7 (+ var1 1 ) var4 var0 var3 var5 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main15 var1 var3 var0 var2 var4 ) (= var5 0 ) ) ) (inv_main16 var1 var3 var0 var2 var4 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main15 var2 var4 var0 var3 var5 ) (not (= var1 0 ) ) ) ) (inv_main15 (+ var2 1 ) var4 var2 (+ var3 1 ) var5 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main16 var1 var3 var0 var2 var5 ) (not (= var4 0 ) ) ) ) (inv_main16 var1 var3 var0 var2 var5 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main16 var1 var3 var0 var2 var5 ) (= var4 0 ) ) ) (inv_main27 var1 var3 var0 var2 var1 0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main7 var2 var4 var0 var3 var5 ) (and (<= 0 (+ (+ var2 (* (- 1) var4 ) ) (- 1) ) ) (= var1 0 ) ) ) ) (inv_main15 0 var2 var0 var3 var5 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main7 var2 var4 var0 var3 var5 ) (and (not (<= 0 (+ (+ var2 (* (- 1) var4 ) ) (- 1) ) ) ) (= var1 0 ) ) ) ) (inv_main15 0 var4 var0 var3 var5 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (not (inv_main33 var2 var4 var0 var3 var5 var1 ) ) ) ) ) ) ) ) )
(check-sat)

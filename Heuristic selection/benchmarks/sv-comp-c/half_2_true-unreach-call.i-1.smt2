(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main15 (Int Int Int Int) Bool)
(declare-fun inv_main3 (Int Int Int) Bool)
(declare-fun inv_main9 (Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (inv_main3 var1 var2 var0 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main15 var0 var2 var1 var3 ) (forall ((var4 Int)) (or (not (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var0 (* (- 2) var4 ) ) ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 (+ var0 (* (- 2) var4 ) ) ) ) (- 1) ) ) ) (or (not (<= 0 (+ (+ var0 (* (- 2) var4 ) ) (- 1) ) ) ) (<= 0 (+ var0 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) (+ var0 (* (- 2) var4 ) ) ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var0 ) (- 1) ) ) ) ) ) (<= 0 (+ (+ var4 (* (- 1) (+ var3 1 ) ) ) (- 1) ) ) ) ) ) ) (inv_main15 var0 var2 (+ var1 (- 1) ) (+ var3 1 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main3 var0 var2 var1 ) (<= 0 (+ 1000000 (* (- 1) var3 ) ) ) ) ) (inv_main9 var3 0 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main9 var0 var2 var1 ) (and (forall ((var3 Int)) (or (not (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var0 (* (- 2) var3 ) ) ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 (+ var0 (* (- 2) var3 ) ) ) ) (- 1) ) ) ) (or (not (<= 0 (+ (+ var0 (* (- 2) var3 ) ) (- 1) ) ) ) (<= 0 (+ var0 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) (+ var0 (* (- 2) var3 ) ) ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var0 ) (- 1) ) ) ) ) ) (<= 0 (+ var3 (- 1) ) ) ) ) (not (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) ) (inv_main15 var0 var2 var1 0 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main9 var0 var2 var1 ) (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) (inv_main9 var0 (+ var2 2 ) (+ var1 (- 1) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main15 var0 var2 var1 var3 ) (not (<= 0 (+ var1 (- 1) ) ) ) ) ) ) ) ) ) )
(check-sat)

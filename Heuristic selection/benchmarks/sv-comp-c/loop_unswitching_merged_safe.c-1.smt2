(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main12 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main15 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main2 () Bool)
(declare-fun inv_main20 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main6 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main7 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main8 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main9 (Int Int Int Int Int Int) Bool)
(assert inv_main2 )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main7 var1 var2 var3 var0 var4 var5 ) (not (<= 0 (+ var3 (- 1) ) ) ) ) ) (inv_main9 var1 var2 var3 var0 var4 var5 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (inv_main9 var1 var2 var3 var0 var4 var5 ) ) (inv_main6 var1 var2 var3 var0 var4 var5 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main8 var1 var2 var3 var0 var4 var5 ) (not (<= 0 (+ var3 (- 1) ) ) ) ) ) (inv_main12 var1 var2 var3 var0 var4 var5 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (inv_main12 var1 var2 var3 var0 var4 var5 ) ) (inv_main6 var1 var2 var3 var0 var4 var5 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main6 var1 var2 var3 var0 var4 var5 ) (not (<= 0 (+ var0 (- 1) ) ) ) ) ) (inv_main15 var1 var2 var3 var0 var4 var5 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (inv_main15 var1 var2 var3 var0 var4 var5 ) ) (inv_main20 var1 var2 var3 var0 var4 var5 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main7 var1 var2 var3 var0 var4 var5 ) (<= 0 (+ var3 (- 1) ) ) ) ) (inv_main7 var1 var2 (+ var3 (- 1) ) var0 (+ var4 1 ) var5 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main8 var1 var2 var3 var0 var4 var5 ) (<= 0 (+ var3 (- 1) ) ) ) ) (inv_main8 var1 var2 (+ var3 (- 1) ) var0 (+ var4 (- 1) ) var5 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main6 var1 var2 var3 var0 var4 var5 ) (and (<= 0 (+ var1 (- 1) ) ) (<= 0 (+ var0 (- 1) ) ) ) ) ) (inv_main6 var1 var2 var3 (+ var0 (- 1) ) var4 (+ var5 1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main6 var1 var2 var3 var0 var4 var5 ) (and (not (<= 0 (+ var1 (- 1) ) ) ) (<= 0 (+ var0 (- 1) ) ) ) ) ) (inv_main6 var1 var2 var3 (+ var0 (- 1) ) var4 (+ var5 (- 1) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (and inv_main2 (<= 0 (+ var0 (- 1) ) ) ) ) (inv_main7 var0 var1 var1 var1 0 0 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (and inv_main2 (not (<= 0 (+ var0 (- 1) ) ) ) ) ) (inv_main8 var0 var1 var1 var1 0 0 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (not (and (inv_main9 var1 var2 var3 var0 var4 var5 ) (and (not (<= 0 (* (- 1) var2 ) ) ) (not (= var4 var2 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (not (and (inv_main12 var1 var2 var3 var0 var4 var5 ) (and (not (<= 0 (* (- 1) var2 ) ) ) (not (= (+ var4 (* 1 var2 ) ) 0 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (not (and (inv_main15 var1 var2 var3 var0 var4 var5 ) (and (and (not (<= 0 (* (- 1) var2 ) ) ) (or (or (not (<= 0 (+ var2 (- 1) ) ) ) (not (<= 0 (+ var1 (- 1) ) ) ) ) (not (= var5 var2 ) ) ) ) (or (or (not (<= 0 (+ var2 (- 1) ) ) ) (not (<= 0 (* (- 1) var1 ) ) ) ) (not (= (+ var5 (* 1 var2 ) ) 0 ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (not (and (inv_main20 var1 var2 var3 var0 var4 var5 ) (not (= var4 var5 ) ) ) ) ) ) ) ) ) ) )
(check-sat)

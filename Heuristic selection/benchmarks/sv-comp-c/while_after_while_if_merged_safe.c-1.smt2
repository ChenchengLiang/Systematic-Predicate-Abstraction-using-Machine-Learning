(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main12 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main15 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main20 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main3 (Int Int) Bool)
(declare-fun inv_main7 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main8 (Int Int Int Int Int Int Int Int Int) Bool)
(assert (inv_main3 0 0 ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (or (not (and (inv_main8 var4 var7 var0 var8 var2 var1 var5 var6 var3 ) (not (<= 0 (+ var8 (- 1) ) ) ) ) ) (inv_main7 var4 var7 var0 var8 var2 var1 var5 var6 var3 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (or (not (and (inv_main7 var4 var7 var0 var8 var2 var1 var5 var6 var3 ) (not (<= 0 (+ var6 (- 1) ) ) ) ) ) (inv_main12 var4 var7 var0 var8 var2 var1 var5 var6 var3 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (or (not (and (inv_main12 var4 var7 var0 var8 var2 var1 var5 var6 var3 ) (not (<= 0 (+ var2 (- 1) ) ) ) ) ) (inv_main15 var4 var7 var0 var8 var2 var1 var5 var6 var3 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (or (not (and (inv_main15 var4 var7 var0 var8 var2 var1 var5 var6 var3 ) (not (<= 0 (+ var3 (- 1) ) ) ) ) ) (inv_main20 var4 var7 var0 var8 var2 var1 var5 var6 var3 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (or (not (and (inv_main8 var4 var7 var0 var8 var2 var1 var5 var6 var3 ) (<= 0 (+ var8 (- 1) ) ) ) ) (inv_main8 (+ var4 1 ) var7 var0 (+ var8 (- 1) ) var2 var1 var5 var6 var3 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (or (not (and (inv_main7 var4 var7 var0 var8 var2 var1 var5 var6 var3 ) (<= 0 (+ var6 (- 1) ) ) ) ) (inv_main7 (+ var4 2 ) var7 var0 var8 var2 var1 var5 (+ var6 (- 1) ) var3 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (or (not (and (inv_main15 var4 var7 var0 var8 var2 var1 var5 var6 var3 ) (<= 0 (+ var3 (- 1) ) ) ) ) (inv_main15 var4 (+ var7 2 ) var0 var8 var2 var1 var5 var6 (+ var3 (- 1) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (or (not (and (inv_main12 var4 var7 var0 var8 var2 var1 var5 var6 var3 ) (and (<= 0 (+ var1 (- 1) ) ) (<= 0 (+ var2 (- 1) ) ) ) ) ) (inv_main12 var4 (+ var7 1 ) var0 var8 (+ var2 (- 1) ) var1 var5 var6 var3 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (or (not (and (inv_main12 var4 var7 var0 var8 var2 var1 var5 var6 var3 ) (and (not (<= 0 (+ var1 (- 1) ) ) ) (<= 0 (+ var2 (- 1) ) ) ) ) ) (inv_main12 var4 var7 var0 var8 (+ var2 (- 1) ) var1 var5 var6 var3 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main3 var3 var4 ) (<= 0 (+ var1 (- 1) ) ) ) ) (inv_main8 var3 var4 var0 var0 var0 var1 var2 var2 var2 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main3 var1 var3 ) (not (<= 0 (+ var2 (- 1) ) ) ) ) ) (inv_main7 var1 var3 var0 var0 var0 var2 var4 var4 var4 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (not (and (inv_main20 var4 var7 var0 var8 var2 var1 var5 var6 var3 ) (not (= var4 var7 ) ) ) ) ) ) ) ) ) ) ) ) ) )
(check-sat)

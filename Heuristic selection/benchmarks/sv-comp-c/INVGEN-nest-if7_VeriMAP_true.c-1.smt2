(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main11 (Int Int Int Int Int) Bool)
(declare-fun inv_main14 (Int Int Int Int Int) Bool)
(declare-fun inv_main16 (Int Int Int Int Int) Bool)
(declare-fun inv_main3 (Int Int Int Int Int) Bool)
(declare-fun inv_main8 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (inv_main3 0 var0 var2 var1 var3 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main14 var1 var0 var4 var2 var3 ) ) (inv_main16 var1 var0 var4 var2 var3 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main8 var1 var0 var4 var2 var3 ) (<= 0 (+ (+ var3 (* (- 1) var4 ) ) (- 1) ) ) ) ) (inv_main11 var1 var0 var4 var4 var3 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main11 var1 var0 var4 var2 var3 ) (and (not (= var1 0 ) ) (<= 0 (+ (+ var3 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) (inv_main14 var1 var0 var4 var2 var3 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main11 var1 var0 var4 var2 var3 ) (not (<= 0 (+ (+ var3 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) (inv_main8 var1 var0 (+ var4 1 ) var2 var3 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main3 var1 var0 var4 var2 var3 ) (<= 0 (+ var3 (- 1) ) ) ) ) (inv_main8 var1 0 0 var2 var3 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main8 var1 var0 var4 var2 var3 ) (and (<= 0 (+ (+ var3 (* (- 1) (+ var0 1 ) ) ) (- 1) ) ) (not (<= 0 (+ (+ var3 (* (- 1) var4 ) ) (- 1) ) ) ) ) ) ) (inv_main8 var1 (+ var0 1 ) (+ var0 1 ) var2 var3 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main16 var1 var0 var4 var2 var3 ) ) (inv_main11 var1 var0 var4 (+ var2 1 ) var3 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main11 var1 var0 var4 var2 var3 ) (and (= var1 0 ) (<= 0 (+ (+ var3 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) (inv_main11 var1 var0 var4 (+ var2 1 ) var3 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main14 var1 var0 var4 var2 var3 ) (not (<= 0 (+ var2 (* (- 1) var4 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main16 var1 var0 var4 var2 var3 ) (not (<= 0 (+ var4 (* (- 1) var0 ) ) ) ) ) ) ) ) ) ) ) )
(check-sat)

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main23 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main27 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main3 (Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (inv_main3 0 var5 var4 var2 var1 var3 var0 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (or (not (and (inv_main3 var5 var3 var0 var4 var6 var9 var2 ) (and (<= 0 (+ var8 (- 1) ) ) (and (<= 0 (+ (+ var7 var1 ) (* (- 3) var8 ) ) ) (and (and (<= 0 (+ (+ var1 1000000 ) (- 1) ) ) (<= 0 (+ (+ 1000000 (* (- 1) var1 ) ) (- 1) ) ) ) (and (and (<= 0 (+ (+ var7 1000000 ) (- 1) ) ) (<= 0 (+ (+ 1000000 (* (- 1) var7 ) ) (- 1) ) ) ) (and (<= 0 (+ (+ var8 1000000 ) (- 1) ) ) (<= 0 (+ (+ 1000000 (* (- 1) var8 ) ) (- 1) ) ) ) ) ) ) ) ) ) (inv_main23 var5 0 0 var4 var8 var1 var7 ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main23 var4 var2 var0 var3 var5 var6 var1 ) (and (<= 0 (+ (+ var5 (* (- 1) (+ var2 1 ) ) ) (- 1) ) ) (not (<= 0 (+ (+ (* 3 var2 ) (* (- 1) var0 ) ) (- 1) ) ) ) ) ) ) (inv_main23 var4 (+ var2 1 ) (* 2 (+ var2 1 ) ) var3 var5 var6 var1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main23 var4 var2 var0 var3 var5 var6 var1 ) (and (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) (<= 0 (+ (+ (* 3 var2 ) (* (- 1) var0 ) ) (- 1) ) ) ) ) ) (inv_main27 var4 var2 var0 var2 var5 var6 var1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main23 var4 var2 var0 var3 var5 var6 var1 ) (and (not (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) (<= 0 (+ (+ (* 3 var2 ) (* (- 1) var0 ) ) (- 1) ) ) ) ) ) (inv_main23 var4 var2 (+ var0 1 ) var2 var5 var6 var1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main27 var4 var2 var0 var3 var5 var6 var1 ) (<= 0 (+ (+ var0 (* (- 1) (+ var3 1 ) ) ) (- 1) ) ) ) ) (inv_main27 var4 var2 var0 (+ var3 1 ) var5 var6 var1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main27 var4 var2 var0 var3 var5 var6 var1 ) (not (<= 0 (+ (+ var0 (* (- 1) (+ var3 1 ) ) ) (- 1) ) ) ) ) ) (inv_main23 var4 var2 (+ var0 1 ) (+ var3 1 ) var5 var6 var1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (not (and (inv_main27 var4 var2 var0 var3 var5 var6 var1 ) (not (<= 0 (+ (* 2 var5 ) (* (- 1) (+ var3 (* (- 1) var2 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
(check-sat)

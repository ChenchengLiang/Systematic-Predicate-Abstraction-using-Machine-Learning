(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main22 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main31 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main7 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (inv_main7 var0 0 0 0 0 ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main22 var1 var7 var2 var4 var5 var3 var6 ) (and (not (= var0 0 ) ) (<= 0 (+ var3 (* (- 1) var6 ) ) ) ) ) ) (inv_main22 var1 var7 var2 var4 var5 var3 (+ var6 1 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main22 var1 var7 var2 var4 var5 var3 var6 ) (and (= var0 0 ) (<= 0 (+ var3 (* (- 1) var6 ) ) ) ) ) ) (inv_main22 var1 var7 var2 var4 var5 var3 (+ var6 2 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main22 var0 var6 var1 var3 var4 var2 var5 ) (and (not (<= 0 (+ 4 (* (- 1) var5 ) ) ) ) (not (<= 0 (+ var2 (* (- 1) var5 ) ) ) ) ) ) ) (inv_main31 var0 var6 var1 var3 var4 var2 var5 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main7 var0 var5 var1 var3 var4 ) (and (not (= var0 0 ) ) (= var2 0 ) ) ) ) (inv_main22 var0 var5 var1 var3 var4 (+ (+ var5 (* (- 2) var1 ) ) 2 ) 0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main7 var0 var5 var1 var3 var4 ) (and (= var0 0 ) (= var2 0 ) ) ) ) (inv_main22 var0 var5 var1 var3 var4 1 0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main7 var0 var5 var1 var2 var3 ) (and (not (= var0 0 ) ) (not (= var4 0 ) ) ) ) ) (inv_main7 var0 (+ (+ var5 (+ var3 1 ) ) (+ var2 1 ) ) (+ var1 (+ var2 1 ) ) (+ var2 1 ) (+ var3 1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main7 var0 var5 var1 var2 var3 ) (and (= var0 0 ) (not (= var4 0 ) ) ) ) ) (inv_main7 var0 (+ var5 (+ var3 1 ) ) (+ var1 (+ var2 1 ) ) (+ var2 1 ) (+ var3 1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (not (inv_main31 var0 var6 var1 var3 var4 var2 var5 ) ) ) ) ) ) ) ) ) )
(check-sat)

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main12 (Int Int Int Int Int) Bool)
(declare-fun inv_main18 (Int Int Int Int Int) Bool)
(declare-fun inv_main4 (Int Int) Bool)
(declare-fun inv_main5 (Int Int Int) Bool)
(assert (forall ((var0 Int)) (inv_main4 var0 0 ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (inv_main4 var1 var0 ) ) (inv_main5 var1 var0 var1 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main18 var4 var0 var1 var2 var3 ) ) (inv_main12 var4 var0 var1 var2 var3 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main12 var4 var0 var1 var2 var3 ) (and (not (<= 0 (+ var3 (- 1) ) ) ) (not (<= 0 (+ var1 (- 1) ) ) ) ) ) ) (inv_main18 var4 var0 var1 var2 var3 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main12 var4 var0 var1 var2 var3 ) (and (<= 0 (+ var3 (- 1) ) ) (not (<= 0 (+ var1 (- 1) ) ) ) ) ) ) (inv_main18 var4 var0 var1 (+ var2 var4 ) (+ var3 (- 1) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main12 var4 var0 var1 var2 var3 ) (and (not (<= 0 (+ var3 (- 1) ) ) ) (<= 0 (+ var1 (- 1) ) ) ) ) ) (inv_main18 var4 (+ var0 var4 ) (+ var1 (- 1) ) var2 var3 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main12 var4 var0 var1 var2 var3 ) (and (<= 0 (+ var3 (- 1) ) ) (<= 0 (+ var1 (- 1) ) ) ) ) ) (inv_main18 var4 (+ var0 var4 ) (+ var1 (- 1) ) (+ var2 var4 ) (+ var3 (- 1) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main5 var2 var0 var1 ) (<= 0 (+ var1 (- 1) ) ) ) ) (inv_main5 var2 (+ var0 var2 ) (+ var1 (- 1) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (or (not (and (inv_main5 var2 var0 var1 ) (not (<= 0 (+ var1 (- 1) ) ) ) ) ) (inv_main12 var2 0 var2 0 var2 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main18 var4 var0 var1 var2 var3 ) (not (= var0 var2 ) ) ) ) ) ) ) ) ) )
(check-sat)

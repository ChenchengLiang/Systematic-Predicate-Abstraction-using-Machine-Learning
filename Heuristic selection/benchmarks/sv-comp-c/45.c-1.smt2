(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main23 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main25 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main40 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main8 (Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (inv_main8 var0 0 0 0 0 0 1 ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (or (not (and (inv_main23 var9 var7 var4 var8 var2 var1 var6 var3 var0 ) (not (= var5 0 ) ) ) ) (inv_main25 var9 var7 var4 var8 var2 var1 var6 var3 var0 ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (or (not (and (inv_main25 var9 var7 var5 var8 var2 var1 var6 var4 var0 ) (= var3 0 ) ) ) (inv_main23 var9 var7 var5 var8 var2 var1 var6 (+ (+ var7 var5 ) 1 ) (+ var7 var5 ) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (or (not (and (inv_main23 var9 var7 var5 var8 var2 var1 var6 var3 var0 ) (and (not (= var7 var5 ) ) (= var4 0 ) ) ) ) (inv_main40 var9 var7 var5 var8 var2 var1 var6 var3 var0 ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (or (not (and (inv_main25 var9 var6 var4 var7 var2 var1 var5 var3 var0 ) (and (forall ((var10 Int)) (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var10 ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 var10 ) ) (- 1) ) ) ) (or (not (<= 0 (+ var10 (- 1) ) ) ) (<= 0 (+ var0 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) var10 ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var0 ) (- 1) ) ) ) ) (exists ((var11 Int)) (= var0 (+ (* 2 var11 ) var10 ) ) ) ) ) (= var10 0 ) ) ) (and (forall ((var10 Int)) (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var10 ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 var10 ) ) (- 1) ) ) ) (or (not (<= 0 (+ var10 (- 1) ) ) ) (<= 0 (+ var3 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) var10 ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var3 ) (- 1) ) ) ) ) (exists ((var11 Int)) (= var3 (+ (* 2 var11 ) var10 ) ) ) ) ) (= var10 1 ) ) ) (not (= var8 0 ) ) ) ) ) ) (inv_main25 var9 (+ var6 1 ) (+ var4 1 ) var7 var2 var1 var5 var3 var0 ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (or (not (and (inv_main25 var9 var6 var4 var7 var2 var1 var5 var3 var0 ) (and (not (exists ((var10 Int)) (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var10 ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 var10 ) ) (- 1) ) ) ) (or (not (<= 0 (+ var10 (- 1) ) ) ) (<= 0 (+ var0 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) var10 ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var0 ) (- 1) ) ) ) ) (exists ((var11 Int)) (= var0 (+ (* 2 var11 ) var10 ) ) ) ) (= var10 0 ) ) ) ) (and (forall ((var10 Int)) (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var10 ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 var10 ) ) (- 1) ) ) ) (or (not (<= 0 (+ var10 (- 1) ) ) ) (<= 0 (+ var3 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) var10 ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var3 ) (- 1) ) ) ) ) (exists ((var11 Int)) (= var3 (+ (* 2 var11 ) var10 ) ) ) ) ) (= var10 1 ) ) ) (not (= var8 0 ) ) ) ) ) ) (inv_main25 var9 (+ var6 1 ) var4 var7 var2 var1 var5 var3 var0 ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (or (not (and (inv_main25 var9 var6 var4 var7 var2 var1 var5 var3 var0 ) (and (forall ((var10 Int)) (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var10 ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 var10 ) ) (- 1) ) ) ) (or (not (<= 0 (+ var10 (- 1) ) ) ) (<= 0 (+ var0 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) var10 ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var0 ) (- 1) ) ) ) ) (exists ((var11 Int)) (= var0 (+ (* 2 var11 ) var10 ) ) ) ) ) (= var10 0 ) ) ) (and (not (exists ((var10 Int)) (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var10 ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 var10 ) ) (- 1) ) ) ) (or (not (<= 0 (+ var10 (- 1) ) ) ) (<= 0 (+ var3 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) var10 ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var3 ) (- 1) ) ) ) ) (exists ((var11 Int)) (= var3 (+ (* 2 var11 ) var10 ) ) ) ) (= var10 1 ) ) ) ) (not (= var8 0 ) ) ) ) ) ) (inv_main25 var9 var6 (+ var4 1 ) var7 var2 var1 var5 var3 var0 ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (or (not (and (inv_main25 var9 var6 var4 var7 var2 var1 var5 var3 var0 ) (and (not (exists ((var10 Int)) (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var10 ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 var10 ) ) (- 1) ) ) ) (or (not (<= 0 (+ var10 (- 1) ) ) ) (<= 0 (+ var0 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) var10 ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var0 ) (- 1) ) ) ) ) (exists ((var11 Int)) (= var0 (+ (* 2 var11 ) var10 ) ) ) ) (= var10 0 ) ) ) ) (and (not (exists ((var10 Int)) (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var10 ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 var10 ) ) (- 1) ) ) ) (or (not (<= 0 (+ var10 (- 1) ) ) ) (<= 0 (+ var3 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) var10 ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var3 ) (- 1) ) ) ) ) (exists ((var11 Int)) (= var3 (+ (* 2 var11 ) var10 ) ) ) ) (= var10 1 ) ) ) ) (not (= var8 0 ) ) ) ) ) ) (inv_main25 var9 var6 var4 var7 var2 var1 var5 var3 var0 ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main8 var7 var4 var2 var5 var1 var0 var3 ) (and (not (= var7 0 ) ) (not (= var6 0 ) ) ) ) ) (inv_main8 var7 (+ var4 1 ) (+ var2 1 ) (+ (+ var5 (+ var2 1 ) ) 1 ) (+ var1 (+ var4 1 ) ) var0 var3 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main8 var7 var4 var2 var5 var1 var0 var3 ) (and (= var7 0 ) (not (= var6 0 ) ) ) ) ) (inv_main8 var7 (+ var4 1 ) (+ var2 1 ) (+ var5 (+ var2 1 ) ) (+ var1 (+ var4 1 ) ) var0 var3 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main8 var7 var4 var2 var5 var1 var0 var3 ) (and (<= 0 (+ var5 (* (- 1) var1 ) ) ) (= var6 0 ) ) ) ) (inv_main23 var7 var2 var2 var5 var1 var0 var3 1 0 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main8 var7 var4 var2 var5 var1 var0 var3 ) (and (not (<= 0 (+ var5 (* (- 1) var1 ) ) ) ) (= var6 0 ) ) ) ) (inv_main23 var7 (+ var2 1 ) var2 var5 var1 var0 var3 1 0 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (not (inv_main40 var8 var6 var4 var7 var2 var1 var5 var3 var0 ) ) ) ) ) ) ) ) ) ) ) )
(check-sat)

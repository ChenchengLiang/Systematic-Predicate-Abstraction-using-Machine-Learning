(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main16 (Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main22 (Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main36 (Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main49 (Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main9 (Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (inv_main9 var0 0 0 0 0 0 0 0 ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (forall ((var10 Int)) (or (not (and (inv_main16 var6 var10 var1 var0 var3 var9 var4 var5 var8 var7 var2 ) (<= 0 (+ (+ var7 (* (- 1) var8 ) ) (- 1) ) ) ) ) (inv_main16 var6 var10 var1 var0 var3 var9 var4 var5 (+ var8 1 ) var7 (+ var2 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (forall ((var10 Int)) (or (not (and (inv_main16 var6 var10 var1 var0 var3 var9 var4 var5 var8 var7 var2 ) (and (not (exists ((var11 Int)) (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var11 ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 var11 ) ) (- 1) ) ) ) (or (not (<= 0 (+ var11 (- 1) ) ) ) (<= 0 (+ var9 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) var11 ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var9 ) (- 1) ) ) ) ) (exists ((var12 Int)) (= var9 (+ (* 2 var12 ) var11 ) ) ) ) (= var11 1 ) ) ) ) (not (<= 0 (+ (+ var7 (* (- 1) var8 ) ) (- 1) ) ) ) ) ) ) (inv_main22 var6 var10 var1 var9 var2 var9 var4 var5 var8 var7 var2 ) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (forall ((var10 Int)) (or (not (and (inv_main16 var6 var10 var1 var0 var3 var9 var4 var5 var8 var7 var2 ) (and (forall ((var11 Int)) (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var11 ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 var11 ) ) (- 1) ) ) ) (or (not (<= 0 (+ var11 (- 1) ) ) ) (<= 0 (+ var9 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) var11 ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var9 ) (- 1) ) ) ) ) (exists ((var12 Int)) (= var9 (+ (* 2 var12 ) var11 ) ) ) ) ) (= var11 1 ) ) ) (not (<= 0 (+ (+ var7 (* (- 1) var8 ) ) (- 1) ) ) ) ) ) ) (inv_main22 var6 var10 var1 (+ var9 1 ) (+ var2 (- 1) ) var9 var4 var5 var8 var7 var2 ) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (forall ((var10 Int)) (forall ((var11 Int)) (or (not (and (inv_main22 var6 var11 var1 var0 var3 var10 var4 var5 var8 var7 var2 ) (and (forall ((var12 Int)) (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var12 ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 var12 ) ) (- 1) ) ) ) (or (not (<= 0 (+ var12 (- 1) ) ) ) (<= 0 (+ var0 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) var12 ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var0 ) (- 1) ) ) ) ) (exists ((var13 Int)) (= var0 (+ (* 2 var13 ) var12 ) ) ) ) ) (= var12 0 ) ) ) (not (= var9 0 ) ) ) ) ) (inv_main22 var6 var11 var1 (+ var0 2 ) (+ var3 (- 2) ) var10 var4 var5 var8 var7 var2 ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (forall ((var10 Int)) (forall ((var11 Int)) (or (not (and (inv_main22 var6 var11 var1 var0 var3 var10 var4 var5 var8 var7 var2 ) (and (not (exists ((var12 Int)) (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var12 ) ) (- 1) ) ) (<= 0 (+ (+ 2 (* 1 var12 ) ) (- 1) ) ) ) (or (not (<= 0 (+ var12 (- 1) ) ) ) (<= 0 (+ var0 (- 1) ) ) ) ) (or (not (<= 0 (+ (* (- 1) var12 ) (- 1) ) ) ) (<= 0 (+ (* (- 1) var0 ) (- 1) ) ) ) ) (exists ((var13 Int)) (= var0 (+ (* 2 var13 ) var12 ) ) ) ) (= var12 0 ) ) ) ) (not (= var9 0 ) ) ) ) ) (inv_main22 var6 var11 var1 (+ var0 (- 1) ) (+ var3 (- 1) ) var10 var4 var5 var8 var7 var2 ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (forall ((var10 Int)) (forall ((var11 Int)) (or (not (and (inv_main22 var7 var11 var1 var0 var4 var10 var5 var6 var9 var8 var3 ) (= var2 0 ) ) ) (inv_main9 var7 var11 var1 var0 var4 (+ var10 1 ) var5 (+ (+ var0 var4 ) 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (forall ((var10 Int)) (or (not (and (inv_main36 var8 var10 var2 var1 var3 var9 var4 var6 var0 var7 ) (and (not (= var8 0 ) ) (not (= var5 0 ) ) ) ) ) (inv_main36 var8 (+ var10 1 ) (+ var2 1 ) var1 var3 var9 var4 var6 (+ var0 1 ) (+ var7 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (forall ((var10 Int)) (or (not (and (inv_main36 var8 var10 var2 var1 var3 var9 var4 var6 var0 var7 ) (and (= var8 0 ) (not (= var5 0 ) ) ) ) ) (inv_main36 var8 (+ var10 (+ var0 1 ) ) (+ var2 (+ var7 1 ) ) var1 var3 var9 var4 var6 (+ var0 1 ) (+ var7 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (forall ((var10 Int)) (or (not (and (inv_main36 var7 var10 var2 var1 var3 var9 var4 var5 var0 var6 ) (and (not (and (<= 0 (+ var5 (* (- 1) var9 ) ) ) (= var10 var2 ) ) ) (= var8 0 ) ) ) ) (inv_main49 var7 var10 var2 var1 var3 var9 var4 var5 var0 var6 ) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (or (not (and (inv_main9 var6 var8 var1 var0 var3 var7 var4 var5 ) (not (= var2 0 ) ) ) ) (inv_main16 var6 var8 var1 var0 var3 var7 var4 var5 var7 var5 0 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (or (not (and (inv_main9 var5 var8 var1 var0 var2 var7 var3 var4 ) (= var6 0 ) ) ) (inv_main36 var5 var8 var1 var0 var2 var7 var3 var4 0 0 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (not (inv_main49 var7 var9 var2 var1 var3 var8 var4 var5 var0 var6 ) ) ) ) ) ) ) ) ) ) ) ) )
(check-sat)

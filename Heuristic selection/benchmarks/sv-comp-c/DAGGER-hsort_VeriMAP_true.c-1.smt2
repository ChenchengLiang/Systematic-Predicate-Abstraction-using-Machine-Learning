(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main23 (Int Int Int Int Int) Bool)
(declare-fun inv_main26 (Int Int Int Int Int) Bool)
(declare-fun inv_main7 (Int Int Int Int Int) Bool)
(declare-fun inv_main74 (Int Int Int Int Int) Bool)
(declare-fun inv_main75 (Int Int Int Int Int) Bool)
(declare-fun inv_main76 (Int Int Int Int Int) Bool)
(declare-fun inv_main77 (Int Int Int Int Int) Bool)
(declare-fun inv_main78 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (inv_main7 var0 var1 var4 var2 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main26 var1 var4 var3 var2 var0 ) ) (inv_main74 var1 var4 var3 var2 var0 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main74 var1 var4 var3 var2 var0 ) ) (inv_main75 var1 var4 var3 var2 var0 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main75 var1 var4 var3 var2 var0 ) ) (inv_main76 var1 var4 var3 var2 var0 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main76 var1 var4 var3 var2 var0 ) ) (inv_main77 var1 var4 var3 var2 var0 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (inv_main77 var1 var4 var3 var2 var0 ) ) (inv_main78 var1 var4 var3 var2 var0 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main7 var1 var4 var3 var2 var0 ) (and (<= 0 (* (- 1) (+ (+ (* 2 var4 ) (* (- 1) var1 ) ) (- 1) ) ) ) (and (<= 0 (+ (* 2 var4 ) (* (- 1) var1 ) ) ) (and (= (+ var0 (* (- 2) var4 ) ) 0 ) (and (= var2 var4 ) (and (= var3 var1 ) (<= 0 (+ var1 (- 2) ) ) ) ) ) ) ) ) ) (inv_main23 var1 var4 var3 var2 var0 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main23 var2 var5 var4 var3 var1 ) (= var0 0 ) ) ) (inv_main26 var2 var5 var4 var3 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main23 var1 var5 var4 var3 var0 ) (and (<= 0 (+ (+ var4 (* (- 1) var0 ) ) (- 1) ) ) (and (not (= var2 0 ) ) (not (= var6 0 ) ) ) ) ) ) (inv_main23 var1 var5 var4 (+ var0 1 ) (+ (* 2 var0 ) 2 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main23 var1 var4 var3 var2 var0 ) (and (<= 0 (* (- 1) (+ var0 (* (- 1) var3 ) ) ) ) (and (not (= var5 0 ) ) (and (= var7 0 ) (not (= var6 0 ) ) ) ) ) ) ) (inv_main23 var1 var4 var3 var0 (* 2 var0 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (or (not (and (inv_main23 var2 var5 var4 var3 var1 ) (and (<= 0 (+ var4 (- 2) ) ) (and (<= 0 (+ var5 (- 2) ) ) (and (not (= var0 0 ) ) (and (= var7 0 ) (and (= var8 0 ) (not (= var6 0 ) ) ) ) ) ) ) ) ) (inv_main23 var2 (+ var5 (- 1) ) var4 (+ var5 (- 1) ) (+ (* 2 var5 ) (- 2) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (or (not (and (inv_main23 var1 var4 var3 var2 var0 ) (and (<= 0 (+ (+ var3 (- 1) ) (- 3) ) ) (and (<= 0 (+ 1 (* (- 1) var4 ) ) ) (and (= var5 0 ) (and (= var7 0 ) (and (= var8 0 ) (not (= var6 0 ) ) ) ) ) ) ) ) ) (inv_main23 var1 var4 (+ var3 (- 1) ) var4 (* 2 var4 ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main26 var1 var4 var3 var2 var0 ) (not (<= 0 (+ (* 2 var2 ) (* (- 1) var0 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main74 var1 var4 var3 var2 var0 ) (not (<= 0 (* (- 1) (+ (* 2 var2 ) (* (- 1) var0 ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main75 var1 var4 var3 var2 var0 ) (not (<= 0 (+ (+ (* (- 2) var4 ) var3 ) 1 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main76 var1 var4 var3 var2 var0 ) (not (<= 0 (+ var3 (- 2) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main77 var1 var4 var3 var2 var0 ) (not (<= 0 (+ var4 (- 1) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (inv_main78 var1 var4 var3 var2 var0 ) (not (<= 0 (+ var1 (* (- 1) var3 ) ) ) ) ) ) ) ) ) ) ) )
(check-sat)

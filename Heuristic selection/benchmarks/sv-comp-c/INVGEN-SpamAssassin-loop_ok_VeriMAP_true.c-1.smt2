(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main12 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main16 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main6 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (inv_main6 0 var1 var0 var2 var3 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main12 var5 var4 var2 var3 var0 var1 ) (and (not (<= 0 (+ (+ var4 (* (- 1) (+ var2 1 ) ) ) (- 1) ) ) ) (and (<= 0 (+ (+ var4 (* (- 1) var2 ) ) (- 1) ) ) (<= 0 (+ (+ var1 (* (- 1) var3 ) ) (- 1) ) ) ) ) ) ) (inv_main16 var5 var4 var2 var3 var0 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main12 var5 var4 var2 var3 var0 var1 ) (and (not (= var5 0 ) ) (and (<= 0 (+ (+ var4 (* (- 1) (+ var2 1 ) ) ) (- 1) ) ) (and (<= 0 (+ (+ var4 (* (- 1) var2 ) ) (- 1) ) ) (<= 0 (+ (+ var1 (* (- 1) var3 ) ) (- 1) ) ) ) ) ) ) ) (inv_main16 var5 var4 var2 var3 var0 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main6 var4 var3 var1 var2 var0 ) (<= 0 (+ var3 (- 1) ) ) ) ) (inv_main12 var4 var3 0 0 var0 (+ var0 (- 4) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main12 var5 var4 var2 var3 var0 var1 ) (and (<= 0 (+ (+ var4 (* (- 1) var2 ) ) (- 1) ) ) (not (and (<= 0 (+ (+ var4 (* (- 1) var2 ) ) (- 1) ) ) (<= 0 (+ (+ var1 (* (- 1) var3 ) ) (- 1) ) ) ) ) ) ) ) (inv_main12 var5 var4 var2 0 var0 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main12 var5 var4 var2 var3 var0 var1 ) (and (= var5 0 ) (and (<= 0 (+ (+ var4 (* (- 1) (+ var2 1 ) ) ) (- 1) ) ) (and (<= 0 (+ (+ var4 (* (- 1) var2 ) ) (- 1) ) ) (<= 0 (+ (+ var1 (* (- 1) var3 ) ) (- 1) ) ) ) ) ) ) ) (inv_main12 var5 var4 (+ (+ var2 1 ) 1 ) (+ (+ (+ var3 1 ) 1 ) 1 ) var0 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (inv_main16 var5 var4 var2 var3 var0 var1 ) ) (inv_main12 var5 var4 (+ var2 1 ) (+ var3 1 ) var0 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (not (and (inv_main16 var5 var4 var2 var3 var0 var1 ) (not (<= 0 var2 ) ) ) ) ) ) ) ) ) ) )
(check-sat)

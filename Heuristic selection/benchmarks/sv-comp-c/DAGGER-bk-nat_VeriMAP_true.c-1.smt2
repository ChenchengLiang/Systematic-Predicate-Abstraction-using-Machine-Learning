(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main16 (Int Int Int Int) Bool)
(declare-fun inv_main19 (Int Int Int Int) Bool)
(declare-fun inv_main55 (Int Int Int Int) Bool)
(declare-fun inv_main56 (Int Int Int Int) Bool)
(declare-fun inv_main57 (Int Int Int Int) Bool)
(declare-fun inv_main58 (Int Int Int Int) Bool)
(declare-fun inv_main6 (Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (inv_main6 var0 var3 var1 var2 ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (inv_main19 var2 var0 var1 var3 ) ) (inv_main55 var2 var0 var1 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (inv_main55 var2 var0 var1 var3 ) ) (inv_main56 var2 var0 var1 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (inv_main56 var2 var0 var1 var3 ) ) (inv_main57 var2 var0 var1 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (inv_main57 var2 var0 var1 var3 ) ) (inv_main58 var2 var0 var1 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and (inv_main6 var2 var0 var1 var3 ) (and (<= 0 (+ var2 (- 1) ) ) (and (= var0 0 ) (and (= var1 0 ) (= var3 0 ) ) ) ) ) ) (inv_main16 var2 var0 var1 var3 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (or (not (and (inv_main16 var3 var0 var1 var4 ) (= var2 0 ) ) ) (inv_main19 var3 var0 var1 var4 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main16 var4 var0 var2 var5 ) (and (<= 0 (+ var4 (- 1) ) ) (and (not (= var3 0 ) ) (not (= var1 0 ) ) ) ) ) ) (inv_main16 (+ var4 (- 1) ) (+ var0 1 ) (+ var2 var5 ) 0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main16 var5 var0 var3 var6 ) (and (<= 0 (+ (+ var3 var0 ) (- 1) ) ) (and (not (= var2 0 ) ) (and (= var4 0 ) (not (= var1 0 ) ) ) ) ) ) ) (inv_main16 (+ (+ (+ var5 var0 ) var3 ) (- 1) ) 0 0 (+ var6 1 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main16 var4 var0 var2 var6 ) (and (<= 0 (+ var4 (- 1) ) ) (and (= var5 0 ) (and (= var3 0 ) (not (= var1 0 ) ) ) ) ) ) ) (inv_main16 (+ (+ var4 1 ) (- 1) ) 0 0 1 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main19 var2 var0 var1 var3 ) (not (<= 0 var3 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main55 var2 var0 var1 var3 ) (not (<= 0 var1 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main56 var2 var0 var1 var3 ) (not (<= 0 var0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main57 var2 var0 var1 var3 ) (not (<= 0 var2 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main58 var2 var0 var1 var3 ) (not (<= 0 (+ (+ (+ var2 var0 ) var3 ) (- 1) ) ) ) ) ) ) ) ) ) )
(check-sat)

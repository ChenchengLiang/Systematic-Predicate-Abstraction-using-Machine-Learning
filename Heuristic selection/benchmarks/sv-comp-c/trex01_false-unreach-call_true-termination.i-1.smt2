(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main18 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main19 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main2 () Bool)
(declare-fun inv_main21 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main41 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main42 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main44 (Int Int Int Int Int Int) Bool)
(assert inv_main2 )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main18 var4 var5 var1 var3 var0 var2 ) (not (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) (inv_main19 var4 var5 var1 var3 var0 var2 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (inv_main19 var4 var5 var1 var3 var0 var2 ) ) (inv_main21 var4 var5 var1 var3 var0 var2 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main41 var4 var3 var2 var1 var5 var0 ) (not (<= 0 (+ (+ var5 (* (- 1) var0 ) ) (- 1) ) ) ) ) ) (inv_main42 var4 var3 var2 var1 var5 var0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (inv_main42 var4 var3 var2 var1 var5 var0 ) ) (inv_main44 var4 var3 var2 var1 var5 var0 ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main18 var4 var5 var1 var3 var0 var2 ) (<= 0 (+ (+ var0 (* (- 1) var2 ) ) (- 1) ) ) ) ) (inv_main18 var4 var5 var1 var3 var0 (* 2 var2 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main21 var5 var6 var1 var4 var0 var3 ) (and (= var2 0 ) (and (<= 0 (+ var1 (- 1) ) ) (<= 0 (+ var4 (- 1) ) ) ) ) ) ) (inv_main21 var5 var6 var1 (+ var4 (* (- 1) var6 ) ) var0 var3 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main21 var5 var7 var1 var4 var0 var3 ) (and (not (= var6 0 ) ) (and (<= 0 (+ var1 (- 1) ) ) (<= 0 (+ var4 (- 1) ) ) ) ) ) ) (inv_main21 var5 var7 (+ var1 (* (- 1) var7 ) ) var2 var0 (+ var3 (- 1) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (or (not (and (inv_main41 var4 var3 var2 var1 var5 var0 ) (<= 0 (+ (+ var5 (* (- 1) var0 ) ) (- 1) ) ) ) ) (inv_main41 var4 var3 var2 var1 var5 (* 2 var0 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main44 var5 var4 var3 var1 var6 var0 ) (and (= var2 0 ) (and (<= 0 (+ var3 (- 1) ) ) (<= 0 (+ var1 (- 1) ) ) ) ) ) ) (inv_main44 var5 var4 var3 (+ var1 (* (- 1) var4 ) ) var6 var0 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main44 var6 var5 var3 var2 var7 var1 ) (and (not (= var4 0 ) ) (and (<= 0 (+ var3 (- 1) ) ) (<= 0 (+ var2 (- 1) ) ) ) ) ) ) (inv_main44 var6 var5 (+ var3 (* (- 1) var5 ) ) var0 var7 (+ var1 (- 1) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and inv_main2 (not (= var3 0 ) ) ) ) (inv_main18 var3 1 var0 var2 var1 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (or (not (and inv_main2 (= var0 0 ) ) ) (inv_main41 var0 2 var3 var2 var1 1 ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (not (and (inv_main19 var4 var5 var1 var3 var0 var2 ) (not (<= 0 (+ var2 (- 2) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (not (and (inv_main42 var4 var3 var2 var1 var5 var0 ) (not (<= 0 (+ var0 (- 2) ) ) ) ) ) ) ) ) ) ) ) )
(check-sat)

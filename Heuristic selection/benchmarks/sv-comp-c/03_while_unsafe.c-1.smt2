(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main12 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main26 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main3 (Int Int) Bool)
(declare-fun inv_main31 (Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (inv_main3 var0 var1 ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main26 var7 var0 var2 var4 var1 var6 var3 var5 ) (<= 0 (+ (+ var4 (* (- 1) var6 ) ) (- 1) ) ) ) ) (inv_main26 var7 var0 var2 var4 var1 (+ var6 1 ) (+ var3 5 ) (+ var5 var3 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main12 var5 var0 var1 var4 var2 var3 var6 ) (<= 0 (+ (+ var1 (* (- 1) var2 ) ) (- 1) ) ) ) ) (inv_main12 var5 var0 var1 var4 (+ var2 1 ) (+ (* 5 var2 ) var4 ) (+ var6 (+ (* 5 var2 ) var4 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (or (not (inv_main3 var1 var0 ) ) (inv_main12 var1 var0 var1 var0 0 0 0 ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (or (not (and (inv_main26 var7 var0 var2 var4 var1 var6 var3 var5 ) (not (<= 0 (+ (+ var4 (* (- 1) var6 ) ) (- 1) ) ) ) ) ) (inv_main31 var7 var0 var2 var5 ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (or (not (and (inv_main12 var5 var0 var1 var4 var2 var3 var6 ) (not (<= 0 (+ (+ var1 (* (- 1) var2 ) ) (- 1) ) ) ) ) ) (inv_main26 var5 var0 var6 var5 var0 0 0 0 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (inv_main31 var2 var0 var1 var3 ) (not (= var1 var3 ) ) ) ) ) ) ) ) )
(check-sat)

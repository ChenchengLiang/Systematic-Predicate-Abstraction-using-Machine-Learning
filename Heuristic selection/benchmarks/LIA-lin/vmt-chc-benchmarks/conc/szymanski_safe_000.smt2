(set-logic HORN)

(declare-fun |state| ( Bool Bool Bool Bool Int Bool Bool Bool Bool Int ) Bool)

(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Bool) (E Bool) (F Bool) (G Bool) (H Bool) (I Bool) (J Int) ) 
    (=>
      (and
        (and (= A 0)
     (or (not H) (not I))
     (or (not D) (not E))
     (not I)
     (not H)
     (not G)
     (not F)
     (not E)
     (not D)
     (not C)
     (not B)
     (= J 0))
      )
      (state E D I H J G F C B A)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Bool) (D Int) (E Bool) (F Bool) (G Bool) (H Bool) (I Bool) (J Bool) (K Int) (L Bool) (M Int) (N Bool) (O Bool) (P Bool) (Q Bool) (R Bool) (S Bool) (T Bool) (U Bool) (V Int) ) 
    (=>
      (and
        (state Q P U T V S R O N M)
        (let ((a!1 (and (or (and (not F) (not C) (not B) A) (not (<= 3 M)))
                (or (and (not F) (not C) B (not A)) (<= 3 M))
                (= V D)))
      (a!2 (and (or (and C (not B) (not A)) (not (= M 1)))
                (or (and C B (not A)) (= M 1))
                (= V D)))
      (a!3 (and (or (and (<= M 3) (<= 2 M)) (and F (not C) B (not A)))
                (or (and F (not C) (not B) A) (not (<= M 3)) (not (<= 2 M)))
                (= V D)))
      (a!4 (and (or (and (not J) I (not H) (not G)) (<= 3 V))
                (or (and J (not I) (not H) (not G)) (not (<= 3 V)))
                (= M K)))
      (a!5 (and (or (and (not J) (not I) G) (not (= V 1)))
                (or (and (not J) I G) (= V 1))
                (= M K)))
      (a!6 (and (or (and (<= V 3) (<= 2 V)) (and (not J) I H (not G)))
                (or (and J (not I) H (not G)) (not (<= V 3)) (not (<= 2 V)))
                (= M K)))
      (a!7 (and (or (and C B A) (not (<= 2 M)))
                (or (and F (not C) (not B) (not A)) (<= 2 M))
                (= V D)))
      (a!8 (and (or (and C (not B) A) (= M 4))
                (or (and C B (not A)) (not (= M 4)))
                (= V D)))
      (a!9 (and (or (and J I G) (not (<= 2 V)))
                (or (and (not J) (not I) H (not G)) (<= 2 V))
                (= M K)))
      (a!10 (and (or (and (not J) I G) (not (= V 4)))
                 (or (and J (not I) G) (= V 4))
                 (= M K))))
  (and (or (not E) (not R) (not S) T (not U) (and F (not C) B A (= V D)))
       (or (not E) R S T (not U) (and F (not C) (not B) A (= V D)))
       (or (not E) R (not S) T U (and (not F) (not C) B A (= D 3)))
       (or (not E) R S T U (and (not F) (not C) (not B) A (= D 1)))
       (or (not E) R (not S) T (not U) (and F (not C) B A (= D 0)))
       (or (not E) (not R) S T U a!1)
       (or (not E) (not R) (not S) T U a!2)
       (or (not E) (not R) S T (not U) a!3)
       (or (not L) (not N) (not O) (not P) Q (and J I H (not G) (= M K)))
       (or (not L) N O (not P) Q (and J (not I) H (not G) (= M K)))
       (or (not L) N (not O) P Q (and J I (not H) (not G) (= K 3)))
       (or (not L) N O P Q (and J (not I) (not H) (not G) (= K 1)))
       (or (not L) N (not O) (not P) Q (and J I H (not G) (= K 0)))
       (or (not L) (not N) O P Q a!4)
       (or (not L) (not N) (not O) P Q a!5)
       (or (not L) (not N) O (not P) Q a!6)
       (or (not E) R S (not T) (and C (not B) A (= D 2)))
       (or (not E) R (not S) (not T) (and C B A (= D 4)))
       (or (not E) (not R) (not S) (not T) a!7)
       (or (not E) (not R) S (not T) a!8)
       (or (not L) N O (not Q) (and J (not I) G (= K 2)))
       (or (not L) N (not O) (not Q) (and J I G (= K 4)))
       (or (not L) (not N) (not O) (not Q) a!9)
       (or (not L) (not N) O (not Q) a!10)
       (or (not T) (not U))
       (or (not P) (not Q))
       (or E (and (= V D) (= R A) (= S B) (= T C) (= U F)))
       (or (not F) (not C))
       (or (not H) (not G))
       (or L (and (= M K) (= N J) (= O I) (= P H) (= Q G)))
       (= L (not E))))
      )
      (state G H F C D B A I J K)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Bool) (E Bool) (F Bool) (G Bool) (H Bool) (I Bool) (J Int) ) 
    (=>
      (and
        (state E D I H J G F C B A)
        (and (not H) (not G) (not F) (not E) (= D true) (not C) (not B) (= I true))
      )
      false
    )
  )
)

(check-sat)
(exit)

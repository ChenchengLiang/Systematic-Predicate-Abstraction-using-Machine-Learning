(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main6 (Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (and (and (= 1 var0) (= 0 var1)) (= 0 var2)) (= 0 var3))) (inv_main6 var0 var1 var2 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main6 (+ (* 2 var3) (- 1)) (+ (* 2 var5) 1) var0 var1) (and (and (and (and (= (+ var6 (* (- 2) var3)) (- 1)) (= (+ var2 (* (- 2) var5)) 1)) (not (= var4 0))) (<= 0 (* (- 1) var3))) (<= 0 var5)))) (inv_main6 var6 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main6 (* 2 var3) (+ (* 2 var5) 1) var0 var1) (and (and (and (= (+ var6 (* (- 2) var3)) 0) (= (+ var2 (* (- 2) var5)) 1)) (not (= var4 0))) (<= 0 var5)))) (inv_main6 var6 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main6 (+ (* 2 var3) (- 1)) (+ (* 2 var5) (- 1)) var0 var1) (and (and (and (and (= (+ var6 (* (- 2) var3)) (- 1)) (= (+ var2 (* (- 2) var5)) (- 1))) (not (= var4 0))) (<= 0 (* (- 1) var3))) (<= 0 (* (- 1) var5))))) (inv_main6 var6 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main6 (* 2 var3) (+ (* 2 var5) (- 1)) var0 var1) (and (and (and (= (+ var6 (* (- 2) var3)) 0) (= (+ var2 (* (- 2) var5)) (- 1))) (not (= var4 0))) (<= 0 (* (- 1) var5))))) (inv_main6 var6 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main6 (+ (* 2 var5) var2) (* 2 var3) var0 var1) (and (and (and (and (= (+ var8 (* (- 1) var1)) 1) (= (+ var7 (+ (* (- 2) var5) (* (- 1) var2))) 0)) (= (+ var6 (* (- 2) var3)) 1)) (and (not (= var4 0)) (not (= var2 (- 1))))) (and (<= 0 (* (- 1) var2)) (<= 0 (+ 1 var2)))))) (inv_main6 var7 var6 var0 var8))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main6 (+ (* 2 var5) var2) (* 2 var3) var0 var1) (and (and (and (and (= (+ var8 (* (- 1) var1)) 1) (= (+ var7 (+ (* (- 2) var5) (* (- 1) var2))) 0)) (= (+ var6 (* (- 2) var3)) 1)) (not (= var4 0))) (and (and (<= 0 (* (- 1) var5)) (<= 0 (* (- 1) var2))) (<= 0 (+ 1 var2)))))) (inv_main6 var7 var6 var0 var8))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main6 (+ (* 2 var5) 1) (+ (* 2 var7) 1) var0 var1) (and (and (and (and (and (= (+ var6 (* (- 1) var0)) 1) (= (+ var2 (* (- 2) var7)) 1)) (= (+ var3 (* (- 2) var5)) 2)) (not (= var4 0))) (<= 0 var5)) (<= 0 var7)))) (inv_main6 var3 var2 var6 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main6 (+ (* 2 var5) 1) (+ (* 2 var7) (- 1)) var0 var1) (and (and (and (and (and (= (+ var6 (* (- 1) var0)) 1) (= (+ var2 (* (- 2) var7)) (- 1))) (= (+ var3 (* (- 2) var5)) 2)) (not (= var4 0))) (<= 0 var5)) (<= 0 (* (- 1) var7))))) (inv_main6 var3 var2 var6 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main6 (+ (* 2 var8) 1) (* 2 var1) var2 var3) (and (and (and (and (and (<= 0 (+ (+ (* 2 var8) 1) (- 1))) (not (= var5 0))) (= (+ (+ (* 2 var8) 1) 1) var6)) (= (+ (* 2 var1) 1) var4)) (= (+ var2 1) var7)) (= (+ var3 1) var0)))) (inv_main6 var6 var4 var7 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main6 var3 var2 var0 var1) (not (<= 0 (+ 1 (* (- 1) var0))))))))
(check-sat)

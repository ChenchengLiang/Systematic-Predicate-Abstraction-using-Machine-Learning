(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main8 (Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (= var1 0) (= var0 0))) (inv_main8 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main8 var3 var5) (and (and (and (and (<= 0 (+ var3 (- 9))) (not (= var2 0))) (not (= var4 0))) (= (+ var3 2) var0)) (= (+ var5 1) var1)))) (inv_main8 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main8 var3 var5) (and (and (and (and (and (<= 0 (+ 9 (* (- 1) var3))) (<= 0 (+ var3 (- 7)))) (not (= var2 0))) (not (= var4 0))) (= (+ var3 1) var1)) (= (+ var5 3) var0)))) (inv_main8 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main8 var3 var5) (and (and (and (and (and (<= 0 (* (- 1) (+ var3 (- 7)))) (<= 0 (+ var3 (- 5)))) (not (= var1 0))) (not (= var4 0))) (= (+ var3 2) var0)) (= (+ var5 1) var2)))) (inv_main8 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main8 var0 var4) (and (and (and (<= 0 (* (- 1) (+ var0 (- 4)))) (not (= var1 0))) (= (+ var0 1) var3)) (= (+ var4 2) var2)))) (inv_main8 var3 var2))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main8 var0 var1) (not (<= 0 (+ (* (- 1) var0) (* 2 var1))))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main8 var0 var1) (not (<= 0 (+ (* 3 var0) (* (- 1) var1))))))))
(check-sat)

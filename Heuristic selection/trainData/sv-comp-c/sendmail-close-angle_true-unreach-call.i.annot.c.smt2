(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main23 (Int Int Int Int Int) Bool)
(declare-fun inv_main24 (Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main23 var5 var4 var1 var0 var6) (and (and (and (not (= var0 var6)) (not (= var2 0))) (= (+ var5 1) var7)) (= (+ var0 1) var3)))) (inv_main23 var7 var4 var1 var3 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main23 var4 var2 var0 var1 var3)) (inv_main24 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main23 var5 var3 var0 var4 var4) (and (not (= var2 0)) (= var1 var4)))) (inv_main24 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (and (and (and (and (<= 0 (+ (+ var0 (* (- 1) var3)) (- 1))) (<= 0 (+ var0 (- 1)))) (<= 0 (+ (+ var3 (- 1)) (- 1)))) (= 0 var1)) (= 0 var4)) (= (+ var3 (- 2)) var2))) (inv_main23 var1 var0 var3 var4 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main23 var5 var3 var0 var1 var4) (and (not (<= 0 var1)) (not (or (= var1 var4) (= var2 0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main23 var4 var2 var0 var1 var3) (and (not (<= 0 (+ (+ var0 (* (- 1) var1)) (- 1)))) (not (or (= var1 var3) (= var5 0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main23 var2 var4 var1 var0 var5) (and (and (not (<= 0 (+ var2 1))) (not (= var0 var5))) (not (= var3 0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main23 var5 var2 var1 var0 var3) (and (and (not (<= 0 (+ (+ var2 (* (- 1) (+ var5 1))) (- 1)))) (not (= var0 var3))) (not (= var4 0)))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main24 var0 var1) (not (<= 0 var1))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main24 var0 var1) (not (<= 0 (+ (+ var0 (* (- 1) var1)) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main24 var1 var0) (not (<= 0 (+ var0 1)))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main24 var1 var0) (not (<= 0 (+ (+ var1 (* (- 1) (+ var0 1))) (- 1))))))))
(check-sat)

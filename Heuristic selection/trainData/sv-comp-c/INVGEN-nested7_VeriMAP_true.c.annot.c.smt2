(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main10 (Int Int Int Int Int) Bool)
(declare-fun inv_main12 (Int Int Int Int Int) Bool)
(declare-fun inv_main24 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main30 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main35 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main7 (Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main35 var5 var4 var2 var3 var0 var1) (not (<= 0 (+ (+ var0 (* (- 1) var3)) (- 1)))))) (inv_main10 var5 var4 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main12 var5 var4 var3 var0 var2) (and (and (<= 0 (+ (+ var3 (- 5)) (- 1))) (not (<= 0 (+ (+ var2 (* (- 1) var5)) (- 1))))) (= 0 var1)))) (inv_main24 var5 var4 var3 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main24 var6 var5 var3 var4 var0 var1) (and (<= 0 (+ (+ var1 (* (- 1) var4)) (- 1))) (= (+ var4 1) var2)))) (inv_main24 var6 var5 var3 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main30 var6 var5 var2 var4 var0 var1) (and (<= 0 (+ (+ (+ var0 var2) (* (- 1) var5)) (- 1))) (= (+ var5 1) var3)))) (inv_main30 var6 var3 var2 var4 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main12 var5 var3 var2 var0 var1) (and (and (and (<= 0 (+ (+ var2 (* (- 1) var0)) (- 1))) (not (<= 0 (+ (+ var2 (- 5)) (- 1))))) (not (<= 0 (+ (+ var1 (* (- 1) var5)) (- 1))))) (= 0 var4)))) (inv_main35 var5 var3 var2 var4 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main12 var4 var3 var2 var0 var1) (and (and (not (<= 0 (+ (+ var2 (* (- 1) var0)) (- 1)))) (not (<= 0 (+ (+ var2 (- 5)) (- 1))))) (not (<= 0 (+ (+ var1 (* (- 1) var4)) (- 1))))))) (inv_main10 var4 var3 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main35 var7 var6 var4 var5 var0 var3) (and (and (<= 0 (+ (+ var0 (* (- 1) var5)) (- 1))) (= (+ var6 (- 1)) var2)) (= (+ var5 1) var1)))) (inv_main35 var7 var2 var4 var1 var0 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main10 var4 var3 var2 var0 var1) (not (<= 0 (+ (+ var0 (* (- 1) (+ var4 1))) (- 1)))))) (inv_main7 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main10 var5 var4 var3 var0 var2) (and (<= 0 (+ (+ var0 (* (- 1) (+ var5 1))) (- 1))) (= 0 var1)))) (inv_main12 var1 var4 var3 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (not (<= 0 (+ var0 (- 1)))) (<= 0 (+ (+ var0 var1) (* (- 1) var2))))) (inv_main7 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (and (<= 0 (+ var0 (- 1))) (<= 0 (+ (+ var0 var2) (* (- 1) var3)))) (= 0 var4))) (inv_main12 var4 var3 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main12 var6 var4 var2 var0 var1) (and (and (<= 0 (+ (+ var1 (* (- 1) var6)) (- 1))) (= (+ var6 1) var5)) (= var3 var2)))) (inv_main12 var5 var3 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main24 var5 var4 var2 var3 var0 var1) (and (not (<= 0 (+ var1 (- 1)))) (not (<= 0 (+ (+ var1 (* (- 1) var3)) (- 1))))))) (inv_main10 var5 var4 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main24 var7 var6 var4 var5 var0 var1) (and (and (and (<= 0 (+ var1 (- 1))) (not (<= 0 (+ (+ var1 (* (- 1) var5)) (- 1))))) (= 0 var2)) (= 0 var3)))) (inv_main30 var7 var2 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main30 var5 var4 var2 var3 var0 var1) (and (not (<= 0 (+ (+ var1 (* (- 1) (+ var3 1))) (- 1)))) (not (<= 0 (+ (+ (+ var0 var2) (* (- 1) var4)) (- 1))))))) (inv_main10 var5 var4 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main30 var7 var6 var4 var5 var0 var1) (and (and (and (<= 0 (+ (+ var1 (* (- 1) (+ var5 1))) (- 1))) (not (<= 0 (+ (+ (+ var0 var4) (* (- 1) var6)) (- 1))))) (= 0 var2)) (= (+ var5 1) var3)))) (inv_main30 var7 var2 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (inv_main7 var2 var1 var0) (not (<= 0 (+ (+ var0 var1) (* (- 1) var2))))))))
(check-sat)

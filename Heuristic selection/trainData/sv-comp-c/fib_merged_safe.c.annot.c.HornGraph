-------------
inv_main7(n, arg0, arg1, arg2, arg3) :- 0 = arg0 & 1 = arg1 & 1 = arg2 & 1 = arg3 & 0 = arg4 & 0 = arg5.
Head arguments: ListBuffer((n,n), (arg0,arg0), (arg1,arg1), (arg2,arg2), (arg3,arg3))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((n,n), (arg0,arg0), (arg1,arg1), (arg2,arg2), (arg3,arg3))
variables in guard: ListBuffer(arg4, arg5)
Data flow:
arg0<-0
arg1<-1
arg2<-1
arg3<-1
Guard:
(-1 * arg4 = 0)
(-1 * arg5 = 0)
dataflow number:4
guard number:2
-------------
inv_main7(n, f1, f2, g1, g2) :- inv_main7(n, f1, f2, f1, f2), n >= 1 & f1 + f1 = g1 & f2 + f2 = g2 & f1 + f1 = h1 & f2 + f2 = h2 & n + -1 = n.
Head arguments: ListBuffer((n,n), (f1,f1), (f2,f2), (g1,g1), (g2,g2))
Body arguments: ListBuffer((n,n), (f1,f1), (f2,f2), (f1,f1), (f2,f2))
Common Arguments:ListBuffer((f1,f1), (f2,f2))
relativeComplimentOfHeadArg:ListBuffer((n,n), (g1,g1), (g2,g2))
variables in guard: ListBuffer(n, f1, h1, f2, h2)
Data flow:
n<-(n + -1)
g1<-(f1 + f1)
g2<-(f2 + f2)
Guard:
((n + -1) >= 0)
(((f1 + f1) + -1 * h1) = 0)
(((f2 + f2) + -1 * h2) = 0)
dataflow number:3
guard number:3
-------------
false :- inv_main7(n, f1, f2, f1, f2), f2 + f2 != f1 + f1 + f1 & n >= 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((n,n), (f1,f1), (f2,f2), (f1,f1), (f2,f2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(f2, f1, n)
Data flow:
Guard:
!(((f2 + f2) + -1 * ((f1 + f1) + f1)) = 0)
((n + -1) >= 0)
dataflow number:0
guard number:2
-----------

-------------
inv_main5(n, arg0, arg1, arg2) :- 0 = arg0 & 0 = arg1 & 0 = arg2.
Head arguments: ListBuffer((n,n), (arg0,arg0), (arg1,arg1), (arg2,arg2))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((n,n), (arg0,arg0), (arg1,arg1), (arg2,arg2))
variables in guard: ListBuffer()
Data flow:
arg0<-0
arg1<-0
arg2<-0
Guard:
dataflow number:3
guard number:0
-------------
inv_main5(n, arg3, arg4, arg5) :- inv_main5(n, x, y, i), i + 1 = 2*arg7 & n - i >= 1 & x + 1 = arg3 & y + 1 = arg4 & i + 1 = arg5.
Head arguments: ListBuffer((n,n), (arg3,arg3), (arg4,arg4), (arg5,arg5))
Body arguments: ListBuffer((n,n), (x,x), (y,y), (i,i))
Common Arguments:ListBuffer((n,n))
relativeComplimentOfHeadArg:ListBuffer((arg3,arg3), (arg4,arg4), (arg5,arg5))
variables in guard: ListBuffer(i, arg7, n)
Data flow:
arg3<-(x + 1)
arg4<-(y + 1)
arg5<-(i + 1)
n<-n
Guard:
(((i + 1) + -2 * arg7) = 0)
(((n + -1 * i) + -1) >= 0)
dataflow number:3
guard number:2
-------------
inv_main5(n, arg8, y, arg9) :- inv_main5(n, x, y, 2*arg11), arg9 - 2*arg11 = 1 & arg8 - x = 1 & n - 2*arg11 >= 1 & arg11 >= 0.
Head arguments: ListBuffer((n,n), (arg8,arg8), (y,y), (arg9,arg9))
Body arguments: ListBuffer((n,n), (x,x), (y,y), (2 * arg11,2 * arg11))
Common Arguments:ListBuffer((n,n), (y,y))
relativeComplimentOfHeadArg:ListBuffer((arg8,arg8), (arg9,arg9))
variables in guard: ListBuffer(n, arg11)
Data flow:
arg8<-(1 + -1 * -1 * x)
arg9<-(1 + -1 * -2 * arg11)
n<-n
y<-y
Guard:
((-1 + (n + -2 * arg11)) >= 0)
(arg11 >= 0)
dataflow number:2
guard number:2
-------------
inv_main5(n, arg8, y, arg9) :- inv_main5(n, x, y, i), arg9 - i = 1 & arg8 - x = 1 & 2*arg11 - i = 2 & n - i >= 1 & arg11 - i >= 2.
Head arguments: ListBuffer((n,n), (arg8,arg8), (y,y), (arg9,arg9))
Body arguments: ListBuffer((n,n), (x,x), (y,y), (i,i))
Common Arguments:ListBuffer((n,n), (y,y))
relativeComplimentOfHeadArg:ListBuffer((arg8,arg8), (arg9,arg9))
variables in guard: ListBuffer(arg11, i, n)
Data flow:
arg8<-(1 + -1 * -1 * x)
arg9<-(1 + -1 * -1 * i)
n<-n
y<-y
Guard:
((-2 + (2 * arg11 + -1 * i)) = 0)
((-1 + (n + -1 * i)) >= 0)
((-2 + (arg11 + -1 * i)) >= 0)
dataflow number:2
guard number:3
-------------
false :- inv_main5(n, x, y, 2*arg13), x != 2*y & !(n - 2*arg13 >= 1) & i = 2*arg13.
Head arguments: ListBuffer()
Body arguments: ListBuffer((n,n), (x,x), (y,y), (2 * arg13,2 * arg13))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(x, y, n, arg13, i)
Data flow:
Guard:
!((x + -2 * y) = 0)
!(((n + -2 * arg13) + -1) >= 0)
((i + -2 * arg13) = 0)
dataflow number:0
guard number:3
-----------

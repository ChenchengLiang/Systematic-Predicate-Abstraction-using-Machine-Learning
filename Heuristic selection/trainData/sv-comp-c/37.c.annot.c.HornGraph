-------------
inv_main4(n, arg0, arg1) :- 0 = arg0 & 0 = arg1.
Head arguments: ListBuffer((n,n), (arg0,arg0), (arg1,arg1))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((n,n), (arg0,arg0), (arg1,arg1))
variables in guard: ListBuffer()
Data flow:
arg0<-0
arg1<-0
Guard:
dataflow number:2
guard number:0
-------------
inv_main4(n, arg2, x) :- inv_main4(n, x, m), __eval17 != 0 & n - x >= 1 & x + 1 = arg2.
Head arguments: ListBuffer((n,n), (arg2,arg2), (x,x))
Body arguments: ListBuffer((n,n), (x,x), (m,m))
Common Arguments:ListBuffer((n,n), (x,x))
relativeComplimentOfHeadArg:ListBuffer((arg2,arg2))
variables in guard: ListBuffer(__eval17, n, x)
Data flow:
arg2<-(x + 1)
n<-n
Guard:
!(__eval17 = 0)
(((n + -1 * x) + -1) >= 0)
dataflow number:1
guard number:2
-------------
inv_main4(n, arg3, m) :- inv_main4(n, x, m), n - x >= 1 & x + 1 = arg3.
Head arguments: ListBuffer((n,n), (arg3,arg3), (m,m))
Body arguments: ListBuffer((n,n), (x,x), (m,m))
Common Arguments:ListBuffer((n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg3,arg3))
variables in guard: ListBuffer(n, x)
Data flow:
arg3<-(x + 1)
n<-n
m<-m
Guard:
(((n + -1 * x) + -1) >= 0)
dataflow number:1
guard number:1
-------------
false :- inv_main4(n, x, m), x >= n & m >= n & n >= 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((n,n), (x,x), (m,m))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(x, n, m)
Data flow:
Guard:
((x + -1 * n) >= 0)
((-1 * n + m) >= 0)
((-1 + n) >= 0)
dataflow number:0
guard number:3
-------------
false :- inv_main4(n, x, m), x >= n & n >= 1 & -1 >= m.
Head arguments: ListBuffer()
Body arguments: ListBuffer((n,n), (x,x), (m,m))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(x, n, m)
Data flow:
Guard:
((x + -1 * n) >= 0)
((-1 + n) >= 0)
((-1 + -1 * m) >= 0)
dataflow number:0
guard number:3
-----------

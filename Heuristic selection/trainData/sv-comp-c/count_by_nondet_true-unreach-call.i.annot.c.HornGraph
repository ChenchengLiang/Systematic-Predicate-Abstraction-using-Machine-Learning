-------------
inv_main4(arg0, arg1) :- 0 = arg0 & 0 = arg1.
Head arguments: ListBuffer((arg0,arg0), (arg1,arg1))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((arg0,arg0), (arg1,arg1))
variables in guard: ListBuffer()
Data flow:
arg0<-0
arg1<-0
Guard:
dataflow number:2
guard number:0
-------------
inv_main4(arg2, arg3) :- inv_main4(i, k), __eval20 >= 1 & -1*__eval20 + 1000000 >= 1 & -1*i + 1000000 >= 1 & i + __eval20 = arg2 & k + 1 = arg3.
Head arguments: ListBuffer((arg2,arg2), (arg3,arg3))
Body arguments: ListBuffer((i,i), (k,k))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((arg2,arg2), (arg3,arg3))
variables in guard: ListBuffer(__eval20, i)
Data flow:
arg2<-(i + __eval20)
arg3<-(k + 1)
Guard:
((__eval20 + -1) >= 0)
(((1000000 + -1 * __eval20) + -1) >= 0)
(((1000000 + -1 * i) + -1) >= 0)
dataflow number:2
guard number:3
-------------
false :- inv_main4(i, k), !(1000000 >= k) & !(-1*i + 1000000 >= 1).
Head arguments: ListBuffer()
Body arguments: ListBuffer((i,i), (k,k))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(k, i)
Data flow:
Guard:
!((1000000 + -1 * k) >= 0)
!(((1000000 + -1 * i) + -1) >= 0)
dataflow number:0
guard number:2
Hints:
-----------

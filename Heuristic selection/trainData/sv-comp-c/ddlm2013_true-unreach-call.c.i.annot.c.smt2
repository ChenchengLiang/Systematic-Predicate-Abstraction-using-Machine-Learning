(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main10 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (and (and (and (and (and (and (<= 0 var10) (<= 0 var8)) (<= 0 var7)) (<= 0 var6)) (<= 0 var5)) (<= 0 var2)) (<= 0 var1)) (<= 0 var0))) (or (not (and (inv_main10 var10 var2 var8 var7 var9) (and (and (and (and (and (= (+ (+ var10 2) (* (- 2) var4)) 0) (not (= var3 0))) (= (+ var10 2) var5)) (= (+ var2 2) var1)) (= (+ var7 (+ var2 (* (- 1) var10))) var0)) (= (+ var8 1) var6)))) (inv_main10 var5 var1 var6 var0 var9)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (and (and (and (and (and (and (<= 0 var10) (<= 0 var8)) (<= 0 var7)) (<= 0 var6)) (<= 0 var5)) (<= 0 var3)) (<= 0 var2)) (<= 0 var1))) (or (not (and (inv_main10 var10 var3 var8 var6 var9) (and (and (and (and (and (and (= (+ var7 (* (- 1) var8)) 1) (= (+ var5 (+ (* (- 1) var6) (+ (* (- 1) var3) var10))) 0)) (= (+ var2 (* (- 1) var3)) 1)) (= (+ var1 (* (- 1) var10)) 2)) (= (+ (* 2 var0) (* (- 1) var10)) 1)) (not (= var4 0))) (<= 0 var0)))) (inv_main10 var1 var2 var7 var5 var9)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (and (and (and (and (and (and (<= 0 var10) (<= 0 var8)) (<= 0 var7)) (<= 0 var6)) (<= 0 var5)) (<= 0 var3)) (<= 0 var2)) (<= 0 var1))) (or (not (and (inv_main10 var10 var3 var8 var6 var9) (and (and (and (and (and (and (= (+ var7 (* (- 1) var8)) 1) (= (+ var5 (+ (* (- 1) var6) (+ (* (- 1) var3) var10))) 0)) (= (+ var2 (* (- 1) var3)) 1)) (= (+ var1 (* (- 1) var10)) 2)) (= (+ (* 2 var0) (* (- 1) var10)) 3)) (not (= var4 0))) (<= 0 (+ (- 3) (+ var0 (* (- 1) var10))))))) (inv_main10 var1 var2 var7 var5 var9)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (and (and (and (and (and (and (<= 0 var8) (<= 0 var7)) (<= 0 var6)) (<= 0 var4)) (<= 0 var3)) (<= 0 var2)) (<= 0 var1)) (<= 0 var0))) (or (not (and (and (and (and (and (and (and (and (not (= var5 0)) (<= 0 var8)) (<= 0 var4)) (<= 0 var7)) (<= 0 var6)) (= 0 var1)) (= 1 var0)) (= 0 var2)) (= 0 var3))) (inv_main10 var1 var0 var2 var3 var5)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (and (and (and (and (and (and (<= 0 var8) (<= 0 var7)) (<= 0 var6)) (<= 0 var5)) (<= 0 var4)) (<= 0 var3)) (<= 0 var2)) (<= 0 var1))) (or (not (and (and (and (and (and (and (and (and (<= 0 var8) (<= 0 var2)) (<= 0 var5)) (<= 0 var3)) (= var0 0)) (= 1 var4)) (= 1 var1)) (= 0 var7)) (= 0 var6))) (inv_main10 var4 var1 var7 var6 var0)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (and (and (<= 0 var4) (<= 0 var2)) (<= 0 var1)) (<= 0 var0))) (not (and (inv_main10 var4 var0 var2 var1 var3) (and (not (= var2 var1)) (not (= var3 0))))))))
(check-sat)

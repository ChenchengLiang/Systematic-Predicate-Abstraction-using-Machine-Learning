(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main39 (Int Int Int) Bool)
(declare-fun inv_main4 (Int Int) Bool)
(declare-fun inv_main8 (Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int)) (or (not (= var1 var0)) (inv_main4 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main39 var2 var1 var0) (not (<= 0 (+ var2 (* (- 1) var0)))))) (inv_main8 var2 var1))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (inv_main4 var1 var0) (and (not (<= 0 (+ (+ var1 (* (- 1) var0)) (- 1)))) (<= 0 (+ var0 (- 1)))))) (inv_main8 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main39 var3 var1 var0) (and (<= 0 (+ var3 (* (- 1) var0))) (= (+ var0 1) var2)))) (inv_main39 var3 var1 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main8 var2 var0) (= (+ var0 (- 1)) var1))) (inv_main4 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main4 var2 var1) (and (and (<= 0 (+ (+ var2 (* (- 1) var1)) (- 1))) (<= 0 (+ var1 (- 1)))) (= (+ var1 1) var0)))) (inv_main39 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (inv_main39 var2 var1 var0) (and (not (<= 0 (+ var0 (- 1)))) (<= 0 (+ var2 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (inv_main39 var2 var1 var0) (and (not (<= 0 (+ var2 (* (- 1) var0)))) (<= 0 (+ var2 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (inv_main39 var2 var1 var0) (and (not (<= 0 (+ var1 (- 1)))) (<= 0 (+ var2 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (inv_main39 var2 var1 var0) (and (not (<= 0 (+ var2 (* (- 1) var1)))) (<= 0 (+ var2 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main8 var1 var0) (not (<= 0 (+ var0 (- 1))))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main8 var1 var0) (not (<= 0 (+ var1 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main8 var1 var0) (not (<= 0 (+ var0 (- 1))))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main8 var1 var0) (not (<= 0 (+ var1 (* (- 1) var0))))))))
(check-sat)

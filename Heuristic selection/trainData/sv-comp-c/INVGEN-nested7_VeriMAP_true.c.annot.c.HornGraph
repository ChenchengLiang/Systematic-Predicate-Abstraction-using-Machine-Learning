-------------
inv_main10(i, j, k, n, m) :- inv_main35(i, j, k, l, n, m), !(n - l >= 1).
Head arguments: ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
Body arguments: ListBuffer((i,i), (j,j), (k,k), (l,l), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(n, l)
Data flow:
i<-i
j<-j
k<-k
n<-n
m<-m
Guard:
!(((n + -1 * l) + -1) >= 0)
dataflow number:0
guard number:1
-------------
inv_main24(i, j, k, arg5, n, m) :- inv_main12(i, j, k, n, m), k + -5 >= 1 & !(m - i >= 1) & 0 = arg5.
Head arguments: ListBuffer((i,i), (j,j), (k,k), (arg5,arg5), (n,n), (m,m))
Body arguments: ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg5,arg5))
variables in guard: ListBuffer(k, m, i)
Data flow:
arg5<-0
i<-i
j<-j
k<-k
n<-n
m<-m
Guard:
(((k + -5) + -1) >= 0)
!(((m + -1 * i) + -1) >= 0)
dataflow number:1
guard number:2
-------------
inv_main24(i, j, k, arg6, n, m) :- inv_main24(i, j, k, l, n, m), m - l >= 1 & l + 1 = arg6.
Head arguments: ListBuffer((i,i), (j,j), (k,k), (arg6,arg6), (n,n), (m,m))
Body arguments: ListBuffer((i,i), (j,j), (k,k), (l,l), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg6,arg6))
variables in guard: ListBuffer(m, l)
Data flow:
arg6<-(l + 1)
i<-i
j<-j
k<-k
n<-n
m<-m
Guard:
(((m + -1 * l) + -1) >= 0)
dataflow number:1
guard number:1
-------------
inv_main30(i, arg7, k, l, n, m) :- inv_main30(i, j, k, l, n, m), n + k - j >= 1 & j + 1 = arg7.
Head arguments: ListBuffer((i,i), (arg7,arg7), (k,k), (l,l), (n,n), (m,m))
Body arguments: ListBuffer((i,i), (j,j), (k,k), (l,l), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (k,k), (l,l), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg7,arg7))
variables in guard: ListBuffer(n, k, j)
Data flow:
arg7<-(j + 1)
i<-i
k<-k
l<-l
n<-n
m<-m
Guard:
((((n + k) + -1 * j) + -1) >= 0)
dataflow number:1
guard number:1
-------------
inv_main35(i, j, k, arg8, n, m) :- inv_main12(i, j, k, n, m), k - n >= 1 & !(k + -5 >= 1) & !(m - i >= 1) & 0 = arg8.
Head arguments: ListBuffer((i,i), (j,j), (k,k), (arg8,arg8), (n,n), (m,m))
Body arguments: ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg8,arg8))
variables in guard: ListBuffer(k, n, m, i)
Data flow:
arg8<-0
i<-i
j<-j
k<-k
n<-n
m<-m
Guard:
(((k + -1 * n) + -1) >= 0)
!(((k + -5) + -1) >= 0)
!(((m + -1 * i) + -1) >= 0)
dataflow number:1
guard number:3
-------------
inv_main10(i, j, k, n, m) :- inv_main12(i, j, k, n, m), !(k - n >= 1) & !(k + -5 >= 1) & !(m - i >= 1).
Head arguments: ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
Body arguments: ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(k, n, m, i)
Data flow:
i<-i
j<-j
k<-k
n<-n
m<-m
Guard:
!(((k + -1 * n) + -1) >= 0)
!(((k + -5) + -1) >= 0)
!(((m + -1 * i) + -1) >= 0)
dataflow number:0
guard number:3
-------------
inv_main35(i, arg9, k, arg10, n, m) :- inv_main35(i, j, k, l, n, m), n - l >= 1 & j + -1 = arg9 & l + 1 = arg10.
Head arguments: ListBuffer((i,i), (arg9,arg9), (k,k), (arg10,arg10), (n,n), (m,m))
Body arguments: ListBuffer((i,i), (j,j), (k,k), (l,l), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (k,k), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg9,arg9), (arg10,arg10))
variables in guard: ListBuffer(n, l)
Data flow:
arg9<-(j + -1)
arg10<-(l + 1)
i<-i
k<-k
n<-n
m<-m
Guard:
(((n + -1 * l) + -1) >= 0)
dataflow number:2
guard number:1
-------------
inv_main7(j, k, n) :- inv_main10(i, j, k, n, m), !(n + -1*(i + 1) >= 1).
Head arguments: ListBuffer((j,j), (k,k), (n,n))
Body arguments: ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
Common Arguments:ListBuffer((j,j), (k,k), (n,n))
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(n, i)
Data flow:
j<-j
k<-k
n<-n
Guard:
!(((n + -1 * (i + 1)) + -1) >= 0)
dataflow number:0
guard number:1
-------------
inv_main12(arg12, j, k, n, m) :- inv_main10(i, j, k, n, m), n + -1*(i + 1) >= 1 & 0 = arg12.
Head arguments: ListBuffer((arg12,arg12), (j,j), (k,k), (n,n), (m,m))
Body arguments: ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
Common Arguments:ListBuffer((j,j), (k,k), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg12,arg12))
variables in guard: ListBuffer(n, i)
Data flow:
arg12<-0
j<-j
k<-k
n<-n
m<-m
Guard:
(((n + -1 * (i + 1)) + -1) >= 0)
dataflow number:1
guard number:1
-------------
inv_main7(j, k, n) :- !(n >= 1) & n + k >= j.
Head arguments: ListBuffer((j,j), (k,k), (n,n))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((j,j), (k,k), (n,n))
variables in guard: ListBuffer(n, k, j)
Data flow:
j<-_j
k<-_k
n<-_n
Guard:
(-1 * _n >= 0)
((_n + (_k + -1 * _j)) >= 0)
dataflow number:3
guard number:2
-------------
inv_main12(arg14, j, k, n, m) :- n >= 1 & n + k >= j & 0 = arg14.
Head arguments: ListBuffer((arg14,arg14), (j,j), (k,k), (n,n), (m,m))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((arg14,arg14), (j,j), (k,k), (n,n), (m,m))
variables in guard: ListBuffer(n, k, j)
Data flow:
arg14<-0
j<-_j
k<-_k
n<-_n
Guard:
((-1 + _n) >= 0)
((_n + (_k + -1 * _j)) >= 0)
dataflow number:4
guard number:2
-------------
inv_main12(arg16, k, arg17, n, m) :- inv_main12(i, j, arg17, n, m), m - i >= 1 & i + 1 = arg16 & k = arg17.
Head arguments: ListBuffer((arg16,arg16), (k,k), (arg17,arg17), (n,n), (m,m))
Body arguments: ListBuffer((i,i), (j,j), (arg17,arg17), (n,n), (m,m))
Common Arguments:ListBuffer((arg17,arg17), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg16,arg16), (k,k))
variables in guard: ListBuffer(m, i)
Data flow:
arg16<-(i + 1)
k<-arg17
n<-n
m<-m
Guard:
(((m + -1 * i) + -1) >= 0)
dataflow number:2
guard number:1
-------------
inv_main10(i, j, k, n, m) :- inv_main24(i, j, k, l, n, m), !(m >= 1) & !(m - l >= 1).
Head arguments: ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
Body arguments: ListBuffer((i,i), (j,j), (k,k), (l,l), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(m, l)
Data flow:
i<-i
j<-j
k<-k
n<-n
m<-m
Guard:
!((m + -1) >= 0)
!(((m + -1 * l) + -1) >= 0)
dataflow number:0
guard number:2
-------------
inv_main30(i, arg19, k, arg20, n, m) :- inv_main24(i, j, k, l, n, m), m >= 1 & !(m - l >= 1) & 0 = arg19 & 0 = arg20.
Head arguments: ListBuffer((i,i), (arg19,arg19), (k,k), (arg20,arg20), (n,n), (m,m))
Body arguments: ListBuffer((i,i), (j,j), (k,k), (l,l), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (k,k), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg19,arg19), (arg20,arg20))
variables in guard: ListBuffer(m, l)
Data flow:
arg19<-0
arg20<-0
i<-i
k<-k
n<-n
m<-m
Guard:
((m + -1) >= 0)
!(((m + -1 * l) + -1) >= 0)
dataflow number:2
guard number:2
-------------
inv_main10(i, j, k, n, m) :- inv_main30(i, j, k, l, n, m), !(m + -1*(l + 1) >= 1) & !(n + k - j >= 1).
Head arguments: ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
Body arguments: ListBuffer((i,i), (j,j), (k,k), (l,l), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(m, l, n, k, j)
Data flow:
i<-i
j<-j
k<-k
n<-n
m<-m
Guard:
!(((m + -1 * (l + 1)) + -1) >= 0)
!((((n + k) + -1 * j) + -1) >= 0)
dataflow number:0
guard number:2
-------------
inv_main30(i, arg22, k, arg23, n, m) :- inv_main30(i, j, k, l, n, m), m + -1*(l + 1) >= 1 & !(n + k - j >= 1) & 0 = arg22 & l + 1 = arg23.
Head arguments: ListBuffer((i,i), (arg22,arg22), (k,k), (arg23,arg23), (n,n), (m,m))
Body arguments: ListBuffer((i,i), (j,j), (k,k), (l,l), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (k,k), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg22,arg22), (arg23,arg23))
variables in guard: ListBuffer(m, l, n, k, j)
Data flow:
arg22<-0
arg23<-(l + 1)
i<-i
k<-k
n<-n
m<-m
Guard:
(((m + -1 * (l + 1)) + -1) >= 0)
!((((n + k) + -1 * j) + -1) >= 0)
dataflow number:2
guard number:2
-------------
false :- inv_main7(j, k, n), !(n + k >= j).
Head arguments: ListBuffer()
Body arguments: ListBuffer((j,j), (k,k), (n,n))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(n, k, j)
Data flow:
Guard:
!(((n + k) + -1 * j) >= 0)
dataflow number:0
guard number:1
-----------

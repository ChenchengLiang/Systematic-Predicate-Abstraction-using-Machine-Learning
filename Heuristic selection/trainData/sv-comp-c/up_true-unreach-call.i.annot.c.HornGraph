-------------
inv_main13(n, arg2, arg3) :- inv_main13(n, k, j), n + -1*(j + 1) >= 1 & k + -1 = arg2 & j + 1 = arg3.
Head arguments: ListBuffer((n,n), (arg2,arg2), (arg3,arg3))
Body arguments: ListBuffer((n,n), (k,k), (j,j))
Common Arguments:ListBuffer((n,n))
relativeComplimentOfHeadArg:ListBuffer((arg2,arg2), (arg3,arg3))
variables in guard: ListBuffer(n, j)
Data flow:
arg2<-(k + -1)
arg3<-(j + 1)
n<-n
Guard:
(((n + -1 * (j + 1)) + -1) >= 0)
dataflow number:2
guard number:1
-------------
inv_main6(__eval23, i, k) :- 0 = i & 0 = k.
Head arguments: ListBuffer((__eval23,__eval23), (i,i), (k,k))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((__eval23,__eval23), (i,i), (k,k))
variables in guard: ListBuffer()
Data flow:
i<-0
k<-0
Guard:
dataflow number:2
guard number:0
-------------
inv_main13(n, k, arg4) :- inv_main6(n, i, k), n >= 1 & !(n - i >= 1) & 0 = arg4.
Head arguments: ListBuffer((n,n), (k,k), (arg4,arg4))
Body arguments: ListBuffer((n,n), (i,i), (k,k))
Common Arguments:ListBuffer((n,n), (k,k))
relativeComplimentOfHeadArg:ListBuffer((arg4,arg4))
variables in guard: ListBuffer(n, i)
Data flow:
arg4<-0
n<-n
k<-k
Guard:
((n + -1) >= 0)
!(((n + -1 * i) + -1) >= 0)
dataflow number:1
guard number:2
-------------
inv_main6(n, arg5, arg6) :- inv_main6(n, i, k), n - i >= 1 & i + 1 = arg5 & k + 1 = arg6.
Head arguments: ListBuffer((n,n), (arg5,arg5), (arg6,arg6))
Body arguments: ListBuffer((n,n), (i,i), (k,k))
Common Arguments:ListBuffer((n,n))
relativeComplimentOfHeadArg:ListBuffer((arg5,arg5), (arg6,arg6))
variables in guard: ListBuffer(n, i)
Data flow:
arg5<-(i + 1)
arg6<-(k + 1)
n<-n
Guard:
(((n + -1 * i) + -1) >= 0)
dataflow number:2
guard number:1
-------------
false :- inv_main13(n, k, j), !(k >= 1).
Head arguments: ListBuffer()
Body arguments: ListBuffer((n,n), (k,k), (j,j))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(k)
Data flow:
Guard:
!((k + -1) >= 0)
dataflow number:0
guard number:1
-----------

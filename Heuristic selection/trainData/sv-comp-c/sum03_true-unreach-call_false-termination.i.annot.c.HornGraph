-------------
inv_main12(arg1, arg2) :- inv_main12(sn, x), -1*x + 1000000 >= 1 & sn + 2 = arg1 & x + 1 = arg2.
Head arguments: ListBuffer((arg1,arg1), (arg2,arg2))
Body arguments: ListBuffer((sn,sn), (x,x))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((arg1,arg1), (arg2,arg2))
variables in guard: ListBuffer(x)
Data flow:
arg1<-(sn + 2)
arg2<-(x + 1)
Guard:
(((1000000 + -1 * x) + -1) >= 0)
dataflow number:2
guard number:1
-------------
inv_main12(arg3, arg4) :- __eval5 >= 0 & __eval4 >= 0 & 0 = sn & sn + 2 = arg3 & 1 = arg4.
Head arguments: ListBuffer((arg3,arg3), (arg4,arg4))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((arg3,arg3), (arg4,arg4))
variables in guard: ListBuffer(__eval5, __eval4, sn)
Data flow:
arg3<-(sn + 2)
arg4<-1
Guard:
(__eval5 >= 0)
(__eval4 >= 0)
(-1 * sn = 0)
dataflow number:2
guard number:3
-------------
false :- inv_main12(sn, x), !(sn = 2*x | sn = 0).
Head arguments: ListBuffer()
Body arguments: ListBuffer((sn,sn), (x,x))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(sn, x)
Data flow:
Guard:
!(((sn + -2 * x) = 0) | (sn = 0))
dataflow number:0
guard number:1
-----------

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main29 (Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (and (and (and (and (and (and (and (and (<= 0 (+ 5 (* (- 1) var6))) (<= 0 (+ var6 5))) (<= 0 (+ var3 (* (- 1) (+ (* 2 var6) (* (- 1) var3)))))) (<= 0 (+ 5 (* (- 1) var3)))) (<= 0 (+ (* 2 var6) (* (- 1) var3)))) (= (+ (* 2 var6) (* (- 1) var3)) var1)) (= 100 var2)) (= 75 var5)) (= (- 50) var4)) (= 0 var0))) (inv_main29 var2 var3 var5 var6 var4 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int)) (or (not (and (inv_main29 var12 var4 var1 var13 var9 var10 var7) (and (and (and (and (and (and (and (and (and (<= 0 (+ (+ (* 2 var1) (* (- 1) var12)) (* (- 1) var9))) (not (= var5 0))) (<= 0 (+ 5 (* (- 1) var13)))) (<= 0 (+ var13 5))) (not (= var8 0))) (= (+ var1 var13) var2)) (= (+ var13 (- 1)) var11)) (= (+ var12 var4) var6)) (= (+ var9 var10) var3)) (= (+ var7 1) var0)))) (inv_main29 var6 var4 var2 var11 var3 var10 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (or (not (and (inv_main29 var8 var5 var3 var11 var10 var1 var7) (and (and (and (and (and (and (and (and (<= 0 (* (- 1) (+ (+ (* 2 var3) (* (- 1) var8)) (* (- 1) var10)))) (<= 0 (+ 5 (* (- 1) var11)))) (<= 0 (+ var11 5))) (not (= var9 0))) (= (+ var11 1) var4)) (= (+ var3 var11) var2)) (= (+ var8 var5) var0)) (= (+ var10 var1) var6)) (= (+ var7 1) var12)))) (inv_main29 var0 var5 var2 var4 var6 var1 var12))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main29 var4 var2 var1 var6 var5 var0 var3) (not (<= 0 (+ 5 (* (- 1) var2))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main29 var4 var2 var1 var6 var5 var0 var3) (not (<= 0 (+ (+ (* 2 var6) (* 2 var3)) (* (- 1) (+ var2 var0)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main29 var4 var2 var1 var6 var5 var0 var3) (not (<= 0 (+ (+ (* 5 var3) 75) (* (- 1) var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main29 var4 var2 var1 var6 var5 var0 var3) (not (<= 0 (+ 6 (* (- 1) var6))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main29 var4 var2 var1 var6 var5 var0 var3) (not (<= 0 var0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main29 var4 var2 var1 var6 var5 var0 var3) (not (<= 0 (+ var6 6)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main29 var4 var2 var1 var6 var5 var0 var3) (not (<= 0 (+ (+ var1 (* 5 var3)) (- 75))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main29 var4 var2 var1 var6 var5 var0 var3) (not (<= 0 (+ (+ (+ var2 (* (- 2) var6)) var0) (* 2 var3))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main29 var4 var2 var1 var6 var5 var0 var3) (not (<= 0 (+ var2 (* (- 1) var0))))))))
(check-sat)

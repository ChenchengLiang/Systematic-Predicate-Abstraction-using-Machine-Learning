(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main24 (Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (and (and (and (and (<= 0 (+ var2 (- 1))) (= var1 0)) (= var3 0)) (= var4 1)) (= var5 0)) (= var0 0))) (inv_main24 var2 var0 var5 var4 var3 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int)) (or (not (and (inv_main24 var7 var0 var10 var9 var8 var5) (and (and (and (and (and (and (and (<= 0 (+ var9 (- 1))) (<= 0 (+ var7 (- 1)))) (not (= var1 0))) (not (= var3 0))) (= (+ var7 (- 1)) var2)) (= (+ var0 1) var4)) (= (+ var9 (- 1)) var6)) (= (+ var8 1) var11)))) (inv_main24 var2 var4 var10 var6 var11 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (or (not (and (inv_main24 var4 var0 var9 var8 var5 var3) (and (and (and (and (and (<= 0 (+ var3 (- 1))) (<= 0 (+ var0 (- 1)))) (not (= var6 0))) (not (= var2 0))) (= (+ var0 (- 1)) var1)) (= (+ var9 1) var7)))) (inv_main24 var4 var1 var7 var8 var5 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (or (not (and (inv_main24 var6 var0 var9 var8 var7 var5) (and (and (and (and (and (<= 0 (+ var9 (- 1))) (<= 0 (+ var8 (- 1)))) (not (= var1 0))) (not (= var2 0))) (= (+ var0 1) var3)) (= (+ var9 (- 1)) var4)))) (inv_main24 var6 var3 var4 var8 var7 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int)) (or (not (and (inv_main24 var6 var0 var11 var9 var7 var5) (and (and (and (and (and (and (<= 0 (+ var11 (- 1))) (not (= var3 0))) (not (= var2 0))) (= (+ var6 1) var1)) (= (+ var11 (- 1)) var8)) (= 0 var4)) (= (+ var5 var7) var10)))) (inv_main24 var1 var0 var8 var9 var4 var10))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main24 var5 var0 var10 var8 var6 var3) (and (and (and (and (and (<= 0 (+ var0 (- 1))) (not (= var1 0))) (= (+ var5 1) var2)) (= (+ var0 (- 1)) var9)) (= (+ var8 var3) var4)) (= 0 var7)))) (inv_main24 var2 var9 var10 var4 var6 var7))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main24 var2 var0 var5 var4 var3 var1) (not (<= 0 (+ (+ (+ var4 var3) var1) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main24 var2 var0 var5 var4 var3 var1) (not (<= 0 (* (- 1) (+ (+ (+ var4 var3) var1) (- 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main24 var2 var0 var5 var4 var3 var1) (not (<= 0 (+ 1 (* (- 1) (+ var4 var3)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main24 var2 var0 var5 var4 var3 var1) (not (<= 0 var3))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main24 var2 var0 var5 var4 var3 var1) (not (<= 0 var4))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main24 var2 var0 var5 var4 var3 var1) (not (<= 0 var5))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main24 var2 var0 var5 var4 var3 var1) (not (<= 0 var0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main24 var2 var0 var5 var4 var3 var1) (not (<= 0 (+ (+ var2 var3) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main24 var2 var0 var5 var4 var3 var1) (not (<= 0 (+ (+ var2 var0) (* (- 1) (+ var4 var3)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main24 var2 var0 var5 var4 var3 var1) (not (<= 0 (+ (+ (+ var2 var0) var5) (- 1))))))))
(check-sat)

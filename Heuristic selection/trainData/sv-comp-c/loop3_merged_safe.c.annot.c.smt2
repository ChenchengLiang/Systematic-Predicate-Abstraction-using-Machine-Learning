(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main15 (Int Int) Bool)
(declare-fun inv_main18 (Int Int Int Int) Bool)
(declare-fun inv_main8 (Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (and (and (and (and (<= 0 (+ (+ 1 (* (- 1) var3)) (- 1))) (= 1 var2)) (= 1 var0)) (= 0 var5)) (= 1 var4)) (= 2 var1))) (inv_main8 var2 var0 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (and (and (and (not (<= 0 (+ (+ 1 (* (- 1) var2)) (- 1)))) (= 1 var0)) (= 0 var4)) (= 1 var3)) (= 2 var1))) (inv_main8 var2 var0 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main8 var3 var0 var5) (and (and (and (and (<= 0 (+ var3 (* (- 1) var0))) (= (+ var0 1) var1)) (= (+ var5 2) var6)) (= var4 1)) (= var2 2)))) (inv_main8 var3 var1 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main8 var2 var0 var4) (and (and (and (not (<= 0 (+ (+ var2 (- 1)) (- 1)))) (not (<= 0 (+ var2 (* (- 1) var0))))) (= var3 1)) (= var1 2)))) (inv_main15 var4 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main8 var2 var0 var6) (and (and (and (and (and (<= 0 (+ (+ var2 (* (- 1) var3)) (- 1))) (not (<= 0 (+ var2 (* (- 1) var0))))) (= var3 1)) (= var1 2)) (= (+ var3 1) var5)) (= (+ var1 2) var4)))) (inv_main18 var2 var6 var5 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main18 var1 var3 var2 var0) (not (<= 0 (+ (+ var1 (* (- 1) var2)) (- 1)))))) (inv_main15 var3 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main18 var2 var5 var3 var0) (and (and (<= 0 (+ (+ var2 (* (- 1) var3)) (- 1))) (= (+ var3 1) var4)) (= (+ var0 2) var1)))) (inv_main18 var2 var5 var4 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (inv_main8 var1 var0 var2) (and (not (= (+ (+ var2 2) (* (- 2) var0)) 0)) (<= 0 (+ var1 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main18 var1 var3 var2 var0) (not (= (+ var0 (* (- 2) var2)) 0))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main15 var1 var0) (not (= var1 var0))))))
(check-sat)

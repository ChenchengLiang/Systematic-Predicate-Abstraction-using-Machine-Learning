(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main10 (Int Int Int) Bool)
(declare-fun inv_main47 (Int Int) Bool)
(declare-fun inv_main60 () Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main10 8656 var0 2) (and (= var2 8656) (= 3 var1)))) (inv_main47 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main10 8656 var1 var0) (and (not (= var0 2)) (= var2 8656)))) (inv_main47 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main10 var2 var1 var0) (not (or (not (<= 0 (+ 8512 (* (- 1) var2)))) (not (<= 0 (+ (+ var0 (- 2)) (- 1)))))))) inv_main60)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main47 var1 5) (and (= var0 5) (= var2 8656)))) inv_main60)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main10 8466 var0 0) (and (and (not (= var0 0)) (= 8656 var1)) (= 2 var2)))) (inv_main10 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main10 8466 0 0) (and (and (= var0 0) (= 8512 var2)) (= 2 var1)))) (inv_main10 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main10 8466 var1 var0) (and (and (and (not (= var1 0)) (not (= var0 0))) (not (<= 0 (+ (+ var0 (- 2)) (- 1))))) (= 8656 var2)))) (inv_main10 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main10 8466 0 var0) (and (and (and (not (= var0 0)) (not (<= 0 (+ (+ var0 (- 2)) (- 1))))) (= var1 0)) (= 8512 var2)))) (inv_main10 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main10 8512 var1 var0) (and (and (not (= var3 0)) (not (<= 0 (+ (+ var0 (- 2)) (- 1))))) (= 8466 var2)))) (inv_main10 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main10 8512 var1 var0) (and (and (not (<= 0 (+ (+ var0 (- 2)) (- 1)))) (= var3 0)) (= 8640 var2)))) (inv_main10 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main10 8640 0 3) (and (and (= var2 0) (= 8656 var0)) (= 4 var1)))) (inv_main10 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main10 8640 0 var0) (and (and (not (= var0 3)) (= var2 0)) (= 8656 var1)))) (inv_main10 var1 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main47 var0 4) (and (and (not (= var0 0)) (= 8640 var1)) (= 5 var2)))) (inv_main10 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main47 var1 var0) (and (and (and (not (= var1 0)) (not (= var0 5))) (not (= var0 4))) (= 8640 var2)))) (inv_main10 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (= 8466 var0) (= 0 var2))) (inv_main10 var0 var1 var2))))
(assert (not inv_main60))
(check-sat)

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main39 (Int Int Int) Bool)
(declare-fun inv_main40 (Int Int Int) Bool)
(declare-fun inv_main69 (Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (not (= var2 0)) (not (= var4 0))) (not (<= 0 (+ (+ var4 (* (- 1) (+ var3 (- 1)))) (- 1))))) (<= 0 var4)) (<= 0 (+ var0 (- 1)))) (<= 0 (+ var3 (- 1)))) (<= 0 (+ 1000000 (* (- 1) var4)))) (<= 0 (+ var4 1000000))) (<= 0 (+ 1000000 (* (- 1) var0)))) (<= 0 (+ var0 1000000))) (<= 0 (+ 1000000 (* (- 1) var3)))) (<= 0 (+ var3 1000000))) (= var1 var4))) (inv_main39 var3 var0 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main39 var1 var0 (+ var1 (- 1))) (= var2 (+ var1 (- 1))))) (inv_main40 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main39 var2 var0 var3) (not (or (= var1 0) (= var3 (+ var2 (- 1))))))) (inv_main40 var2 var0 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main39 var2 var0 var3) (and (not (= var3 (+ var2 (- 1)))) (= (+ var3 1) var1)))) (inv_main39 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main40 var3 var0 var2) (and (and (and (and (and (and (and (not (= (+ var2 1) (+ var3 (- 1)))) (<= 0 (+ (+ var0 (- 1)) (- 1)))) (not (= var6 0))) (not (= (+ var2 1) (+ var3 (- 1))))) (= (+ var2 1) var1)) (not (= var2 (+ var3 (- 1))))) (= (+ var2 1) var4)) (= 0 var5)))) (inv_main69 var3 var0 var4 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main69 var2 var0 var4 var3) (and (and (and (and (not (= (+ var4 1) (+ var2 (- 1)))) (<= 0 (+ (+ (+ var0 (- 1)) (* (- 1) (+ var3 1))) (- 1)))) (not (= var6 0))) (= (+ var4 1) var1)) (= (+ var3 1) var5)))) (inv_main69 var2 var0 var1 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main69 var2 var0 var3 var4) (and (and (not (= (+ var3 1) (+ var2 (- 1)))) (<= 0 (+ (+ (+ var0 (- 1)) (* (- 1) var4)) (- 1)))) (= (+ var3 1) var1)))) (inv_main69 var2 var0 var1 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (and (and (and (and (and (and (and (and (and (and (not (<= 0 (+ (+ var1 (* (- 1) (+ var2 (- 1)))) (- 1)))) (not (= var2 0))) (not (<= 0 (+ (+ var2 (* (- 1) (+ var1 (- 1)))) (- 1))))) (<= 0 var2)) (<= 0 (+ var0 (- 1)))) (<= 0 (+ var1 (- 1)))) (<= 0 (+ 1000000 (* (- 1) var2)))) (<= 0 (+ var2 1000000))) (<= 0 (+ 1000000 (* (- 1) var0)))) (<= 0 (+ var0 1000000))) (<= 0 (+ 1000000 (* (- 1) var1)))) (<= 0 (+ var1 1000000))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (and (and (and (and (and (and (and (and (and (and (not (<= 0 (+ var2 (- 1)))) (not (= var2 0))) (not (<= 0 (+ (+ var2 (* (- 1) (+ var1 (- 1)))) (- 1))))) (<= 0 var2)) (<= 0 (+ var0 (- 1)))) (<= 0 (+ var1 (- 1)))) (<= 0 (+ 1000000 (* (- 1) var2)))) (<= 0 (+ var2 1000000))) (<= 0 (+ 1000000 (* (- 1) var0)))) (<= 0 (+ var0 1000000))) (<= 0 (+ 1000000 (* (- 1) var1)))) (<= 0 (+ var1 1000000))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (and (and (and (and (and (and (and (and (and (and (and (not (<= 0 (+ (+ var1 (* (- 1) var2)) (- 1)))) (not (= var3 0))) (not (= var2 0))) (not (<= 0 (+ (+ var2 (* (- 1) (+ var1 (- 1)))) (- 1))))) (<= 0 var2)) (<= 0 (+ var0 (- 1)))) (<= 0 (+ var1 (- 1)))) (<= 0 (+ 1000000 (* (- 1) var2)))) (<= 0 (+ var2 1000000))) (<= 0 (+ 1000000 (* (- 1) var0)))) (<= 0 (+ var0 1000000))) (<= 0 (+ 1000000 (* (- 1) var1)))) (<= 0 (+ var1 1000000))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (and (and (and (and (and (and (and (and (and (and (and (not (<= 0 var3)) (not (= var2 0))) (not (= var3 0))) (not (<= 0 (+ (+ var3 (* (- 1) (+ var1 (- 1)))) (- 1))))) (<= 0 var3)) (<= 0 (+ var0 (- 1)))) (<= 0 (+ var1 (- 1)))) (<= 0 (+ 1000000 (* (- 1) var3)))) (<= 0 (+ var3 1000000))) (<= 0 (+ 1000000 (* (- 1) var0)))) (<= 0 (+ var0 1000000))) (<= 0 (+ 1000000 (* (- 1) var1)))) (<= 0 (+ var1 1000000))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (inv_main39 var1 var0 var2) (and (not (<= 0 (+ (+ var1 (* (- 1) var2)) (- 1)))) (not (= var2 (+ var1 (- 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (inv_main39 var1 var0 var2) (and (not (<= 0 var2)) (not (= var2 (+ var1 (- 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (inv_main40 var1 var0 var2) (not (<= 0 (+ (+ var1 (* (- 1) var2)) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (inv_main40 var1 var0 var2) (not (<= 0 var2))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (inv_main40 var1 var0 var2) (and (not (<= 0 (+ (+ var1 (* (- 1) (+ var2 1))) (- 1)))) (not (= var2 (+ var1 (- 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (inv_main40 var1 var0 var2) (and (not (<= 0 (+ var2 1))) (not (= var2 (+ var1 (- 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main40 var2 var0 var1) (and (and (and (not (<= 0 (+ (+ var2 (* (- 1) (+ var1 1))) (- 1)))) (not (= var3 0))) (not (= (+ var1 1) (+ var2 (- 1))))) (not (= var1 (+ var2 (- 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main40 var3 var0 var2) (and (and (and (not (<= 0 (+ var2 1))) (not (= var1 0))) (not (= (+ var2 1) (+ var3 (- 1))))) (not (= var2 (+ var3 (- 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main69 var1 var0 var2 var3) (not (<= 0 (+ (+ var1 (* (- 1) var2)) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main69 var1 var0 var2 var3) (not (<= 0 var2))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main69 var3 var0 var4 var2) (and (not (<= 0 (+ (+ var0 (* (- 1) (+ var2 1))) (- 1)))) (not (= var1 0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main69 var2 var0 var3 var1) (and (not (<= 0 (+ var1 1))) (not (= var4 0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main69 var3 var0 var4 var2) (and (not (<= 0 (+ (+ var3 (* (- 1) var4)) (- 1)))) (not (= var1 0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main69 var2 var0 var3 var1) (and (not (<= 0 var3)) (not (= var4 0)))))))
(check-sat)

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main15 (Int Int) Bool)
(declare-fun inv_main16 (Int Int) Bool)
(declare-fun inv_main30 (Int Int Int Int) Bool)
(declare-fun inv_main33 (Int Int Int Int) Bool)
(declare-fun inv_main7 (Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (= 0 var1) (= 0 var0))) (inv_main7 var1 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (inv_main33 var0 var3 var1 var2)) (inv_main30 var0 var3 var1 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main30 var0 var3 var1 var2) (and (and (and (and (not (<= 0 (+ var3 (- 1)))) (<= 0 (+ (+ var1 (* (- 1) (+ var2 1))) (- 1)))) (= (+ var0 (- 1)) var4)) (= (+ var3 (- 1)) var5)) (= (+ var2 1) var6)))) (inv_main33 var4 var5 var1 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main30 var1 var6 var4 var5) (and (and (and (and (<= 0 (+ var6 (- 1))) (<= 0 (+ (+ var4 (* (- 1) (+ var5 1))) (- 1)))) (= (+ var1 (- 1)) var3)) (= (+ var6 (- 1)) var0)) (= (+ var5 1) var2)))) (inv_main30 var3 var0 var4 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main7 var1 var4) (and (and (not (= var3 0)) (= (+ var1 1) var0)) (= var2 0)))) (inv_main7 var0 var4))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main15 var0 var1)) (inv_main16 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main15 var1 var2) (and (and (not (= var0 0)) (= (+ var1 1) var3)) (= (+ var2 1) var4)))) (inv_main15 var3 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main16 var0 var2) (not (= var1 0)))) (inv_main16 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main16 var2 var1) (and (and (not (<= 0 var1)) (= var0 var2)) (= 0 var3)))) (inv_main33 var0 var1 var2 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main16 var1 var2) (and (and (<= 0 var2) (= var0 var1)) (= 0 var3)))) (inv_main30 var0 var2 var1 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main7 var0 var3) (and (and (<= 0 (+ (+ var0 (* (- 1) var3)) (- 1))) (= 0 var1)) (= var2 0)))) (inv_main15 var1 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main7 var0 var3) (and (and (not (<= 0 (+ (+ var0 (* (- 1) var3)) (- 1)))) (= 0 var1)) (= var2 0)))) (inv_main15 var1 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (inv_main33 var0 var3 var1 var2))))
(check-sat)

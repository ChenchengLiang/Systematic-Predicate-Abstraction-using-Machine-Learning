-------------
inv_main14(z, res1, arg0) :- inv_main14(z, res1, i), 10 >= i & i + 1 = arg0 & z = z.
Head arguments: ListBuffer((z,z), (res1,res1), (arg0,arg0))
Body arguments: ListBuffer((z,z), (res1,res1), (i,i))
Common Arguments:ListBuffer((z,z), (res1,res1))
relativeComplimentOfHeadArg:ListBuffer((arg0,arg0))
variables in guard: ListBuffer(i, z)
Data flow:
arg0<-(i + 1)
z<-z
res1<-res1
Guard:
((10 + -1 * i) >= 0)
((z + -1 * z) = 0)
dataflow number:1
guard number:2
-------------
inv_main7(z, arg1) :- inv_main7(z, i), 10 >= i & i + 1 = arg1 & z = z.
Head arguments: ListBuffer((z,z), (arg1,arg1))
Body arguments: ListBuffer((z,z), (i,i))
Common Arguments:ListBuffer((z,z))
relativeComplimentOfHeadArg:ListBuffer((arg1,arg1))
variables in guard: ListBuffer(i, z)
Data flow:
arg1<-(i + 1)
z<-z
Guard:
((10 + -1 * i) >= 0)
((z + -1 * z) = 0)
dataflow number:1
guard number:2
-------------
inv_main7(z, arg3) :- z = arg2 & 0 = arg3.
Head arguments: ListBuffer((z,z), (arg3,arg3))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((z,z), (arg3,arg3))
variables in guard: ListBuffer()
Data flow:
z<-arg2
arg3<-0
Guard:
dataflow number:2
guard number:0
-------------
inv_main14(z, i, arg5) :- inv_main7(arg4, i), !(10 >= i) & z = arg4 & z = arg4 & 1 = arg5.
Head arguments: ListBuffer((z,z), (i,i), (arg5,arg5))
Body arguments: ListBuffer((arg4,arg4), (i,i))
Common Arguments:ListBuffer((i,i))
relativeComplimentOfHeadArg:ListBuffer((z,z), (arg5,arg5))
variables in guard: ListBuffer(i, z, arg4)
Data flow:
z<-arg4
arg5<-1
i<-i
Guard:
!((10 + -1 * i) >= 0)
((z + -1 * arg4) = 0)
dataflow number:2
guard number:2
-------------
false :- inv_main14(z, res1, res2), res1 != res2 & !(10 >= res2).
Head arguments: ListBuffer()
Body arguments: ListBuffer((z,z), (res1,res1), (res2,res2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(res1, res2)
Data flow:
Guard:
!((res1 + -1 * res2) = 0)
!((10 + -1 * res2) >= 0)
dataflow number:0
guard number:2
-----------

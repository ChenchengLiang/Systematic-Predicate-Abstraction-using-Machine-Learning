-------------
inv_main8(arg2, arg3, arg4, arg5) :- inv_main8(z, x, y, w), z + x + y + w >= 1 & z + x + y + w = 2*arg7 + 1 & __eval75 != 0 & x + 1 = arg3 & y + 1 = arg4 & w + 2 = arg5 & z + x + y + w = arg2.
Head arguments: ListBuffer((arg2,arg2), (arg3,arg3), (arg4,arg4), (arg5,arg5))
Body arguments: ListBuffer((z,z), (x,x), (y,y), (w,w))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((arg2,arg2), (arg3,arg3), (arg4,arg4), (arg5,arg5))
variables in guard: ListBuffer(z, x, y, w, arg7, __eval75)
Data flow:
arg2<-(z + ((x + y) + w))
arg3<-(x + 1)
arg4<-(y + 1)
arg5<-(w + 2)
Guard:
(((z + ((x + y) + w)) + -1) >= 0)
(((z + ((x + y) + w)) + -1 * (2 * arg7 + 1)) = 0)
!(__eval75 = 0)
dataflow number:4
guard number:3
-------------
inv_main8(arg8, x, arg9, arg10) :- inv_main8(z, x, y, w), arg10 - w = 2 & arg9 - y = 1 & arg8 + -1*x - z - y - w = 0 & 2*arg12 + arg11 - z - x - y - w = 0 & __eval75 != 0 & arg11 != -1 & 0 >= arg11 & arg11 >= -1.
Head arguments: ListBuffer((arg8,arg8), (x,x), (arg9,arg9), (arg10,arg10))
Body arguments: ListBuffer((z,z), (x,x), (y,y), (w,w))
Common Arguments:ListBuffer((x,x))
relativeComplimentOfHeadArg:ListBuffer((arg8,arg8), (arg9,arg9), (arg10,arg10))
variables in guard: ListBuffer(arg12, w, y, x, z, arg11, __eval75)
Data flow:
arg8<--1 * (-1 * w + (-1 * y + (-1 * x + -1 * z)))
arg9<-(1 + -1 * -1 * y)
arg10<-(2 + -1 * -1 * w)
Guard:
((2 * arg12 + (-1 * w + (-1 * y + (-1 * x + (-1 * z + arg11))))) = 0)
!(__eval75 = 0)
!((1 + arg11) = 0)
(-1 * arg11 >= 0)
((1 + arg11) >= 0)
dataflow number:3
guard number:5
-------------
inv_main8(arg8, x, arg9, arg10) :- inv_main8(z, x, y, w), arg10 - w = 2 & arg9 - y = 1 & arg8 + -1*x - z - y - w = 0 & 2*arg12 + arg11 - z - x - y - w = 0 & __eval75 != 0 & -1*x - z - y - w >= 1 & 0 >= arg11 & arg11 >= -1.
Head arguments: ListBuffer((arg8,arg8), (x,x), (arg9,arg9), (arg10,arg10))
Body arguments: ListBuffer((z,z), (x,x), (y,y), (w,w))
Common Arguments:ListBuffer((x,x))
relativeComplimentOfHeadArg:ListBuffer((arg8,arg8), (arg9,arg9), (arg10,arg10))
variables in guard: ListBuffer(arg12, w, y, x, z, arg11, __eval75)
Data flow:
arg8<--1 * (-1 * w + (-1 * y + (-1 * x + -1 * z)))
arg9<-(1 + -1 * -1 * y)
arg10<-(2 + -1 * -1 * w)
Guard:
((2 * arg12 + (-1 * w + (-1 * y + (-1 * x + (-1 * z + arg11))))) = 0)
!(__eval75 = 0)
((-1 + (-1 * w + (-1 * y + (-1 * x + -1 * z)))) >= 0)
(-1 * arg11 >= 0)
((1 + arg11) >= 0)
dataflow number:3
guard number:5
-------------
inv_main8(arg13, arg14, arg15, arg16) :- 1 = arg13 & 0 = arg14 & 0 = arg15 & 0 = arg16.
Head arguments: ListBuffer((arg13,arg13), (arg14,arg14), (arg15,arg15), (arg16,arg16))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((arg13,arg13), (arg14,arg14), (arg15,arg15), (arg16,arg16))
variables in guard: ListBuffer()
Data flow:
arg13<-1
arg14<-0
arg15<-0
arg16<-0
Guard:
dataflow number:4
guard number:0
-------------
false :- inv_main8(z, x, y, w), x != y.
Head arguments: ListBuffer()
Body arguments: ListBuffer((z,z), (x,x), (y,y), (w,w))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(x, y)
Data flow:
Guard:
!((x + -1 * y) = 0)
dataflow number:0
guard number:1
Hints:
-----------

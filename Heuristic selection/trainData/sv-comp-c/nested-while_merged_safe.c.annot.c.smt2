(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main10 (Int Int Int Int Int) Bool)
(declare-fun inv_main11 (Int Int Int Int Int) Bool)
(declare-fun inv_main16 (Int Int Int Int Int) Bool)
(declare-fun inv_main19 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main6 (Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main10 var3 var4 var1 var0 var2)) (inv_main11 var3 var4 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main11 var5 var6 var1 var0 var3) (and (and (<= 0 (+ (+ var3 (* (- 1) var6)) (- 1))) (= (+ (+ var6 2) (- 1)) var2)) (= (+ var0 1) var4)))) (inv_main11 var5 var2 var1 var4 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main19 var4 var7 var3 var1 var5 var2) (and (and (<= 0 (+ (+ var2 (* (- 1) var3)) (- 1))) (= (+ var3 1) var6)) (= (+ var5 1) var0)))) (inv_main19 var4 var7 var6 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main11 var3 var4 var1 var0 var2) (and (not (<= 0 (+ (+ var4 (* (- 1) var2)) (- 1)))) (not (<= 0 (+ (+ var2 (* (- 1) var4)) (- 1))))))) (inv_main6 var3 var4 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main11 var3 var6 var1 var0 var2) (and (and (and (<= 0 (+ (+ var6 (* (- 1) var2)) (- 1))) (not (<= 0 (+ (+ var2 (* (- 1) var6)) (- 1))))) (= (+ (+ var0 (- 2)) 1) var5)) (= (+ var2 1) var4)))) (inv_main10 var3 var6 var1 var5 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main6 var3 var5 var1 var0) (and (and (not (<= 0 (+ var3 (- 1)))) (= var2 var3)) (= var4 var1)))) (inv_main16 var3 var5 var2 var1 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main6 var4 var6 var1 var0) (and (and (and (<= 0 (+ var4 (- 1))) (= (+ var1 (- 1)) var5)) (= 1 var2)) (= var3 var4)))) (inv_main19 var4 var6 var3 var1 var5 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main19 var3 var5 var2 var0 var4 var1) (not (or (<= 0 (+ (+ var2 (* (- 1) var1)) (- 1))) (<= 0 (+ (+ var1 (* (- 1) var2)) (- 1))))))) (inv_main16 var3 var5 var2 var0 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main19 var4 var7 var3 var1 var6 var2) (and (and (and (<= 0 (+ (+ var3 (* (- 1) var2)) (- 1))) (not (<= 0 (+ (+ var2 (* (- 1) var3)) (- 1))))) (= (+ var6 (- 1)) var0)) (= (+ var2 1) var5)))) (inv_main19 var4 var7 var3 var1 var0 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (and (not (<= 0 (+ var2 (- 1)))) (= var0 var2)) (= var1 var3))) (inv_main6 var2 var0 var3 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (and (and (<= 0 (+ var3 (- 1))) (= (+ (+ var2 (- 2)) 1) var0)) (= var4 var3)) (= 1 var1))) (inv_main10 var3 var4 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main10 var3 var4 var1 var0 var2) (not (<= 0 (+ var4 (* (- 1) var2))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main6 var2 var3 var1 var0) (and (= (+ var1 (+ (* (- 1) var0) (* (- 1) var2))) 0) (<= 0 (+ (- 1) (* (- 1) var2))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (inv_main6 var1 var2 var0 var0) (<= 0 (+ (- 1) var1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main6 var2 var3 var1 var0) (and (not (= (+ var1 (+ (* (- 1) var0) (* (- 1) var2))) 0)) (not (= var1 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main16 var2 var4 var1 var0 var3) (and (= (+ var0 (+ (* (- 1) var3) (* (- 1) var2))) 0) (<= 0 (+ (- 1) (* (- 1) var2))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main16 var1 var3 var0 var2 var2) (<= 0 (+ (- 1) var1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main16 var2 var4 var1 var0 var3) (and (not (= (+ var0 (+ (* (- 1) var3) (* (- 1) var2))) 0)) (not (= var0 var3)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main16 var2 var4 var1 var0 var3) (not (= var4 var1))))))
(check-sat)

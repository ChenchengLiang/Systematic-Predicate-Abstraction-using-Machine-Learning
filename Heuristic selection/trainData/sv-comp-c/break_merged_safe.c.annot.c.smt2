(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main11 (Int Int) Bool)
(declare-fun inv_main5 (Int Int) Bool)
(declare-fun inv_main6 (Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (= 0 var1) (= 10 var2))) (inv_main5 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main5 var0 var2) (and (not (<= 0 (+ 10 (* (- 1) var2)))) (= var1 10)))) (inv_main6 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main6 var0 var2 var1) (not (<= 0 var1)))) (inv_main11 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main5 var0 var0) (and (and (<= 0 (+ 10 (* (- 1) var0))) (= var2 var0)) (= var1 10)))) (inv_main6 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main5 var1 var3) (and (and (and (not (= var3 var1)) (<= 0 (+ 10 (* (- 1) var3)))) (= (+ var3 1) var0)) (= var2 10)))) (inv_main5 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main6 var0 var2 (+ 10 (* (- 1) var0))) (and (<= 0 (+ 10 (* (- 1) var0))) (= var1 (+ 10 (* (- 1) var0)))))) (inv_main11 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main6 var0 var3 var1) (and (and (not (= var1 (+ 10 (* (- 1) var0)))) (<= 0 var1)) (= (+ var1 (- 1)) var2)))) (inv_main6 var0 var3 var2))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main11 var1 var0) (not (= var1 (+ 10 (* (- 1) var0))))))))
(check-sat)

-------------
inv_main12(k, flag, arg2, arg3, n) :- inv_main12(k, flag, i, j, n), k >= i & i + 1 = arg2 & j + n = arg3.
Head arguments: ListBuffer((k,k), (flag,flag), (arg2,arg2), (arg3,arg3), (n,n))
Body arguments: ListBuffer((k,k), (flag,flag), (i,i), (j,j), (n,n))
Common Arguments:ListBuffer((k,k), (flag,flag), (n,n))
relativeComplimentOfHeadArg:ListBuffer((arg2,arg2), (arg3,arg3))
variables in guard: ListBuffer(k, i)
Data flow:
arg2<-(i + 1)
arg3<-(j + n)
k<-k
flag<-flag
Guard:
((k + -1 * i) >= 0)
dataflow number:2
guard number:1
-------------
inv_main12(k, flag, arg4, j, arg5) :- flag = 1 & 0 = arg4 & 1 = arg5 & 0 = j.
Head arguments: ListBuffer((k,k), (flag,flag), (arg4,arg4), (j,j), (arg5,arg5))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((k,k), (flag,flag), (arg4,arg4), (j,j), (arg5,arg5))
variables in guard: ListBuffer()
Data flow:
flag<-1
arg4<-0
j<-0
arg5<-1
Guard:
dataflow number:4
guard number:0
-------------
inv_main12(k, flag, arg6, j, arg7) :- flag != 1 & 0 = arg6 & 2 = arg7 & 0 = j.
Head arguments: ListBuffer((k,k), (flag,flag), (arg6,arg6), (j,j), (arg7,arg7))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((k,k), (flag,flag), (arg6,arg6), (j,j), (arg7,arg7))
variables in guard: ListBuffer(flag)
Data flow:
flag<-_flag
arg6<-0
j<-0
arg7<-2
Guard:
!((-1 + _flag) = 0)
dataflow number:4
guard number:1
-------------
false :- inv_main12(k, 1, i, j, n), j != i & !(k >= i).
Head arguments: ListBuffer()
Body arguments: ListBuffer((k,k), (1,1), (i,i), (j,j), (n,n))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(j, i, k)
Data flow:
inv_main12_argument_1<-1
Guard:
!((j + -1 * i) = 0)
!((k + -1 * i) >= 0)
dataflow number:0
guard number:2
-----------

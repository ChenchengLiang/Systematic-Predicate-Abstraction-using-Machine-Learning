(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main6 (Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (= 0 var0) (= 1 var2))) (inv_main6 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main6 var3 1 var4) (and (and (and (<= 0 (+ (+ 10 (* (- 1) var3)) (- 1))) (= (+ var3 1) var1)) (= 2 var0)) (= 3 var2)))) (inv_main6 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main6 var1 2 var4) (and (and (and (<= 0 (+ (+ 10 (* (- 1) var1)) (- 1))) (= (+ var1 1) var0)) (= 3 var3)) (= 4 var2)))) (inv_main6 var0 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main6 var2 3 var4) (and (and (and (<= 0 (+ (+ 10 (* (- 1) var2)) (- 1))) (= (+ var2 1) var0)) (= 1 var1)) (= 5 var3)))) (inv_main6 var0 var1 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main6 var1 var4 var3) (and (and (and (and (and (and (not (= var4 4)) (not (= var4 3))) (not (= var4 2))) (not (= var4 1))) (<= 0 (+ (+ 10 (* (- 1) var1)) (- 1)))) (= (+ var1 1) var0)) (= 2 var2)))) (inv_main6 var0 var2 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main6 var2 4 var4) (and (and (and (<= 0 (+ (+ 10 (* (- 1) var2)) (- 1))) (= (+ var2 1) var1)) (= 1 var0)) (= 6 var3)))) (inv_main6 var1 var0 var3))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main6 var0 var1 6) (not (<= 0 (+ (+ 10 (* (- 1) var0)) (- 1))))))))
(check-sat)

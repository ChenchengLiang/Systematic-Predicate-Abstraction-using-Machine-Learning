(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main23 (Int Int Int) Bool)
(declare-fun inv_main27 (Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (and (and (and (and (and (and (and (and (and (<= 0 (+ var3 (- 1))) (<= 0 (+ (+ var2 var0) (* (- 3) var3)))) (<= 0 (+ (+ var0 1000000) (- 1)))) (<= 0 (+ (+ 1000000 (* (- 1) var0)) (- 1)))) (<= 0 (+ (+ var2 1000000) (- 1)))) (<= 0 (+ (+ 1000000 (* (- 1) var2)) (- 1)))) (<= 0 (+ (+ var3 1000000) (- 1)))) (<= 0 (+ (+ 1000000 (* (- 1) var3)) (- 1)))) (= 0 var5)) (= 0 var1)) (= 0 var4))) (inv_main23 var5 var1 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main23 var0 var1 var2) (and (and (and (and (<= 0 (+ (+ var2 (* (- 1) (+ var0 1))) (- 1))) (not (<= 0 (+ (+ (* 3 var0) (* (- 1) var1)) (- 1))))) (= (+ var0 1) var5)) (= (* 2 (+ var0 1)) var4)) (= var3 0)))) (inv_main23 var5 var4 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main23 var1 var2 var3) (and (and (and (<= 0 (+ (+ var2 (* (- 1) var1)) (- 1))) (<= 0 (+ (+ (* 3 var1) (* (- 1) var2)) (- 1)))) (= var0 var1)) (= var4 0)))) (inv_main27 var0 var2 var1 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main23 var1 var3 var4) (and (and (and (and (not (<= 0 (+ (+ var3 (* (- 1) var1)) (- 1)))) (<= 0 (+ (+ (* 3 var1) (* (- 1) var3)) (- 1)))) (= (+ var3 1) var2)) (= var0 var1)) (= var5 0)))) (inv_main23 var0 var2 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main27 var0 var1 var4 var2) (and (and (<= 0 (+ (+ var1 (* (- 1) (+ var4 1))) (- 1))) (= (+ var4 1) var5)) (= var3 0)))) (inv_main27 var0 var1 var5 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main27 var0 var1 var6 var3) (and (and (and (not (<= 0 (+ (+ var1 (* (- 1) (+ var6 1))) (- 1)))) (= (+ var1 1) var2)) (= (+ var6 1) var5)) (= var4 0)))) (inv_main23 var0 var2 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main27 var0 var1 var3 var2) (not (<= 0 (+ (* 2 var2) (* (- 1) (+ var3 (* (- 1) var0))))))))))
(check-sat)

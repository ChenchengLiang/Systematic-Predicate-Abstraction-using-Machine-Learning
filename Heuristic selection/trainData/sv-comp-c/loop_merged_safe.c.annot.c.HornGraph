-------------
inv_main8(n, j1, i2, j2) :- inv_main8(n, j1, i2, j2), i2 >= 0 & i2 + -1 = i2 & j2 + 1 = j2.
Head arguments: ListBuffer((n,n), (j1,j1), (i2,i2), (j2,j2))
Body arguments: ListBuffer((n,n), (j1,j1), (i2,i2), (j2,j2))
Common Arguments:ListBuffer((n,n), (j1,j1))
relativeComplimentOfHeadArg:ListBuffer((i2,i2), (j2,j2))
variables in guard: ListBuffer(i2)
Data flow:
i2<-(i2 + -1)
j2<-(j2 + 1)
n<-n
j1<-j1
Guard:
(i2 >= 0)
dataflow number:2
guard number:1
-------------
inv_main8(n, j1, i2, j2) :- inv_main11(n, i1, j1), !(n >= i1) & i2 = n & j2 = 0.
Head arguments: ListBuffer((n,n), (j1,j1), (i2,i2), (j2,j2))
Body arguments: ListBuffer((n,n), (i1,i1), (j1,j1))
Common Arguments:ListBuffer((n,n), (j1,j1))
relativeComplimentOfHeadArg:ListBuffer((i2,i2), (j2,j2))
variables in guard: ListBuffer(n, i1)
Data flow:
i2<-n
j2<-0
j1<-j1
Guard:
!((n + -1 * i1) >= 0)
dataflow number:2
guard number:1
-------------
inv_main11(n, arg4, arg5) :- inv_main11(n, i1, j1), n >= i1 & i1 + 1 = arg4 & j1 + 1 = arg5 & i2 = n & j2 = 0.
Head arguments: ListBuffer((n,n), (arg4,arg4), (arg5,arg5))
Body arguments: ListBuffer((n,n), (i1,i1), (j1,j1))
Common Arguments:ListBuffer((n,n))
relativeComplimentOfHeadArg:ListBuffer((arg4,arg4), (arg5,arg5))
variables in guard: ListBuffer(n, i1, i2, j2)
Data flow:
arg4<-(i1 + 1)
arg5<-(j1 + 1)
n<-n
Guard:
((n + -1 * i1) >= 0)
((i2 + -1 * n) = 0)
(j2 = 0)
dataflow number:2
guard number:3
-------------
inv_main8(n, j1, arg6, arg7) :- !(arg6 >= 0) & n = arg6 & 0 = arg7 & 0 = i1 & 0 = j1.
Head arguments: ListBuffer((n,n), (j1,j1), (arg6,arg6), (arg7,arg7))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((n,n), (j1,j1), (arg6,arg6), (arg7,arg7))
variables in guard: ListBuffer(arg6, i1)
Data flow:
n<-_n
j1<-0
arg6<-_arg6
arg7<-0
Guard:
((-1 + -1 * _arg6) >= 0)
(-1 * i1 = 0)
((_n + -1 * _arg6) = 0)
dataflow number:4
guard number:3
-------------
inv_main11(n, arg8, arg9) :- arg10 >= i1 & 0 = i1 & 0 = j1 & i1 + 1 = arg8 & j1 + 1 = arg9 & n = arg10 & 0 = arg11.
Head arguments: ListBuffer((n,n), (arg8,arg8), (arg9,arg9))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((n,n), (arg8,arg8), (arg9,arg9))
variables in guard: ListBuffer(arg10, i1, j1, arg11)
Data flow:
n<-arg10
arg8<-(i1 + 1)
arg9<-(j1 + 1)
Guard:
((arg10 + -1 * i1) >= 0)
(-1 * i1 = 0)
(-1 * j1 = 0)
(-1 * arg11 = 0)
dataflow number:3
guard number:4
-------------
false :- inv_main11(n, i1, j1), i1 != j1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((n,n), (i1,i1), (j1,j1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(i1, j1)
Data flow:
Guard:
!((i1 + -1 * j1) = 0)
dataflow number:0
guard number:1
-------------
false :- inv_main8(n, j1, i2, j2), i2 + -1 + j2 + 1 != n & i2 >= 0.
Head arguments: ListBuffer()
Body arguments: ListBuffer((n,n), (j1,j1), (i2,i2), (j2,j2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(i2, j2, n)
Data flow:
Guard:
!((((i2 + -1) + (j2 + 1)) + -1 * n) = 0)
(i2 >= 0)
dataflow number:0
guard number:2
-------------
false :- inv_main8(n, j1, i2, j2), j1 != j2 & !(i2 >= 0).
Head arguments: ListBuffer()
Body arguments: ListBuffer((n,n), (j1,j1), (i2,i2), (j2,j2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(j1, j2, i2)
Data flow:
Guard:
!((j1 + -1 * j2) = 0)
!(i2 >= 0)
dataflow number:0
guard number:2
-----------

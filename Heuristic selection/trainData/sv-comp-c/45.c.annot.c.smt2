(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main23 (Int Int Int Int) Bool)
(declare-fun inv_main25 (Int Int Int Int) Bool)
(declare-fun inv_main8 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (and (and (= 0 var3) (= 0 var1)) (= 0 var0)) (= 0 var2))) (inv_main8 var4 var3 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main23 var4 var3 var0 var1) (not (= var2 0)))) (inv_main25 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main25 var5 var4 var0 var2) (and (= (+ var5 var4) var1) (= (+ (+ var5 var4) 1) var3)))) (inv_main23 var5 var4 var3 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main25 var8 var7 (+ (* 2 var2) 1) (* 2 var1)) (and (and (and (and (and (<= 0 (+ (+ (* 2 var2) 1) (- 1))) (not (= var4 0))) (= (+ var3 (* (- 2) var1)) 0)) (= var0 (+ (* 2 var2) 1))) (= (+ var8 1) var6)) (= (+ var7 1) var5)))) (inv_main25 var6 var5 var0 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main25 var7 var6 (+ (* 2 var3) 1) (+ (* 2 var4) 1)) (and (and (and (and (and (= (+ var1 (* (- 1) var7)) 1) (= (+ var2 (* (- 2) var4)) 1)) (= (+ var0 (* (- 2) var3)) 1)) (not (= var5 0))) (<= 0 var3)) (<= 0 var4)))) (inv_main25 var1 var6 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main25 var7 var6 (+ (* 2 var3) 1) (+ (* 2 var4) (- 1))) (and (and (and (and (and (= (+ var1 (* (- 1) var7)) 1) (= (+ var2 (* (- 2) var4)) (- 1))) (= (+ var0 (* (- 2) var3)) 1)) (not (= var5 0))) (<= 0 var3)) (<= 0 (* (- 1) var4))))) (inv_main25 var1 var6 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main25 var7 var6 (+ (* 2 var1) var0) (* 2 var5)) (and (and (and (and (and (and (= (+ var3 (* (- 1) var6)) 1) (= (+ var8 (+ (* (- 2) var1) (* (- 1) var0))) 0)) (not (= var4 0))) (not (= var0 (- 1)))) (<= 0 (* (- 1) var0))) (<= 0 (+ 1 var0))) (= (* 2 var5) var2)))) (inv_main25 var7 var3 var8 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main25 var7 var6 (+ (* 2 var1) var0) (* 2 var5)) (and (and (and (and (and (and (= (+ var3 (* (- 1) var6)) 1) (= (+ var8 (+ (* (- 2) var1) (* (- 1) var0))) 0)) (not (= var4 0))) (<= 0 (* (- 1) var1))) (<= 0 (* (- 1) var0))) (<= 0 (+ 1 var0))) (= (* 2 var5) var2)))) (inv_main25 var7 var3 var8 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main25 var5 var4 (+ (* 2 var6) (- 1)) (+ (* 2 var3) 1)) (and (and (and (and (= (+ var0 (* (- 2) var6)) (- 1)) (= (+ var1 (* (- 2) var3)) 1)) (not (= var2 0))) (<= 0 (* (- 1) var6))) (<= 0 var3)))) (inv_main25 var5 var4 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main25 var5 var4 (* 2 var6) (+ (* 2 var3) 1)) (and (and (and (= (+ var0 (* (- 2) var6)) 0) (= (+ var1 (* (- 2) var3)) 1)) (not (= var2 0))) (<= 0 var3)))) (inv_main25 var5 var4 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main25 var5 var4 (+ (* 2 var6) (- 1)) (+ (* 2 var3) (- 1))) (and (and (and (and (= (+ var0 (* (- 2) var6)) (- 1)) (= (+ var1 (* (- 2) var3)) (- 1))) (not (= var2 0))) (<= 0 (* (- 1) var6))) (<= 0 (* (- 1) var3))))) (inv_main25 var5 var4 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main25 var5 var4 (* 2 var6) (+ (* 2 var3) (- 1))) (and (and (and (= (+ var0 (* (- 2) var6)) 0) (= (+ var1 (* (- 2) var3)) (- 1))) (not (= var2 0))) (<= 0 (* (- 1) var3))))) (inv_main25 var5 var4 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (or (not (and (inv_main8 var2 var8 var7 var1 var6) (and (and (and (and (and (not (= var2 0)) (not (= var9 0))) (= (+ var8 1) var5)) (= (+ var7 1) var4)) (= (+ (+ var1 (+ var7 1)) 1) var3)) (= (+ var6 (+ var8 1)) var0)))) (inv_main8 var2 var5 var4 var3 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (or (not (and (inv_main8 0 var8 var7 var3 var6) (and (and (and (and (and (not (= var9 0)) (= (+ var8 1) var1)) (= (+ var7 1) var5)) (= (+ var3 (+ var7 1)) var4)) (= (+ var6 (+ var8 1)) var0)) (= var2 0)))) (inv_main8 var2 var1 var5 var4 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main8 var2 var7 var4 var1 var6) (and (and (and (<= 0 (+ var1 (* (- 1) var6))) (= var5 var4)) (= 1 var0)) (= 0 var3)))) (inv_main23 var5 var4 var0 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main8 var4 var7 var6 var3 var5) (and (and (and (not (<= 0 (+ var3 (* (- 1) var5)))) (= (+ var6 1) var2)) (= 1 var1)) (= 0 var0)))) (inv_main23 var2 var6 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main23 var3 var2 var0 var1) (not (= var3 var2))))))
(check-sat)

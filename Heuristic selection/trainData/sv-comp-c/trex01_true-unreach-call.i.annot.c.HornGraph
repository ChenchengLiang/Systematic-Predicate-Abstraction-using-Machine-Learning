-------------
inv_main18(k, arg0) :- inv_main18(k, z), k - z >= 1 & 2*z = arg0 & d = 1.
Head arguments: ListBuffer((k,k), (arg0,arg0))
Body arguments: ListBuffer((k,k), (z,z))
Common Arguments:ListBuffer((k,k))
relativeComplimentOfHeadArg:ListBuffer((arg0,arg0))
variables in guard: ListBuffer(k, z, d)
Data flow:
arg0<-2 * z
k<-k
Guard:
(((k + -1 * z) + -1) >= 0)
((d + -1) = 0)
dataflow number:1
guard number:2
-------------
inv_main45(k, arg1) :- inv_main45(k, z), k - z >= 1 & 2*z = arg1 & c = 0 & d = 2.
Head arguments: ListBuffer((k,k), (arg1,arg1))
Body arguments: ListBuffer((k,k), (z,z))
Common Arguments:ListBuffer((k,k))
relativeComplimentOfHeadArg:ListBuffer((arg1,arg1))
variables in guard: ListBuffer(k, z, c, d)
Data flow:
arg1<-2 * z
k<-k
Guard:
(((k + -1 * z) + -1) >= 0)
(c = 0)
((d + -2) = 0)
dataflow number:1
guard number:3
-------------
inv_main18(__eval32, arg3) :- __eval0 != 0 & 1 = arg2 & 1 = arg3.
Head arguments: ListBuffer((__eval32,__eval32), (arg3,arg3))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((__eval32,__eval32), (arg3,arg3))
variables in guard: ListBuffer(__eval0, arg2)
Data flow:
arg3<-1
Guard:
!(__eval0 = 0)
((1 + -1 * arg2) = 0)
dataflow number:1
guard number:2
-------------
inv_main45(__eval147, arg5) :- __eval0 = 0 & 2 = arg4 & 1 = arg5.
Head arguments: ListBuffer((__eval147,__eval147), (arg5,arg5))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((__eval147,__eval147), (arg5,arg5))
variables in guard: ListBuffer(__eval0, arg4)
Data flow:
arg5<-1
Guard:
(__eval0 = 0)
((2 + -1 * arg4) = 0)
dataflow number:1
guard number:2
-------------
false :- inv_main18(k, z), !(z >= 1) & !(k - z >= 1).
Head arguments: ListBuffer()
Body arguments: ListBuffer((k,k), (z,z))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(z, k)
Data flow:
Guard:
!((z + -1) >= 0)
!(((k + -1 * z) + -1) >= 0)
dataflow number:0
guard number:2
-------------
false :- inv_main45(k, z), !(z >= 1) & !(k - z >= 1).
Head arguments: ListBuffer()
Body arguments: ListBuffer((k,k), (z,z))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(z, k)
Data flow:
Guard:
!((z + -1) >= 0)
!(((k + -1 * z) + -1) >= 0)
dataflow number:0
guard number:2
-----------

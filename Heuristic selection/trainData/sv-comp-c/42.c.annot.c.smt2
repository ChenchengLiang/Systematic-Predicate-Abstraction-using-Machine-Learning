(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main25 () Bool)
(declare-fun inv_main6 (Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (and (and (not (= var1 0)) (= 0 var0)) (= 1 var3)) (= 1 var2))) (inv_main6 var1 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (and (and (= var1 0) (= 1 var0)) (= 1 var3)) (= 1 var2))) (inv_main6 var1 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main6 var0 var8 var7 var3) (and (and (and (and (and (and (<= 0 (+ (+ var8 var7) (- 1))) (= (+ var8 var7) (+ (* 2 var1) 1))) (not (= var0 0))) (not (= var6 0))) (= (+ var8 1) var5)) (= (+ var7 1) var4)) (= (+ var8 var7) var2)))) (inv_main6 var0 var5 var4 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main6 var1 var8 var7 var2) (and (and (and (and (= (+ var4 (+ (* (- 1) var7) (* (- 1) var8))) 0) (= (+ var0 (* (- 1) var8)) 2)) (= (+ (* 2 var6) (+ (* (- 1) var7) (+ (* (- 1) var8) var3))) 0)) (and (and (not (= var5 0)) (not (= var1 0))) (not (= var3 (- 1))))) (and (<= 0 (* (- 1) var3)) (<= 0 (+ 1 var3)))))) (inv_main6 var1 var0 var7 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main6 var1 var8 var7 var2) (and (and (and (and (= (+ var4 (+ (* (- 1) var7) (* (- 1) var8))) 0) (= (+ var0 (* (- 1) var8)) 2)) (= (+ (* 2 var6) (+ (* (- 1) var7) (+ (* (- 1) var8) var3))) 0)) (and (not (= var5 0)) (not (= var1 0)))) (and (and (<= 0 (+ (- 1) (+ (* (- 1) var7) (* (- 1) var8)))) (<= 0 (* (- 1) var3))) (<= 0 (+ 1 var3)))))) (inv_main6 var1 var0 var7 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main6 0 var7 var6 var2) (and (and (and (and (and (<= 0 (+ (+ (+ var7 var6) 1) (- 1))) (= (+ (+ var7 var6) 1) (+ (* 2 var5) 1))) (not (= var4 0))) (= (+ (+ var6 1) 1) var1)) (= (+ (+ var7 var6) 1) var3)) (= var0 0)))) (inv_main6 var0 var7 var1 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (or (not (and (inv_main6 0 var9 var8 var4) (and (and (and (and (and (and (and (and (= (+ var3 (+ (* (- 1) var8) (* (- 1) var9))) 1) (= (+ var5 (* (- 1) var8)) 1)) (= (+ var2 (* (- 1) var9)) 1)) (= (+ (* 2 var0) (+ (* (- 1) var8) (+ (* (- 1) var9) var6))) 1)) (not (= var7 0))) (not (= var6 (- 1)))) (<= 0 (* (- 1) var6))) (<= 0 (+ 1 var6))) (= var1 0)))) (inv_main6 var1 var2 var5 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (or (not (and (inv_main6 0 var9 var8 var4) (and (and (and (and (and (and (and (and (= (+ var3 (+ (* (- 1) var8) (* (- 1) var9))) 1) (= (+ var5 (* (- 1) var8)) 1)) (= (+ var2 (* (- 1) var9)) 1)) (= (+ (* 2 var0) (+ (* (- 1) var8) (+ (* (- 1) var9) var6))) 1)) (not (= var7 0))) (<= 0 (+ (- 2) (+ (* (- 1) var8) (* (- 1) var9))))) (<= 0 (* (- 1) var6))) (<= 0 (+ 1 var6))) (= var1 0)))) (inv_main6 var1 var2 var5 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main6 var0 var6 var5 var3) (and (and (and (= (+ var4 (* (- 1) var3)) 1) (= (+ (* 2 var2) (+ (* (- 1) var3) var1)) 1)) (and (not (= var0 0)) (not (= var1 (- 1))))) (and (<= 0 (* (- 1) var1)) (<= 0 (+ 1 var1)))))) inv_main25)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main6 var0 var6 var5 var3) (and (and (and (= (+ var4 (* (- 1) var3)) 1) (= (+ (* 2 var2) (+ (* (- 1) var3) var1)) 1)) (not (= var0 0))) (and (and (<= 0 (+ (- 2) (* (- 1) var3))) (<= 0 (* (- 1) var1))) (<= 0 (+ 1 var1)))))) inv_main25)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main6 0 var4 var3 (+ (* 2 var0) var2)) (and (and (and (= (+ var1 (+ (* (- 2) var0) (* (- 1) var2))) 0) (not (= var2 (- 1)))) (<= 0 (* (- 1) var2))) (<= 0 (+ 1 var2))))) inv_main25)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main6 0 var4 var3 (+ (* 2 var0) var2)) (and (and (and (= (+ var1 (+ (* (- 2) var0) (* (- 1) var2))) 0) (<= 0 (* (- 1) var0))) (<= 0 (* (- 1) var2))) (<= 0 (+ 1 var2))))) inv_main25)))
(assert (not inv_main25))
(check-sat)

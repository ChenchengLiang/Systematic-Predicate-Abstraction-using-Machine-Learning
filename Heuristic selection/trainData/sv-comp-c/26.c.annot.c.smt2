(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main3 (Int Int Int Int) Bool)
(declare-fun inv_main5 (Int Int Int Int) Bool)
(declare-fun inv_main8 (Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (and (and (= 1 var1) (= 0 var0)) (= 0 var3)) (= 0 var2))) (inv_main3 var1 var0 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main3 var2 var1 var4 var3) (not (= var0 0)))) (inv_main5 var2 var1 var4 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (inv_main5 var1 var0 var3 var2)) (inv_main8 var1 var0 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (inv_main8 var1 var0 var3 var2)) (inv_main3 var1 var0 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main8 var1 var0 var6 var3) (and (and (not (= var4 0)) (= (+ var6 var3) var2)) (= (+ (+ var6 var3) 1) var5)))) (inv_main8 var5 var2 var6 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main5 (+ (* 2 var0) 1) (* 2 var6) var8 var5) (and (and (and (and (and (<= 0 (+ (+ (* 2 var0) 1) (- 1))) (not (= var3 0))) (= (+ var2 (* (- 2) var6)) 0)) (= var1 (+ (* 2 var0) 1))) (= (+ var8 1) var7)) (= (+ var5 1) var4)))) (inv_main5 var1 var2 var7 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main5 (+ (* 2 var4) 1) (+ (* 2 var5) 1) var7 var3) (and (and (and (and (and (= (+ var6 (* (- 1) var7)) 1) (= (+ var1 (* (- 2) var5)) 1)) (= (+ var0 (* (- 2) var4)) 1)) (not (= var2 0))) (<= 0 var4)) (<= 0 var5)))) (inv_main5 var0 var1 var6 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main5 (+ (* 2 var4) 1) (+ (* 2 var5) (- 1)) var7 var3) (and (and (and (and (and (= (+ var6 (* (- 1) var7)) 1) (= (+ var1 (* (- 2) var5)) (- 1))) (= (+ var0 (* (- 2) var4)) 1)) (not (= var2 0))) (<= 0 var4)) (<= 0 (* (- 1) var5))))) (inv_main5 var0 var1 var6 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main5 (+ (* 2 var7) var0) (* 2 var3) var8 var5) (and (and (and (and (and (and (= (+ var6 (* (- 1) var5)) 1) (= (+ var2 (+ (* (- 2) var7) (* (- 1) var0))) 0)) (not (= var4 0))) (not (= var0 (- 1)))) (<= 0 (* (- 1) var0))) (<= 0 (+ 1 var0))) (= (* 2 var3) var1)))) (inv_main5 var2 var1 var8 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main5 (+ (* 2 var7) var0) (* 2 var3) var8 var5) (and (and (and (and (and (and (= (+ var6 (* (- 1) var5)) 1) (= (+ var2 (+ (* (- 2) var7) (* (- 1) var0))) 0)) (not (= var4 0))) (<= 0 (* (- 1) var7))) (<= 0 (* (- 1) var0))) (<= 0 (+ 1 var0))) (= (* 2 var3) var1)))) (inv_main5 var2 var1 var8 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main5 (+ (* 2 var4) (- 1)) (+ (* 2 var3) 1) var6 var5) (and (and (and (and (= (+ var1 (* (- 2) var4)) (- 1)) (= (+ var0 (* (- 2) var3)) 1)) (not (= var2 0))) (<= 0 (* (- 1) var4))) (<= 0 var3)))) (inv_main5 var1 var0 var6 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main5 (* 2 var4) (+ (* 2 var3) 1) var6 var5) (and (and (and (= (+ var1 (* (- 2) var4)) 0) (= (+ var0 (* (- 2) var3)) 1)) (not (= var2 0))) (<= 0 var3)))) (inv_main5 var1 var0 var6 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main5 (+ (* 2 var4) (- 1)) (+ (* 2 var3) (- 1)) var6 var5) (and (and (and (and (= (+ var1 (* (- 2) var4)) (- 1)) (= (+ var0 (* (- 2) var3)) (- 1))) (not (= var2 0))) (<= 0 (* (- 1) var4))) (<= 0 (* (- 1) var3))))) (inv_main5 var1 var0 var6 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main5 (* 2 var4) (+ (* 2 var3) (- 1)) var6 var5) (and (and (and (= (+ var1 (* (- 2) var4)) 0) (= (+ var0 (* (- 2) var3)) (- 1))) (not (= var2 0))) (<= 0 (* (- 1) var3))))) (inv_main5 var1 var0 var6 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main3 var1 var0 var3 var2) (not (= var3 var2))))))
(check-sat)

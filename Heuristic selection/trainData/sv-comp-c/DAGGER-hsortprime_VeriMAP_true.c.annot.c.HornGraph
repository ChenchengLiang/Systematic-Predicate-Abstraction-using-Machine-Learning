-------------
inv_main23(l, r, j) :- 0 >= 2*l - n + -1 & 2*l >= n & j = 2*l & n >= 2 & i = l & r = n.
Head arguments: ListBuffer((l,l), (r,r), (j,j))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((l,l), (r,r), (j,j))
variables in guard: ListBuffer(l, n)
Data flow:
l<-i
l<-_l
r<-n
j<-_j
Guard:
((1 + (-2 * _l + n)) >= 0)
((2 * _l + -1 * n) >= 0)
((n + -2) >= 0)
((_j + -2 * _l) = 0)
dataflow number:3
guard number:4
-------------
inv_main23(l, r, arg1) :- inv_main23(l, r, j), r - j >= 1 & i != 0 & i != 0 & j + 1 = arg0 & 2*j + 2 = arg1.
Head arguments: ListBuffer((l,l), (r,r), (arg1,arg1))
Body arguments: ListBuffer((l,l), (r,r), (j,j))
Common Arguments:ListBuffer((l,l), (r,r))
relativeComplimentOfHeadArg:ListBuffer((arg1,arg1))
variables in guard: ListBuffer(r, j, i, arg0)
Data flow:
arg1<-(2 * j + 2)
l<-l
r<-r
Guard:
(((r + -1 * j) + -1) >= 0)
!(i = 0)
!(i = 0)
(((j + 1) + -1 * arg0) = 0)
dataflow number:1
guard number:4
-------------
inv_main23(l, r, arg2) :- inv_main23(l, r, j), 0 >= j - r & i != 0 & i != 0 & 2*j = arg2.
Head arguments: ListBuffer((l,l), (r,r), (arg2,arg2))
Body arguments: ListBuffer((l,l), (r,r), (j,j))
Common Arguments:ListBuffer((l,l), (r,r))
relativeComplimentOfHeadArg:ListBuffer((arg2,arg2))
variables in guard: ListBuffer(j, r, i)
Data flow:
arg2<-2 * j
l<-l
r<-r
Guard:
(-1 * (j + -1 * r) >= 0)
!(i = 0)
!(i = 0)
dataflow number:1
guard number:3
-------------
inv_main23(arg3, r, arg5) :- inv_main23(l, r, j), r >= 2 & l >= 2 & i != 0 & i != 0 & l + -1 = arg3 & l + -1 = arg4 & 2*l + -2 = arg5.
Head arguments: ListBuffer((arg3,arg3), (r,r), (arg5,arg5))
Body arguments: ListBuffer((l,l), (r,r), (j,j))
Common Arguments:ListBuffer((r,r))
relativeComplimentOfHeadArg:ListBuffer((arg3,arg3), (arg5,arg5))
variables in guard: ListBuffer(r, l, i, arg4)
Data flow:
arg3<-(l + -1)
arg5<-(2 * l + -2)
r<-r
Guard:
((r + -2) >= 0)
((l + -2) >= 0)
!(i = 0)
!(i = 0)
(((l + -1) + -1 * arg4) = 0)
dataflow number:2
guard number:5
-------------
inv_main23(l, arg6, arg8) :- inv_main23(arg7, r, j), r + -1 >= 3 & 1 >= arg7 & i != 0 & 2*arg7 = arg8 & l = arg7 & r + -1 = arg6.
Head arguments: ListBuffer((l,l), (arg6,arg6), (arg8,arg8))
Body arguments: ListBuffer((arg7,arg7), (r,r), (j,j))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((l,l), (arg6,arg6), (arg8,arg8))
variables in guard: ListBuffer(r, arg7, i)
Data flow:
l<-arg7
arg6<-(r + -1)
arg8<-2 * arg7
Guard:
(((r + -1) + -3) >= 0)
((1 + -1 * arg7) >= 0)
!(i = 0)
dataflow number:3
guard number:3
-------------
false :- inv_main23(l, r, j), !(r - 2*l >= -1).
Head arguments: ListBuffer()
Body arguments: ListBuffer((l,l), (r,r), (j,j))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(l, r)
Data flow:
Guard:
!(((-2 * l + r) + 1) >= 0)
dataflow number:0
guard number:1
-----------

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main11 (Int Int Int Int) Bool)
(declare-fun inv_main15 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (and (and (and (<= 0 (+ var2 (- 1))) (<= 0 (+ var0 (* (- 1) var2)))) (= 0 var3)) (= 0 var4)) (= 0 var1))) (inv_main11 var3 var4 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main11 var4 var0 var3 var1) (and (and (and (and (<= 0 (+ (+ var3 (* (- 1) (+ var4 1))) (- 1))) (not (<= 0 (+ (+ var3 (* (- 1) var0)) (- 1))))) (= (+ var4 1) var5)) (= 0 var6)) (= var2 0)))) (inv_main11 var5 var6 var3 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main11 var5 var2 var4 var1) (and (and (and (<= 0 (+ (+ (+ var4 var1) (* (- 1) var2)) (- 1))) (<= 0 (+ (+ var4 (* (- 1) var2)) (- 1)))) (= var0 var2)) (= var3 0)))) (inv_main15 var5 var0 var2 var4 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main11 var5 var1 var4 var2) (and (and (and (not (<= 0 (+ (+ (+ var4 var2) (* (- 1) var1)) (- 1)))) (<= 0 (+ (+ var4 (* (- 1) var1)) (- 1)))) (= (+ var1 1) var0)) (= var3 0)))) (inv_main11 var5 var0 var4 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main15 var4 var0 var5 var3 var1) (and (and (<= 0 (+ (+ (+ var3 var1) (* (- 1) (+ var5 1))) (- 1))) (= (+ var5 1) var6)) (= var2 0)))) (inv_main15 var4 var0 var6 var3 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main15 var6 var0 var7 var5 var1) (and (and (and (not (<= 0 (+ (+ (+ var5 var1) (* (- 1) (+ var7 1))) (- 1)))) (= (+ var0 1) var3)) (= (+ var7 1) var2)) (= var4 0)))) (inv_main11 var6 var3 var5 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main15 var3 var0 var4 var2 var1) (not (<= 0 (+ (+ (+ var2 var4) var1) (* (- 1) (+ var3 var0)))))))))
(check-sat)

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main10 (Int Int Int Int) Bool)
(declare-fun inv_main24 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main24 var5 var4 var3 var0 var1) (and (<= 0 (+ (+ var4 (* (- 1) var3)) (- 1))) (= (+ var3 1) var2)))) (inv_main24 var5 var4 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (and (and (<= 0 (+ var0 (- 1))) (<= 0 (+ (+ var0 (* (- 1) (+ var2 1))) (- 1)))) (= 0 var3)) (= 0 var1))) (inv_main10 var3 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main10 var5 var4 var0 var3) (and (and (and (<= 0 (+ (+ var0 (* (- 1) (+ var5 4))) (- 1))) (not (<= 0 (+ (+ var3 (* (- 1) var4)) (- 1))))) (= (+ var5 4) var2)) (= (+ var5 4) var1)))) (inv_main10 var2 var1 var0 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main10 var6 var5 var0 var2) (and (and (and (and (<= 0 var5) (not (= var3 0))) (<= 0 (+ (+ var2 (* (- 1) var5)) (- 1)))) (= (+ var5 1) var1)) (= 0 var4)))) (inv_main24 var6 var1 var4 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main10 var6 var5 var0 var4) (and (and (and (and (not (<= 0 var5)) (not (= var2 0))) (<= 0 (+ (+ var4 (* (- 1) var5)) (- 1)))) (= (+ var5 1) var1)) (= 0 var3)))) (inv_main24 var6 var1 var3 var0 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main24 var4 var3 var2 var0 var1) (not (<= 0 (+ (+ var3 (* (- 1) var2)) (- 1)))))) (inv_main10 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main10 var4 var3 var0 var2) (and (and (<= 0 (+ (+ (+ (+ var0 var3) 5) (* (- 1) var4)) (- 1))) (<= 0 (+ (+ var2 (* (- 1) var3)) (- 1)))) (= (+ var3 2) var1)))) (inv_main10 var4 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main10 var4 var3 var1 var2) (and (and (not (<= 0 (+ (+ (+ (+ var1 var3) 5) (* (- 1) var4)) (- 1)))) (<= 0 (+ (+ var2 (* (- 1) var3)) (- 1)))) (= (+ var3 2) var0)))) (inv_main10 var4 var0 var1 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main10 var4 var3 var0 var1) (not (or (<= 0 var3) (or (= var2 0) (not (<= 0 (+ (+ var1 (* (- 1) var3)) (- 1)))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main10 var3 var2 var0 var1) (and (not (<= 0 (+ (+ (+ (+ var0 var2) 5) (* (- 1) var3)) (- 1)))) (<= 0 (+ (+ var1 (* (- 1) var2)) (- 1))))))))
(check-sat)

-------------
inv_main8(arg4, i1, j1) :- -1*n + 1 >= 1 & 1 = arg4 & 1 = i1 & 0 = j1 & 1 = i2 & 2 = j2.
Head arguments: ListBuffer((arg4,arg4), (i1,i1), (j1,j1))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((arg4,arg4), (i1,i1), (j1,j1))
variables in guard: ListBuffer(n, i2, j2)
Data flow:
arg4<-1
i1<-1
j1<-0
Guard:
(((1 + -1 * n) + -1) >= 0)
((1 + -1 * i2) = 0)
((2 + -1 * j2) = 0)
dataflow number:3
guard number:3
-------------
inv_main8(n, i1, j1) :- !(-1*n + 1 >= 1) & 1 = i1 & 0 = j1 & 1 = i2 & 2 = j2.
Head arguments: ListBuffer((n,n), (i1,i1), (j1,j1))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((n,n), (i1,i1), (j1,j1))
variables in guard: ListBuffer(n, i2, j2)
Data flow:
n<-_n
i1<-1
j1<-0
Guard:
((-1 + _n) >= 0)
((1 + -1 * i2) = 0)
((2 + -1 * j2) = 0)
dataflow number:3
guard number:3
-------------
inv_main8(n, arg6, j1) :- inv_main8(n, i1, j1), n >= i1 & i1 + 1 = arg6 & j1 + 2 = j1 & i2 = 1 & j2 = 2.
Head arguments: ListBuffer((n,n), (arg6,arg6), (j1,j1))
Body arguments: ListBuffer((n,n), (i1,i1), (j1,j1))
Common Arguments:ListBuffer((n,n))
relativeComplimentOfHeadArg:ListBuffer((arg6,arg6), (j1,j1))
variables in guard: ListBuffer(n, i1, i2, j2)
Data flow:
arg6<-(i1 + 1)
j1<-(j1 + 2)
n<-n
Guard:
((n + -1 * i1) >= 0)
((i2 + -1) = 0)
((j2 + -2) = 0)
dataflow number:2
guard number:3
-------------
inv_main15(j1, j2) :- inv_main8(n, i1, j1), !(n + -1 >= 1) & !(n >= i1) & i2 = 1 & j2 = 2.
Head arguments: ListBuffer((j1,j1), (j2,j2))
Body arguments: ListBuffer((n,n), (i1,i1), (j1,j1))
Common Arguments:ListBuffer((j1,j1))
relativeComplimentOfHeadArg:ListBuffer((j2,j2))
variables in guard: ListBuffer(n, i1, i2)
Data flow:
j2<-2
j1<-j1
Guard:
!(((n + -1) + -1) >= 0)
!((n + -1 * i1) >= 0)
((i2 + -1) = 0)
dataflow number:1
guard number:3
-------------
inv_main18(n, j1, arg7, arg8) :- inv_main8(n, i1, j1), n - i2 >= 1 & !(n >= i1) & i2 = 1 & j2 = 2 & i2 + 1 = arg7 & j2 + 2 = arg8.
Head arguments: ListBuffer((n,n), (j1,j1), (arg7,arg7), (arg8,arg8))
Body arguments: ListBuffer((n,n), (i1,i1), (j1,j1))
Common Arguments:ListBuffer((n,n), (j1,j1))
relativeComplimentOfHeadArg:ListBuffer((arg7,arg7), (arg8,arg8))
variables in guard: ListBuffer(n, i2, i1, j2)
Data flow:
arg7<-(i2 + 1)
arg8<-(j2 + 2)
n<-n
j1<-j1
Guard:
(((n + -1 * i2) + -1) >= 0)
!((n + -1 * i1) >= 0)
((i2 + -1) = 0)
((j2 + -2) = 0)
dataflow number:2
guard number:4
-------------
inv_main15(j1, j2) :- inv_main18(n, j1, i2, j2), !(n - i2 >= 1).
Head arguments: ListBuffer((j1,j1), (j2,j2))
Body arguments: ListBuffer((n,n), (j1,j1), (i2,i2), (j2,j2))
Common Arguments:ListBuffer((j1,j1), (j2,j2))
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(n, i2)
Data flow:
j1<-j1
j2<-j2
Guard:
!(((n + -1 * i2) + -1) >= 0)
dataflow number:0
guard number:1
-------------
inv_main18(n, j1, arg9, arg10) :- inv_main18(n, j1, i2, j2), n - i2 >= 1 & i2 + 1 = arg9 & j2 + 2 = arg10.
Head arguments: ListBuffer((n,n), (j1,j1), (arg9,arg9), (arg10,arg10))
Body arguments: ListBuffer((n,n), (j1,j1), (i2,i2), (j2,j2))
Common Arguments:ListBuffer((n,n), (j1,j1))
relativeComplimentOfHeadArg:ListBuffer((arg9,arg9), (arg10,arg10))
variables in guard: ListBuffer(n, i2)
Data flow:
arg9<-(i2 + 1)
arg10<-(j2 + 2)
n<-n
j1<-j1
Guard:
(((n + -1 * i2) + -1) >= 0)
dataflow number:2
guard number:1
-------------
false :- inv_main8(n, i1, j1), j1 + 2 != 2*i1 & n >= i1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((n,n), (i1,i1), (j1,j1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(j1, i1, n)
Data flow:
Guard:
!(((j1 + 2) + -2 * i1) = 0)
((n + -1 * i1) >= 0)
dataflow number:0
guard number:2
-------------
false :- inv_main18(n, j1, i2, j2), j2 != 2*i2.
Head arguments: ListBuffer()
Body arguments: ListBuffer((n,n), (j1,j1), (i2,i2), (j2,j2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(j2, i2)
Data flow:
Guard:
!((j2 + -2 * i2) = 0)
dataflow number:0
guard number:1
-------------
false :- inv_main15(j1, j2), j1 != j2.
Head arguments: ListBuffer()
Body arguments: ListBuffer((j1,j1), (j2,j2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(j1, j2)
Data flow:
Guard:
!((j1 + -1 * j2) = 0)
dataflow number:0
guard number:1
-----------

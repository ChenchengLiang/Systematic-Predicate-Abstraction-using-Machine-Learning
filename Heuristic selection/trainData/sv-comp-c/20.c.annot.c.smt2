(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main30 (Int Int) Bool)
(declare-fun inv_main35 () Bool)
(declare-fun inv_main6 (Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main6 var3 var1 var2 var0 var0 var8 var6) (and (and (and (and (and (not (= var5 0)) (<= 0 (+ (+ var8 (* (- 1) var0)) (- 1)))) (= var10 var0)) (= (+ var0 1) var7)) (= (+ var3 1) var9)) (= (+ var1 (- 1)) var4)))) (inv_main6 var9 var4 var2 var7 var0 var8 var10))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main6 var4 var2 var3 var1 var1 var8 var7) (and (and (and (<= 0 (+ (+ var8 (* (- 1) var1)) (- 1))) (= (+ var1 1) var5)) (= (+ var4 1) var0)) (= (+ var2 (- 1)) var6)))) (inv_main6 var0 var6 var3 var5 var1 var8 var7))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main6 var5 var3 var4 var10 var1 var9 var8) (and (and (and (and (and (not (= var0 0)) (not (= var10 var1))) (<= 0 (+ (+ var9 (* (- 1) var10)) (- 1)))) (= (+ var5 (- 1)) var2)) (= (+ var3 1) var7)) (= (+ var10 1) var6)))) (inv_main6 var2 var7 var4 var6 var1 var9 var10))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (or (not (and (inv_main6 var4 var2 var3 var9 var1 var8 var7) (and (and (and (and (not (= var9 var1)) (<= 0 (+ (+ var8 (* (- 1) var9)) (- 1)))) (= (+ var4 (- 1)) var0)) (= (+ var2 1) var5)) (= (+ var9 1) var6)))) (inv_main6 var0 var5 var3 var6 var1 var8 var7))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (inv_main30 var1 var0) (not (<= 0 (+ (+ var1 (* (- 1) var0)) (- 1)))))) inv_main35)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (and (= (+ var4 var2) var3) (= 0 var5)) (= 0 var0))) (inv_main6 var4 var2 var3 var5 var1 var6 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main6 var3 var1 (+ var3 var1) var6 var0 var5 var4) (and (and (and (not (<= 0 var4)) (<= 0 (+ var5 (- 1)))) (not (<= 0 (+ (+ var5 (* (- 1) var6)) (- 1))))) (= (+ var3 var1) var2)))) (inv_main30 var5 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main6 var3 var1 (+ var3 var1) var6 var0 var5 var4) (and (and (and (and (not (<= 0 (+ (+ var5 (* (- 1) var4)) (- 1)))) (<= 0 var4)) (<= 0 (+ var5 (- 1)))) (not (<= 0 (+ (+ var5 (* (- 1) var6)) (- 1))))) (= (+ var3 var1) var2)))) inv_main35)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main6 var3 var1 var2 var6 var0 var5 var4) (and (not (or (<= 0 var4) (not (<= 0 (+ var5 (- 1)))))) (not (or (= (+ var3 var1) var2) (<= 0 (+ (+ var5 (* (- 1) var6)) (- 1)))))))) (inv_main30 var5 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main6 var3 var1 var2 var6 var0 var5 var4) (and (not (or (<= 0 (+ (+ var5 (* (- 1) var4)) (- 1))) (or (not (<= 0 var4)) (not (<= 0 (+ var5 (- 1))))))) (not (or (= (+ var3 var1) var2) (<= 0 (+ (+ var5 (* (- 1) var6)) (- 1)))))))) inv_main35)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main6 var3 var1 var2 var6 var0 var5 var4) (not (or (= (+ var3 var1) var2) (<= 0 (+ (+ var5 (* (- 1) var6)) (- 1)))))))))
(assert (forall ((var0 Int) (var1 Int)) (not (inv_main30 var1 var0))))
(assert (not inv_main35))
(check-sat)

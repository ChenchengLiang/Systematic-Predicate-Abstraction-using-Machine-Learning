-------------
inv_main6(n, arg0, arg1, arg2) :- 0 = arg0 & 0 = arg1 & 0 = arg2.
Head arguments: ListBuffer((n,n), (arg0,arg0), (arg1,arg1), (arg2,arg2))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((n,n), (arg0,arg0), (arg1,arg1), (arg2,arg2))
variables in guard: ListBuffer()
Data flow:
arg0<-0
arg1<-0
arg2<-0
Guard:
dataflow number:3
guard number:0
-------------
inv_main6(n, arg4, arg5, arg6) :- inv_main6(n, x, y, i), i + 1 = 2*arg8 & n - i >= 1 & x + 1 = arg4 & y + 1 = arg5 & i + 1 = arg6.
Head arguments: ListBuffer((n,n), (arg4,arg4), (arg5,arg5), (arg6,arg6))
Body arguments: ListBuffer((n,n), (x,x), (y,y), (i,i))
Common Arguments:ListBuffer((n,n))
relativeComplimentOfHeadArg:ListBuffer((arg4,arg4), (arg5,arg5), (arg6,arg6))
variables in guard: ListBuffer(i, arg8, n)
Data flow:
arg4<-(x + 1)
arg5<-(y + 1)
arg6<-(i + 1)
n<-n
Guard:
(((i + 1) + -2 * arg8) = 0)
(((n + -1 * i) + -1) >= 0)
dataflow number:3
guard number:2
-------------
inv_main6(n, arg9, y, arg10) :- inv_main6(n, x, y, 2*arg12), arg10 - 2*arg12 = 1 & arg9 - x = 1 & n - 2*arg12 >= 1 & arg12 >= 0.
Head arguments: ListBuffer((n,n), (arg9,arg9), (y,y), (arg10,arg10))
Body arguments: ListBuffer((n,n), (x,x), (y,y), (2 * arg12,2 * arg12))
Common Arguments:ListBuffer((n,n), (y,y))
relativeComplimentOfHeadArg:ListBuffer((arg9,arg9), (arg10,arg10))
variables in guard: ListBuffer(n, arg12)
Data flow:
arg9<-(1 + -1 * -1 * x)
arg10<-(1 + -1 * -2 * arg12)
n<-n
y<-y
Guard:
((-1 + (n + -2 * arg12)) >= 0)
(arg12 >= 0)
dataflow number:2
guard number:2
-------------
inv_main6(n, arg9, y, arg10) :- inv_main6(n, x, y, i), arg10 - i = 1 & arg9 - x = 1 & 2*arg12 - i = 2 & n - i >= 1 & arg12 - i >= 2.
Head arguments: ListBuffer((n,n), (arg9,arg9), (y,y), (arg10,arg10))
Body arguments: ListBuffer((n,n), (x,x), (y,y), (i,i))
Common Arguments:ListBuffer((n,n), (y,y))
relativeComplimentOfHeadArg:ListBuffer((arg9,arg9), (arg10,arg10))
variables in guard: ListBuffer(arg12, i, n)
Data flow:
arg9<-(1 + -1 * -1 * x)
arg10<-(1 + -1 * -1 * i)
n<-n
y<-y
Guard:
((-2 + (2 * arg12 + -1 * i)) = 0)
((-1 + (n + -1 * i)) >= 0)
((-2 + (arg12 + -1 * i)) >= 0)
dataflow number:2
guard number:3
-------------
false :- inv_main6(n, x, y, 10), x != 2*y & !(n + -10 >= 1).
Head arguments: ListBuffer()
Body arguments: ListBuffer((n,n), (x,x), (y,y), (10,10))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(x, y, n)
Data flow:
inv_main6_argument_3<-10
Guard:
!((x + -2 * y) = 0)
!(((n + -10) + -1) >= 0)
dataflow number:0
guard number:2
-----------

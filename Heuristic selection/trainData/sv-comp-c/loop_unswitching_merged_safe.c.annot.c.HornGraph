-------------
inv_main6(t, c0, c2, x1, x2) :- inv_main7(t, c0, c1, x1), !(c1 >= 1) & c2 = c0 & x2 = 0.
Head arguments: ListBuffer((t,t), (c0,c0), (c2,c2), (x1,x1), (x2,x2))
Body arguments: ListBuffer((t,t), (c0,c0), (c1,c1), (x1,x1))
Common Arguments:ListBuffer((t,t), (c0,c0), (x1,x1))
relativeComplimentOfHeadArg:ListBuffer((c2,c2), (x2,x2))
variables in guard: ListBuffer(c1)
Data flow:
c2<-c0
x2<-0
t<-t
x1<-x1
Guard:
!((c1 + -1) >= 0)
dataflow number:2
guard number:1
-------------
inv_main6(t, c0, c2, x1, x2) :- inv_main8(t, c0, c1, x1), !(c1 >= 1) & c2 = c0 & x2 = 0.
Head arguments: ListBuffer((t,t), (c0,c0), (c2,c2), (x1,x1), (x2,x2))
Body arguments: ListBuffer((t,t), (c0,c0), (c1,c1), (x1,x1))
Common Arguments:ListBuffer((t,t), (c0,c0), (x1,x1))
relativeComplimentOfHeadArg:ListBuffer((c2,c2), (x2,x2))
variables in guard: ListBuffer(c1)
Data flow:
c2<-c0
x2<-0
t<-t
x1<-x1
Guard:
!((c1 + -1) >= 0)
dataflow number:2
guard number:1
-------------
inv_main7(t, c0, arg0, arg1) :- inv_main7(t, c0, c1, x1), c1 >= 1 & c1 + -1 = arg0 & x1 + 1 = arg1.
Head arguments: ListBuffer((t,t), (c0,c0), (arg0,arg0), (arg1,arg1))
Body arguments: ListBuffer((t,t), (c0,c0), (c1,c1), (x1,x1))
Common Arguments:ListBuffer((t,t), (c0,c0))
relativeComplimentOfHeadArg:ListBuffer((arg0,arg0), (arg1,arg1))
variables in guard: ListBuffer(c1)
Data flow:
arg0<-(c1 + -1)
arg1<-(x1 + 1)
t<-t
c0<-c0
Guard:
((c1 + -1) >= 0)
dataflow number:2
guard number:1
-------------
inv_main8(t, c0, arg2, arg3) :- inv_main8(t, c0, c1, x1), c1 >= 1 & c1 + -1 = arg2 & x1 + -1 = arg3.
Head arguments: ListBuffer((t,t), (c0,c0), (arg2,arg2), (arg3,arg3))
Body arguments: ListBuffer((t,t), (c0,c0), (c1,c1), (x1,x1))
Common Arguments:ListBuffer((t,t), (c0,c0))
relativeComplimentOfHeadArg:ListBuffer((arg2,arg2), (arg3,arg3))
variables in guard: ListBuffer(c1)
Data flow:
arg2<-(c1 + -1)
arg3<-(x1 + -1)
t<-t
c0<-c0
Guard:
((c1 + -1) >= 0)
dataflow number:2
guard number:1
-------------
inv_main6(t, c0, arg4, x1, arg5) :- inv_main6(t, c0, c2, x1, x2), t >= 1 & c2 >= 1 & c2 + -1 = arg4 & x2 + 1 = arg5.
Head arguments: ListBuffer((t,t), (c0,c0), (arg4,arg4), (x1,x1), (arg5,arg5))
Body arguments: ListBuffer((t,t), (c0,c0), (c2,c2), (x1,x1), (x2,x2))
Common Arguments:ListBuffer((t,t), (c0,c0), (x1,x1))
relativeComplimentOfHeadArg:ListBuffer((arg4,arg4), (arg5,arg5))
variables in guard: ListBuffer(t, c2)
Data flow:
arg4<-(c2 + -1)
arg5<-(x2 + 1)
t<-t
c0<-c0
x1<-x1
Guard:
((t + -1) >= 0)
((c2 + -1) >= 0)
dataflow number:2
guard number:2
-------------
inv_main6(t, c0, arg6, x1, arg7) :- inv_main6(t, c0, c2, x1, x2), !(t >= 1) & c2 >= 1 & c2 + -1 = arg6 & x2 + -1 = arg7.
Head arguments: ListBuffer((t,t), (c0,c0), (arg6,arg6), (x1,x1), (arg7,arg7))
Body arguments: ListBuffer((t,t), (c0,c0), (c2,c2), (x1,x1), (x2,x2))
Common Arguments:ListBuffer((t,t), (c0,c0), (x1,x1))
relativeComplimentOfHeadArg:ListBuffer((arg6,arg6), (arg7,arg7))
variables in guard: ListBuffer(t, c2)
Data flow:
arg6<-(c2 + -1)
arg7<-(x2 + -1)
t<-t
c0<-c0
x1<-x1
Guard:
!((t + -1) >= 0)
((c2 + -1) >= 0)
dataflow number:2
guard number:2
-------------
inv_main7(t, c0, arg8, arg10) :- t >= 1 & arg8 = c0 & 0 = arg10.
Head arguments: ListBuffer((t,t), (c0,c0), (arg8,arg8), (arg10,arg10))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((t,t), (c0,c0), (arg8,arg8), (arg10,arg10))
variables in guard: ListBuffer(t)
Data flow:
t<-_t
c0<-_c0
arg8<-_arg8
arg10<-0
Guard:
((-1 + _t) >= 0)
((_arg8 + -1 * _c0) = 0)
dataflow number:4
guard number:2
-------------
inv_main8(t, c0, arg12, arg14) :- !(t >= 1) & arg12 = c0 & 0 = arg14.
Head arguments: ListBuffer((t,t), (c0,c0), (arg12,arg12), (arg14,arg14))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((t,t), (c0,c0), (arg12,arg12), (arg14,arg14))
variables in guard: ListBuffer(t)
Data flow:
t<-_t
c0<-_c0
arg12<-_arg12
arg14<-0
Guard:
(-1 * _t >= 0)
((_arg12 + -1 * _c0) = 0)
dataflow number:4
guard number:2
-------------
false :- inv_main7(t, c0, c1, x1), !(0 >= c0) & x1 != c0 & !(c1 >= 1).
Head arguments: ListBuffer()
Body arguments: ListBuffer((t,t), (c0,c0), (c1,c1), (x1,x1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(c0, x1, c1)
Data flow:
Guard:
!(-1 * c0 >= 0)
!((x1 + -1 * c0) = 0)
!((c1 + -1) >= 0)
dataflow number:0
guard number:3
-------------
false :- inv_main8(t, c0, c1, x1), !(0 >= c0) & x1 + 1*c0 != 0 & !(c1 >= 1).
Head arguments: ListBuffer()
Body arguments: ListBuffer((t,t), (c0,c0), (c1,c1), (x1,x1))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(c0, x1, c1)
Data flow:
Guard:
!(-1 * c0 >= 0)
!((x1 + 1 * c0) = 0)
!((c1 + -1) >= 0)
dataflow number:0
guard number:3
-------------
false :- inv_main6(t, c0, c2, x1, c0), 0 >= c2 & 0 >= t & c0 >= 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((t,t), (c0,c0), (c2,c2), (x1,x1), (c0,c0))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(c2, t, c0)
Data flow:
Guard:
(-1 * c2 >= 0)
(-1 * t >= 0)
((-1 + c0) >= 0)
dataflow number:0
guard number:3
-------------
false :- inv_main6(t, c0, c2, x1, x2), x2 + c0 = 0 & 0 >= c2 & t >= 1 & c0 >= 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((t,t), (c0,c0), (c2,c2), (x1,x1), (x2,x2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(x2, c0, c2, t)
Data flow:
Guard:
((x2 + c0) = 0)
(-1 * c2 >= 0)
((-1 + t) >= 0)
((-1 + c0) >= 0)
dataflow number:0
guard number:4
-------------
false :- inv_main6(t, c0, c2, x1, x2), x2 != c0 & x2 + c0 != 0 & 0 >= c2 & c0 >= 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((t,t), (c0,c0), (c2,c2), (x1,x1), (x2,x2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(x2, c0, c2)
Data flow:
Guard:
!((x2 + -1 * c0) = 0)
!((x2 + c0) = 0)
(-1 * c2 >= 0)
((-1 + c0) >= 0)
dataflow number:0
guard number:4
-------------
false :- inv_main6(t, c0, c2, x1, x2), x1 != x2 & !(c2 >= 1).
Head arguments: ListBuffer()
Body arguments: ListBuffer((t,t), (c0,c0), (c2,c2), (x1,x1), (x2,x2))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(x1, x2, c2)
Data flow:
Guard:
!((x1 + -1 * x2) = 0)
!((c2 + -1) >= 0)
dataflow number:0
guard number:2
Hints:
-----------

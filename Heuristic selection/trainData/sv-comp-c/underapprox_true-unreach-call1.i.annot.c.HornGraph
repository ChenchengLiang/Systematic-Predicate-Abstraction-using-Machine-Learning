-------------
inv_main4(arg0, arg1) :- 0 = arg0 & 1 = arg1.
Head arguments: ListBuffer((arg0,arg0), (arg1,arg1))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((arg0,arg0), (arg1,arg1))
variables in guard: ListBuffer()
Data flow:
arg0<-0
arg1<-1
Guard:
dataflow number:2
guard number:0
-------------
inv_main4(arg2, arg3) :- inv_main4(x, y), -1*x + 6 >= 1 & x + 1 = arg2 & 2*y = arg3.
Head arguments: ListBuffer((arg2,arg2), (arg3,arg3))
Body arguments: ListBuffer((x,x), (y,y))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((arg2,arg2), (arg3,arg3))
variables in guard: ListBuffer(x)
Data flow:
arg2<-(x + 1)
arg3<-2 * y
Guard:
(((6 + -1 * x) + -1) >= 0)
dataflow number:2
guard number:1
-------------
false :- inv_main4(x, 3*arg5), !(-1*x + 6 >= 1).
Head arguments: ListBuffer()
Body arguments: ListBuffer((x,x), (3 * arg5,3 * arg5))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(x)
Data flow:
Guard:
!(((6 + -1 * x) + -1) >= 0)
dataflow number:0
guard number:1
-----------

-------------
inv_main14(arg2, arg3) :- inv_main14(k, j), j + -1 >= 1 & k + -1 = arg2 & j + -1 = arg3.
Head arguments: ListBuffer((arg2,arg2), (arg3,arg3))
Body arguments: ListBuffer((k,k), (j,j))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((arg2,arg2), (arg3,arg3))
variables in guard: ListBuffer(j)
Data flow:
arg2<-(k + -1)
arg3<-(j + -1)
Guard:
(((j + -1) + -1) >= 0)
dataflow number:2
guard number:1
-------------
inv_main6(__eval23, k, i) :- 0 = k & 0 = i.
Head arguments: ListBuffer((__eval23,__eval23), (k,k), (i,i))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((__eval23,__eval23), (k,k), (i,i))
variables in guard: ListBuffer()
Data flow:
k<-0
i<-0
Guard:
dataflow number:2
guard number:0
-------------
inv_main14(k, arg4) :- inv_main6(arg4, k, i), arg4 >= 1 & !(arg4 - i >= 1) & n = arg4.
Head arguments: ListBuffer((k,k), (arg4,arg4))
Body arguments: ListBuffer((arg4,arg4), (k,k), (i,i))
Common Arguments:ListBuffer((k,k), (arg4,arg4))
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(arg4, i, n)
Data flow:
k<-k
arg4<-arg4
Guard:
((arg4 + -1) >= 0)
!(((arg4 + -1 * i) + -1) >= 0)
((n + -1 * arg4) = 0)
dataflow number:0
guard number:3
-------------
inv_main6(n, arg5, arg6) :- inv_main6(n, k, i), n - i >= 1 & k + 1 = arg5 & i + 1 = arg6.
Head arguments: ListBuffer((n,n), (arg5,arg5), (arg6,arg6))
Body arguments: ListBuffer((n,n), (k,k), (i,i))
Common Arguments:ListBuffer((n,n))
relativeComplimentOfHeadArg:ListBuffer((arg5,arg5), (arg6,arg6))
variables in guard: ListBuffer(n, i)
Data flow:
arg5<-(k + 1)
arg6<-(i + 1)
n<-n
Guard:
(((n + -1 * i) + -1) >= 0)
dataflow number:2
guard number:1
-------------
false :- inv_main14(k, j), !(k >= 1).
Head arguments: ListBuffer()
Body arguments: ListBuffer((k,k), (j,j))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(k)
Data flow:
Guard:
!((k + -1) >= 0)
dataflow number:0
guard number:1
Hints:
-----------

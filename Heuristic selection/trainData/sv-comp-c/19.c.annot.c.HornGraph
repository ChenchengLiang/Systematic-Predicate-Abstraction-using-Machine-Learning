-------------
inv_main7(n, m, arg0, arg1) :- inv_main7(n, m, x, y), x + 1 - m >= 1 & n - x >= 1 & x + 1 = arg0 & y + 1 = arg1.
Head arguments: ListBuffer((n,n), (m,m), (arg0,arg0), (arg1,arg1))
Body arguments: ListBuffer((n,n), (m,m), (x,x), (y,y))
Common Arguments:ListBuffer((n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg0,arg0), (arg1,arg1))
variables in guard: ListBuffer(x, m, n)
Data flow:
arg0<-(x + 1)
arg1<-(y + 1)
n<-n
m<-m
Guard:
((((x + 1) + -1 * m) + -1) >= 0)
(((n + -1 * x) + -1) >= 0)
dataflow number:2
guard number:2
-------------
inv_main7(n, m, arg2, y) :- inv_main7(n, m, x, y), !(x + 1 - m >= 1) & n - x >= 1 & x + 1 = arg2.
Head arguments: ListBuffer((n,n), (m,m), (arg2,arg2), (y,y))
Body arguments: ListBuffer((n,n), (m,m), (x,x), (y,y))
Common Arguments:ListBuffer((n,n), (m,m), (y,y))
relativeComplimentOfHeadArg:ListBuffer((arg2,arg2))
variables in guard: ListBuffer(x, m, n)
Data flow:
arg2<-(x + 1)
n<-n
m<-m
y<-y
Guard:
!((((x + 1) + -1 * m) + -1) >= 0)
(((n + -1 * x) + -1) >= 0)
dataflow number:1
guard number:2
-------------
inv_main7(n, m, arg3, arg4) :- n - arg4 >= 1 & arg4 >= 0 & n >= 0 & 0 = arg3 & m = arg4.
Head arguments: ListBuffer((n,n), (m,m), (arg3,arg3), (arg4,arg4))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((n,n), (m,m), (arg3,arg3), (arg4,arg4))
variables in guard: ListBuffer(n, arg4)
Data flow:
n<-_n
m<-_m
arg3<-0
arg4<-_arg4
Guard:
((-1 + (_n + -1 * _arg4)) >= 0)
(_arg4 >= 0)
(_n >= 0)
((_m + -1 * _arg4) = 0)
dataflow number:4
guard number:4
-------------
false :- inv_main7(n, m, x, y), !(y = n | n - x >= 1).
Head arguments: ListBuffer()
Body arguments: ListBuffer((n,n), (m,m), (x,x), (y,y))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(y, n, x)
Data flow:
Guard:
!(((y + -1 * n) = 0) | (((n + -1 * x) + -1) >= 0))
dataflow number:0
guard number:1
-----------

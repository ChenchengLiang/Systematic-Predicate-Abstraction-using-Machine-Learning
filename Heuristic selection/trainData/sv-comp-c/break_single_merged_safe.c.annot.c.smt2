(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main10 (Int Int Int) Bool)
(declare-fun inv_main4 (Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int)) (or (not (= 0 var1)) (inv_main4 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main10 var1 var2 var0) (and (and (<= 0 (+ 10 (* (- 1) var0))) (not (= var0 var1))) (= (+ var0 1) var3)))) (inv_main10 var1 var2 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main4 var0 var1) (and (and (not (= var1 var0)) (<= 0 (+ 10 (* (- 1) var1)))) (= (+ var1 1) var2)))) (inv_main4 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main4 var0 var1) (and (not (<= 0 (+ 10 (* (- 1) var1)))) (= 0 var2)))) (inv_main10 var0 var1 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main4 var1 var1) (and (and (<= 0 (+ 10 (* (- 1) var1))) (= var2 var1)) (= 0 var0)))) (inv_main10 var1 var2 var0))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main10 var0 var1 var0) (not (= var0 var1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (and (inv_main10 var1 var2 var0) (and (not (= var0 var2)) (<= 0 (+ (- 11) var0)))))))
(check-sat)

-------------
inv_main24(i, j, arg0, n, m) :- inv_main24(i, j, arg0 + -1, n, m), j + -1*(arg0 + -1) >= 1.
Head arguments: ListBuffer((i,i), (j,j), (arg0,arg0), (n,n), (m,m))
Body arguments: ListBuffer((i,i), (j,j), ((arg0 + -1),(arg0 + -1)), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (j,j), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg0,arg0))
variables in guard: ListBuffer(j, arg0)
Data flow:
arg0<-_arg0
i<-i
j<-j
n<-n
m<-m
Guard:
((j + -1 * _arg0) >= 0)
dataflow number:1
guard number:1
-------------
inv_main10(arg1, arg2, n, m) :- n >= 1 & n + -1*(m + 1) >= 1 & 0 = arg1 & 0 = arg2.
Head arguments: ListBuffer((arg1,arg1), (arg2,arg2), (n,n), (m,m))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((arg1,arg1), (arg2,arg2), (n,n), (m,m))
variables in guard: ListBuffer(n, m)
Data flow:
arg1<-0
arg2<-0
n<-_n
m<-_m
Guard:
((-1 + _n) >= 0)
((-2 + (_n + -1 * _m)) >= 0)
dataflow number:4
guard number:2
-------------
inv_main10(arg3, arg4, n, m) :- inv_main10(arg4 + -4, j, n, m), n + -1*(arg4 + -4 + 4) >= 1 & !(m - j >= 1) & arg3 + -4 + 4 = arg4.
Head arguments: ListBuffer((arg3,arg3), (arg4,arg4), (n,n), (m,m))
Body arguments: ListBuffer(((arg4 + -4),(arg4 + -4)), (j,j), (n,n), (m,m))
Common Arguments:ListBuffer((n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg3,arg3), (arg4,arg4))
variables in guard: ListBuffer(n, arg4, m, j)
Data flow:
arg3<-_arg3
arg4<-_arg4
n<-n
m<-m
Guard:
((-1 + (n + -1 * _arg4)) >= 0)
!(((m + -1 * j) + -1) >= 0)
((_arg3 + -1 * _arg4) = 0)
dataflow number:2
guard number:3
-------------
inv_main24(i, arg5, arg6, n, m) :- inv_main10(i, arg5 + -1, n, m), arg5 >= 1 & __eval102 != 0 & m + -1*(arg5 + -1) >= 1 & 0 = arg6.
Head arguments: ListBuffer((i,i), (arg5,arg5), (arg6,arg6), (n,n), (m,m))
Body arguments: ListBuffer((i,i), ((arg5 + -1),(arg5 + -1)), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg5,arg5), (arg6,arg6))
variables in guard: ListBuffer(arg5, __eval102, m)
Data flow:
arg5<-_arg5
arg6<-0
i<-i
n<-n
m<-m
Guard:
((-1 + _arg5) >= 0)
!(__eval102 = 0)
((m + -1 * _arg5) >= 0)
dataflow number:2
guard number:3
-------------
inv_main24(i, arg7, arg8, n, m) :- inv_main10(i, arg7 + -1, n, m), !(arg7 >= 1) & __eval102 != 0 & m + -1*(arg7 + -1) >= 1 & 0 = arg8.
Head arguments: ListBuffer((i,i), (arg7,arg7), (arg8,arg8), (n,n), (m,m))
Body arguments: ListBuffer((i,i), ((arg7 + -1),(arg7 + -1)), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg7,arg7), (arg8,arg8))
variables in guard: ListBuffer(arg7, __eval102, m)
Data flow:
arg7<-_arg7
arg8<-0
i<-i
n<-n
m<-m
Guard:
(-1 * _arg7 >= 0)
!(__eval102 = 0)
((m + -1 * _arg7) >= 0)
dataflow number:2
guard number:3
-------------
inv_main10(i, j, n, m) :- inv_main24(i, j, k, n, m), !(j - k >= 1).
Head arguments: ListBuffer((i,i), (j,j), (n,n), (m,m))
Body arguments: ListBuffer((i,i), (j,j), (k,k), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (j,j), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(j, k)
Data flow:
i<-i
j<-j
n<-n
m<-m
Guard:
!(((j + -1 * k) + -1) >= 0)
dataflow number:0
guard number:1
-------------
inv_main10(i, arg9, n, m) :- inv_main10(i, arg9 + -2, n, m), n + arg9 + -2 + 5 - i >= 1 & m + -1*(arg9 + -2) >= 1.
Head arguments: ListBuffer((i,i), (arg9,arg9), (n,n), (m,m))
Body arguments: ListBuffer((i,i), ((arg9 + -2),(arg9 + -2)), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg9,arg9))
variables in guard: ListBuffer(n, arg9, i, m)
Data flow:
arg9<-_arg9
i<-i
n<-n
m<-m
Guard:
((2 + (n + (_arg9 + -1 * i))) >= 0)
((1 + (m + -1 * _arg9)) >= 0)
dataflow number:1
guard number:2
-------------
inv_main10(i, arg10, n, m) :- inv_main10(i, arg10 + -2, n, m), !(n + arg10 + -2 + 5 - i >= 1) & m + -1*(arg10 + -2) >= 1.
Head arguments: ListBuffer((i,i), (arg10,arg10), (n,n), (m,m))
Body arguments: ListBuffer((i,i), ((arg10 + -2),(arg10 + -2)), (n,n), (m,m))
Common Arguments:ListBuffer((i,i), (n,n), (m,m))
relativeComplimentOfHeadArg:ListBuffer((arg10,arg10))
variables in guard: ListBuffer(n, arg10, i, m)
Data flow:
arg10<-_arg10
i<-i
n<-n
m<-m
Guard:
((-3 + (-1 * n + (-1 * _arg10 + i))) >= 0)
((1 + (m + -1 * _arg10)) >= 0)
dataflow number:1
guard number:2
-------------
false :- inv_main10(i, j, n, m), !(j >= 0 | __eval102 = 0 | !(m - j >= 1)).
Head arguments: ListBuffer()
Body arguments: ListBuffer((i,i), (j,j), (n,n), (m,m))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(j, __eval102, m)
Data flow:
Guard:
!((j >= 0) | ((__eval102 = 0) | !(((m + -1 * j) + -1) >= 0)))
dataflow number:0
guard number:1
-------------
false :- inv_main10(i, j, n, m), !(n + j + 5 - i >= 1) & m - j >= 1.
Head arguments: ListBuffer()
Body arguments: ListBuffer((i,i), (j,j), (n,n), (m,m))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(n, j, i, m)
Data flow:
Guard:
!(((((n + j) + 5) + -1 * i) + -1) >= 0)
(((m + -1 * j) + -1) >= 0)
dataflow number:0
guard number:2
Hints:
-----------

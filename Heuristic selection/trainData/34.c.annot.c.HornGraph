-------------
inv_main6(n, arg0, arg1, arg2) :- 0 = arg0 & 0 = arg1 & 0 = arg2.
Head arguments: ListBuffer((n,n), (arg0,arg0), (arg1,arg1), (arg2,arg2))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((n,n), (arg0,arg0), (arg1,arg1), (arg2,arg2))
variables in guard: ListBuffer()
Data flow:
arg0<-0
arg1<-0
arg2<-0
Guard:
dataflow number:3
guard number:0
-------------
inv_main6(n, arg4, arg5, arg6) :- inv_main6(n, arg4 + -1, arg5 + -1, arg6 + -1), arg6 + -1 + 1 = 2*arg8 & n + -1*(arg6 + -1) >= 1.
Head arguments: ListBuffer((n,n), (arg4,arg4), (arg5,arg5), (arg6,arg6))
Body arguments: ListBuffer((n,n), ((arg4 + -1),(arg4 + -1)), ((arg5 + -1),(arg5 + -1)), ((arg6 + -1),(arg6 + -1)))
Common Arguments:ListBuffer((n,n))
relativeComplimentOfHeadArg:ListBuffer((arg4,arg4), (arg5,arg5), (arg6,arg6))
variables in guard: ListBuffer(n, arg6)
Data flow:
arg6<--1 * -2 * arg8
arg6<-_arg6
n<-n
Guard:
((n + -1 * _arg6) >= 0)
dataflow number:1
guard number:1
-------------
inv_main6(n, arg9, y, arg10) :- inv_main6(n, arg9 + -1, y, arg10 + -1), 2*arg12 - arg10 = -1 & n >= arg10 & arg12 >= 0.
Head arguments: ListBuffer((n,n), (arg9,arg9), (y,y), (arg10,arg10))
Body arguments: ListBuffer((n,n), ((arg9 + -1),(arg9 + -1)), (y,y), ((arg10 + -1),(arg10 + -1)))
Common Arguments:ListBuffer((n,n), (y,y))
relativeComplimentOfHeadArg:ListBuffer((arg9,arg9), (arg10,arg10))
variables in guard: ListBuffer(n, arg10, arg12)
Data flow:
arg10<-(-1 + -1 * 2 * arg12)
arg10<-_arg10
n<-n
y<-y
Guard:
((n + -1 * _arg10) >= 0)
(arg12 >= 0)
dataflow number:1
guard number:2
-------------
inv_main6(n, arg9, y, arg10) :- inv_main6(n, arg9 + -1, y, arg10 + -1), 2*arg12 - arg10 = 1 & n >= arg10 & arg12 - arg10 >= 1.
Head arguments: ListBuffer((n,n), (arg9,arg9), (y,y), (arg10,arg10))
Body arguments: ListBuffer((n,n), ((arg9 + -1),(arg9 + -1)), (y,y), ((arg10 + -1),(arg10 + -1)))
Common Arguments:ListBuffer((n,n), (y,y))
relativeComplimentOfHeadArg:ListBuffer((arg9,arg9), (arg10,arg10))
variables in guard: ListBuffer(n, arg10, arg12)
Data flow:
arg10<-(1 + -1 * 2 * arg12)
arg10<-_arg10
n<-n
y<-y
Guard:
((n + -1 * _arg10) >= 0)
((-1 + (arg12 + -1 * _arg10)) >= 0)
dataflow number:1
guard number:2
-------------
false :- inv_main6(n, x, y, 10), x != 2*y & !(n + -10 >= 1).
Head arguments: ListBuffer()
Body arguments: ListBuffer((n,n), (x,x), (y,y), (10,10))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(x, y, n)
Data flow:
inv_main6_argument_3<-10
Guard:
!((x + -2 * y) = 0)
!(((n + -10) + -1) >= 0)
dataflow number:0
guard number:2
Hints:
-----------

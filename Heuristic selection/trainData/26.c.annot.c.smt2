(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main3 (Int Int Int Int) Bool)
(declare-fun inv_main5 (Int Int Int Int) Bool)
(declare-fun inv_main8 (Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (and (and (= 1 var0) (= 0 var2)) (= 0 var3)) (= 0 var1))) (inv_main3 var0 var2 var3 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main3 var3 var1 var0 var4) (not (= var2 0)))) (inv_main5 var3 var1 var0 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (inv_main5 var2 var1 var0 var3)) (inv_main8 var2 var1 var0 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (inv_main8 var2 var1 var0 var3)) (inv_main3 var2 var1 var0 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main8 var4 var3 var0 var5) (not (or (or (= var2 0) (not (= (+ (+ var0 var5) 1) var1))) (not (= (+ var0 var5) var6)))))) (inv_main8 var1 var6 var0 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main5 var5 var1 (+ var6 (- 1)) (+ var3 (- 1))) (and (and (and (= (+ var1 (* (- 2) var4)) 0) (<= 0 (+ var5 (- 1)))) (= var5 (+ (* 2 var0) 1))) (not (= var2 0))))) (inv_main5 var5 var1 var6 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main5 var3 var1 (+ var0 (- 1)) var4) (and (and (and (and (= (+ (* 2 var5) (* (- 1) var3)) (- 1)) (= (+ (* 2 var6) (* (- 1) var1)) (- 1))) (not (= var2 0))) (<= 0 var5)) (<= 0 var6)))) (inv_main5 var3 var1 var0 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main5 var3 var1 (+ var0 (- 1)) var4) (and (and (and (and (= (+ (* 2 var5) (* (- 1) var3)) (- 1)) (= (+ (* 2 var6) (* (- 1) var1)) 1)) (not (= var2 0))) (<= 0 var5)) (<= 0 (+ (- 1) (+ var6 (* (- 1) var1))))))) (inv_main5 var3 var1 var0 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main5 var6 var1 var0 (+ var3 (- 1))) (and (and (and (= (+ (* 2 var5) (+ (* (- 1) var6) var2)) 0) (= (* 2 var7) var1)) (and (not (= var4 0)) (not (= var2 (- 1))))) (and (<= 0 (* (- 1) var2)) (<= 0 (+ 1 var2)))))) (inv_main5 var6 var1 var0 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main5 var6 var1 var0 (+ var3 (- 1))) (and (and (and (= (+ (* 2 var5) (+ (* (- 1) var6) var2)) 0) (= (* 2 var7) var1)) (not (= var4 0))) (and (and (<= 0 (+ (- 1) (* (- 1) var6))) (<= 0 (* (- 1) var2))) (<= 0 (+ 1 var2)))))) (inv_main5 var6 var1 var0 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main5 var4 var2 var1 var6) (and (and (and (and (= (+ (* 2 var5) (* (- 1) var4)) 1) (= (+ (* 2 var0) (* (- 1) var2)) (- 1))) (not (= var3 0))) (<= 0 (+ (- 1) (+ var5 (* (- 1) var4))))) (<= 0 var0)))) (inv_main5 var4 var2 var1 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main5 var4 var2 var1 var6) (and (and (and (= (* 2 var5) var4) (= (+ (* 2 var0) (* (- 1) var2)) (- 1))) (not (= var3 0))) (<= 0 var0)))) (inv_main5 var4 var2 var1 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main5 var4 var2 var1 var6) (and (and (and (and (= (+ (* 2 var5) (* (- 1) var4)) 1) (= (+ (* 2 var0) (* (- 1) var2)) 1)) (not (= var3 0))) (<= 0 (+ (- 1) (+ var5 (* (- 1) var4))))) (<= 0 (+ (- 1) (+ var0 (* (- 1) var2))))))) (inv_main5 var4 var2 var1 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main5 var4 var2 var1 var6) (and (and (and (= (* 2 var5) var4) (= (+ (* 2 var0) (* (- 1) var2)) 1)) (not (= var3 0))) (<= 0 (+ (- 1) (+ var0 (* (- 1) var2))))))) (inv_main5 var4 var2 var1 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main3 var2 var1 var0 var3) (not (= var0 var3))))))
(check-sat)

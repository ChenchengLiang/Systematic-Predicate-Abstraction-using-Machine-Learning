-------------
inv_main5(n, arg0, arg1, arg2) :- 0 = arg0 & 0 = arg1 & 0 = arg2.
Head arguments: ListBuffer((n,n), (arg0,arg0), (arg1,arg1), (arg2,arg2))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((n,n), (arg0,arg0), (arg1,arg1), (arg2,arg2))
variables in guard: ListBuffer()
Data flow:
arg0<-0
arg1<-0
arg2<-0
Guard:
dataflow number:3
guard number:0
-------------
inv_main5(n, arg3, arg4, arg5) :- inv_main5(n, arg3 + -1, arg4 + -1, arg5 + -1), arg5 + -1 + 1 = 2*arg7 & n + -1*(arg5 + -1) >= 1.
Head arguments: ListBuffer((n,n), (arg3,arg3), (arg4,arg4), (arg5,arg5))
Body arguments: ListBuffer((n,n), ((arg3 + -1),(arg3 + -1)), ((arg4 + -1),(arg4 + -1)), ((arg5 + -1),(arg5 + -1)))
Common Arguments:ListBuffer((n,n))
relativeComplimentOfHeadArg:ListBuffer((arg3,arg3), (arg4,arg4), (arg5,arg5))
variables in guard: ListBuffer(n, arg5)
Data flow:
arg5<--1 * -2 * arg7
arg5<-_arg5
n<-n
Guard:
((n + -1 * _arg5) >= 0)
dataflow number:1
guard number:1
-------------
inv_main5(n, arg8, y, arg9) :- inv_main5(n, arg8 + -1, y, arg9 + -1), 2*arg11 - arg9 = -1 & n >= arg9 & arg11 >= 0.
Head arguments: ListBuffer((n,n), (arg8,arg8), (y,y), (arg9,arg9))
Body arguments: ListBuffer((n,n), ((arg8 + -1),(arg8 + -1)), (y,y), ((arg9 + -1),(arg9 + -1)))
Common Arguments:ListBuffer((n,n), (y,y))
relativeComplimentOfHeadArg:ListBuffer((arg8,arg8), (arg9,arg9))
variables in guard: ListBuffer(n, arg9, arg11)
Data flow:
arg9<-(-1 + -1 * 2 * arg11)
arg9<-_arg9
n<-n
y<-y
Guard:
((n + -1 * _arg9) >= 0)
(arg11 >= 0)
dataflow number:1
guard number:2
-------------
inv_main5(n, arg8, y, arg9) :- inv_main5(n, arg8 + -1, y, arg9 + -1), 2*arg11 - arg9 = 1 & n >= arg9 & arg11 - arg9 >= 1.
Head arguments: ListBuffer((n,n), (arg8,arg8), (y,y), (arg9,arg9))
Body arguments: ListBuffer((n,n), ((arg8 + -1),(arg8 + -1)), (y,y), ((arg9 + -1),(arg9 + -1)))
Common Arguments:ListBuffer((n,n), (y,y))
relativeComplimentOfHeadArg:ListBuffer((arg8,arg8), (arg9,arg9))
variables in guard: ListBuffer(n, arg9, arg11)
Data flow:
arg9<-(1 + -1 * 2 * arg11)
arg9<-_arg9
n<-n
y<-y
Guard:
((n + -1 * _arg9) >= 0)
((-1 + (arg11 + -1 * _arg9)) >= 0)
dataflow number:1
guard number:2
-------------
false :- inv_main5(n, x, y, i), x != 2*y & i = 2*arg13 & !(n - i >= 1).
Head arguments: ListBuffer()
Body arguments: ListBuffer((n,n), (x,x), (y,y), (i,i))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(x, y, i, arg13, n)
Data flow:
Guard:
!((x + -2 * y) = 0)
((i + -2 * arg13) = 0)
!(((n + -1 * i) + -1) >= 0)
dataflow number:0
guard number:3
Hints:
-----------

(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main16 (Int Int Int Int Int) Bool)
(declare-fun inv_main22 (Int Int Int Int) Bool)
(declare-fun inv_main36 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main9 (Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (= 0 var0) (= 0 var1))) (inv_main9 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main16 var0 var4 var1 (+ var3 (- 1)) (+ var2 (- 1))) (<= 0 (+ (+ var1 (* (- 1) (+ var3 (- 1)))) (- 1))))) (inv_main16 var0 var4 var1 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main16 var1 var3 var2 var0 var5) (and (and (and (and (and (= (+ (* 2 var6) (+ (* (- 1) var3) var4)) 0) (not (= var4 (- 1)))) (<= 0 (+ var0 (* (- 1) var2)))) (<= 0 (* (- 1) var4))) (<= 0 (+ 1 var4))) (= var7 var3)))) (inv_main22 var1 var7 var5 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main16 var1 var3 var2 var0 var5) (and (and (and (and (and (= (+ (* 2 var6) (+ (* (- 1) var3) var4)) 0) (<= 0 (+ var0 (* (- 1) var2)))) (<= 0 (+ (- 1) (* (- 1) var3)))) (<= 0 (* (- 1) var4))) (<= 0 (+ 1 var4))) (= var7 var3)))) (inv_main22 var1 var7 var5 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main16 var2 (+ var5 (- 1)) var3 var0 (+ var4 1)) (and (and (and (<= 0 (+ (+ var5 (- 1)) (- 1))) (= (+ var5 (- 1)) (+ (* 2 var1) 1))) (not (<= 0 (+ (+ var3 (* (- 1) var0)) (- 1))))) (= (+ var6 1) var5)))) (inv_main22 var2 var5 var4 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main22 var0 (+ var3 (- 2)) (+ var2 2) var5) (and (= (+ (+ var3 (- 2)) (* (- 2) var4)) 0) (not (= var1 0))))) (inv_main22 var0 var3 var2 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main22 var0 (+ var2 1) (+ var4 1) var5) (and (and (= (* 2 var3) var2) (not (= var1 0))) (<= 0 var3)))) (inv_main22 var0 var2 var4 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main22 var0 (+ var2 1) (+ var4 1) var5) (and (and (= (+ (* 2 var3) (* (- 1) var2)) 2) (not (= var1 0))) (<= 0 (+ (- 2) (+ var3 (* (- 1) var2))))))) (inv_main22 var0 var2 var4 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main22 var0 var4 var3 (+ var2 (- 1))) (= (+ (+ var4 var3) 1) var1))) (inv_main9 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main36 var0 (+ var7 (- 1)) (+ var4 (- 1)) var6 var1 (+ var5 (- 1)) (+ var2 (- 1))) (and (not (= var0 0)) (not (= var3 0))))) (inv_main36 var0 var7 var4 var6 var1 var5 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (or (not (and (inv_main36 0 var7 var3 var8 var1 (+ var9 (- 1)) (+ var6 (- 1))) (and (and (and (not (= var4 0)) (= (+ var7 (+ (+ var9 (- 1)) 1)) var2)) (= (+ var3 (+ (+ var6 (- 1)) 1)) var5)) (= var0 0)))) (inv_main36 var0 var2 var5 var8 var1 var9 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main9 var0 var4 var2) (and (and (not (= var1 0)) (= var5 var4)) (= 0 var3)))) (inv_main16 var0 var5 var2 var4 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main9 var0 var5 var1) (and (and (and (= 0 var3) (= 0 var6)) (= var4 0)) (= var2 0)))) (inv_main36 var0 var4 var2 var5 var1 var3 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main36 var0 var5 var3 var6 var2 var4 var1) (not (= var3 var5))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main36 var0 var5 var3 var6 var2 var4 var1) (<= 0 (+ (- 1) (+ var6 (* (- 1) var2))))))))
(check-sat)

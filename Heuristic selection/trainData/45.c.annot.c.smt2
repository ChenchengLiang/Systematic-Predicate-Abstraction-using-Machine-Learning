(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unknown)
(declare-fun inv_main23 (Int Int Int Int) Bool)
(declare-fun inv_main25 (Int Int Int Int) Bool)
(declare-fun inv_main8 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (and (and (= 0 var1) (= 0 var4)) (= 0 var0)) (= 0 var2))) (inv_main8 var3 var1 var4 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main23 var2 var3 var0 var4) (not (= var1 0)))) (inv_main25 var2 var3 var0 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main25 var1 var4 var0 var5) (and (= (+ (+ var1 var4) 1) var2) (= (+ var1 var4) var3)))) (inv_main23 var1 var4 var2 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main25 (+ var3 (- 1)) (+ var2 (- 1)) var0 var5) (and (and (and (= (+ var5 (* (- 2) var4)) 0) (<= 0 (+ var0 (- 1)))) (= var0 (+ (* 2 var6) 1))) (not (= var1 0))))) (inv_main25 var3 var2 var0 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main25 (+ var6 (- 1)) var4 var0 var5) (and (and (and (and (= (+ (* 2 var3) (* (- 1) var0)) (- 1)) (= (+ (* 2 var2) (* (- 1) var5)) (- 1))) (not (= var1 0))) (<= 0 var3)) (<= 0 var2)))) (inv_main25 var6 var4 var0 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main25 (+ var6 (- 1)) var4 var0 var5) (and (and (and (and (= (+ (* 2 var3) (* (- 1) var0)) (- 1)) (= (+ (* 2 var2) (* (- 1) var5)) 1)) (not (= var1 0))) (<= 0 var3)) (<= 0 (+ (- 1) (+ var2 (* (- 1) var5))))))) (inv_main25 var6 var4 var0 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main25 var4 (+ var0 (- 1)) var7 var5) (and (and (and (and (and (= (+ (* 2 var6) (+ (* (- 1) var7) var2)) 0) (= (* 2 var3) var5)) (not (= var1 0))) (not (= var2 (- 1)))) (<= 0 (* (- 1) var2))) (<= 0 (+ 1 var2))))) (inv_main25 var4 var0 var7 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main25 var4 (+ var0 (- 1)) var7 var5) (and (and (and (and (and (= (+ (* 2 var6) (+ (* (- 1) var7) var2)) 0) (= (* 2 var3) var5)) (not (= var1 0))) (<= 0 (+ (- 1) (* (- 1) var7)))) (<= 0 (* (- 1) var2))) (<= 0 (+ 1 var2))))) (inv_main25 var4 var0 var7 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main25 var2 var3 var0 var5) (and (and (and (and (= (+ (* 2 var6) (* (- 1) var0)) 1) (= (+ (* 2 var4) (* (- 1) var5)) (- 1))) (not (= var1 0))) (<= 0 (+ (- 1) (+ var6 (* (- 1) var0))))) (<= 0 var4)))) (inv_main25 var2 var3 var0 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main25 var2 var3 var0 var5) (and (and (and (= (* 2 var6) var0) (= (+ (* 2 var4) (* (- 1) var5)) (- 1))) (not (= var1 0))) (<= 0 var4)))) (inv_main25 var2 var3 var0 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main25 var2 var3 var0 var5) (and (and (and (and (= (+ (* 2 var6) (* (- 1) var0)) 1) (= (+ (* 2 var4) (* (- 1) var5)) 1)) (not (= var1 0))) (<= 0 (+ (- 1) (+ var6 (* (- 1) var0))))) (<= 0 (+ (- 1) (+ var4 (* (- 1) var5))))))) (inv_main25 var2 var3 var0 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main25 var2 var3 var0 var5) (and (and (and (= (* 2 var6) var0) (= (+ (* 2 var4) (* (- 1) var5)) 1)) (not (= var1 0))) (<= 0 (+ (- 1) (+ var4 (* (- 1) var5))))))) (inv_main25 var2 var3 var0 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main8 var1 (+ var2 (- 1)) (+ var7 (- 1)) var5 var0) (and (and (and (not (= var1 0)) (not (= var4 0))) (= (+ (+ var5 (+ (+ var7 (- 1)) 1)) 1) var6)) (= (+ var0 (+ (+ var2 (- 1)) 1)) var3)))) (inv_main8 var1 var2 var7 var6 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main8 0 (+ var4 (- 1)) (+ var2 (- 1)) var6 var0) (and (and (and (not (= var5 0)) (= (+ var6 (+ (+ var2 (- 1)) 1)) var1)) (= (+ var0 (+ (+ var4 (- 1)) 1)) var7)) (= var3 0)))) (inv_main8 var3 var4 var2 var1 var7))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main8 var1 var3 var2 var7 var0) (and (and (and (<= 0 (+ var7 (* (- 1) var0))) (= var6 var2)) (= 1 var4)) (= 0 var5)))) (inv_main23 var6 var2 var4 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main8 var2 var4 (+ var7 (- 1)) var6 var0) (and (and (and (not (<= 0 (+ var6 (* (- 1) var0)))) (= (+ var5 1) var7)) (= 1 var1)) (= 0 var3)))) (inv_main23 var7 var5 var1 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main23 var1 var2 var0 var3) (not (= var1 var2))))))
(check-sat)

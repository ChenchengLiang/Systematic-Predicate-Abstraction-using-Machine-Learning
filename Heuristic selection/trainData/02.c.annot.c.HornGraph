-------------
inv_main8(arg2, arg3, arg4, arg5) :- inv_main8(z, arg3 + -1, arg4 + -1, arg5 + -2), z + arg3 + -1 + arg4 + -1 + arg5 + -2 >= 1 & z + arg3 + -1 + arg4 + -1 + arg5 + -2 = 2*arg7 + 1 & __eval75 != 0 & z + arg3 + -1 + arg4 + -1 + arg5 + -2 = arg2.
Head arguments: ListBuffer((arg2,arg2), (arg3,arg3), (arg4,arg4), (arg5,arg5))
Body arguments: ListBuffer((z,z), ((arg3 + -1),(arg3 + -1)), ((arg4 + -1),(arg4 + -1)), ((arg5 + -2),(arg5 + -2)))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((arg2,arg2), (arg3,arg3), (arg4,arg4), (arg5,arg5))
variables in guard: ListBuffer(z, arg3, arg4, arg5, __eval75)
Data flow:
arg2<-_arg2
arg3<-_arg3
arg4<-_arg4
arg5<-_arg5
Guard:
((-5 + (z + (_arg3 + (_arg4 + _arg5)))) >= 0)
!(__eval75 = 0)
((-5 + (z + (_arg3 + (_arg4 + (_arg5 + -2 * arg7))))) = 0)
((-4 + (z + (_arg3 + (_arg4 + (_arg5 + -1 * _arg2))))) = 0)
dataflow number:4
guard number:4
-------------
inv_main8(arg8, x, arg9, arg10) :- inv_main8(z, x, arg9 + -1, arg10 + -2), arg8 + -1*x - z - arg9 - arg10 = -3 & 2*arg12 + arg11 - z - x - arg9 - arg10 = -3 & __eval75 != 0 & arg11 != -1 & 0 >= arg11 & arg11 >= -1.
Head arguments: ListBuffer((arg8,arg8), (x,x), (arg9,arg9), (arg10,arg10))
Body arguments: ListBuffer((z,z), (x,x), ((arg9 + -1),(arg9 + -1)), ((arg10 + -2),(arg10 + -2)))
Common Arguments:ListBuffer((x,x))
relativeComplimentOfHeadArg:ListBuffer((arg8,arg8), (arg9,arg9), (arg10,arg10))
variables in guard: ListBuffer(__eval75, arg11)
Data flow:
arg8<-_arg8
arg9<-_arg9
arg10<-_arg10
x<-x
Guard:
!(__eval75 = 0)
!((1 + arg11) = 0)
(-1 * arg11 >= 0)
((1 + arg11) >= 0)
((3 + (_arg8 + (-1 * _arg10 + (-1 * _arg9 + (-1 * x + -1 * z))))) = 0)
((3 + (2 * arg12 + (-1 * _arg10 + (-1 * _arg9 + (-1 * x + (-1 * z + arg11)))))) = 0)
dataflow number:3
guard number:6
-------------
inv_main8(arg8, x, arg9, arg10) :- inv_main8(z, x, arg9 + -1, arg10 + -2), arg8 + -1*x - z - arg9 - arg10 = -3 & 2*arg12 + arg11 - z - x - arg9 - arg10 = -3 & __eval75 != 0 & -1*x - z - arg9 - arg10 >= -2 & 0 >= arg11 & arg11 >= -1.
Head arguments: ListBuffer((arg8,arg8), (x,x), (arg9,arg9), (arg10,arg10))
Body arguments: ListBuffer((z,z), (x,x), ((arg9 + -1),(arg9 + -1)), ((arg10 + -2),(arg10 + -2)))
Common Arguments:ListBuffer((x,x))
relativeComplimentOfHeadArg:ListBuffer((arg8,arg8), (arg9,arg9), (arg10,arg10))
variables in guard: ListBuffer(__eval75, arg10, arg9, x, z, arg11)
Data flow:
arg8<-_arg8
arg9<-_arg9
arg10<-_arg10
x<-x
Guard:
!(__eval75 = 0)
((2 + (-1 * _arg10 + (-1 * _arg9 + (-1 * x + -1 * z)))) >= 0)
(-1 * arg11 >= 0)
((1 + arg11) >= 0)
((3 + (_arg8 + (-1 * _arg10 + (-1 * _arg9 + (-1 * x + -1 * z))))) = 0)
((3 + (2 * arg12 + (-1 * _arg10 + (-1 * _arg9 + (-1 * x + (-1 * z + arg11)))))) = 0)
dataflow number:3
guard number:6
-------------
inv_main8(arg13, arg14, arg15, arg16) :- 0 = arg14 & 0 = arg15 & 0 = arg16 & 1 = arg13.
Head arguments: ListBuffer((arg13,arg13), (arg14,arg14), (arg15,arg15), (arg16,arg16))
Body arguments: ListBuffer()
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer((arg13,arg13), (arg14,arg14), (arg15,arg15), (arg16,arg16))
variables in guard: ListBuffer()
Data flow:
arg13<-1
arg14<-0
arg15<-0
arg16<-0
Guard:
dataflow number:4
guard number:0
-------------
false :- inv_main8(z, x, y, w), x != y.
Head arguments: ListBuffer()
Body arguments: ListBuffer((z,z), (x,x), (y,y), (w,w))
Common Arguments:ListBuffer()
relativeComplimentOfHeadArg:ListBuffer()
variables in guard: ListBuffer(x, y)
Data flow:
Guard:
!((x + -1 * y) = 0)
dataflow number:0
guard number:1
Hints:
-----------
